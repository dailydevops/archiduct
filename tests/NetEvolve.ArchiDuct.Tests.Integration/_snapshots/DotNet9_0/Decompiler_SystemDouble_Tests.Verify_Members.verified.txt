{
  System.Private.CoreLib, Version=x.x.x.x, F:System.Double.E: {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, F:System.Double.E,
    Id: F:System.Double.E,
    Kind: Field,
    Modifiers: [
      Static,
      Const
    ],
    Name: E,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, F:System.Double.Epsilon: {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, F:System.Double.Epsilon,
    Id: F:System.Double.Epsilon,
    Kind: Field,
    Modifiers: [
      Static,
      Const
    ],
    Name: Epsilon,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, F:System.Double.m_value: {
    Accessibility: Private,
    FullName: System.Private.CoreLib, Version=x.x.x.x, F:System.Double.m_value,
    Id: F:System.Double.m_value,
    Kind: Field,
    Modifiers: [
      ReadOnly
    ],
    Name: m_value,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, F:System.Double.MaxValue: {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, F:System.Double.MaxValue,
    Id: F:System.Double.MaxValue,
    Kind: Field,
    Modifiers: [
      Static,
      Const
    ],
    Name: MaxValue,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, F:System.Double.MinValue: {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, F:System.Double.MinValue,
    Id: F:System.Double.MinValue,
    Kind: Field,
    Modifiers: [
      Static,
      Const
    ],
    Name: MinValue,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, F:System.Double.NaN: {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, F:System.Double.NaN,
    Id: F:System.Double.NaN,
    Kind: Field,
    Modifiers: [
      Static,
      Const
    ],
    Name: NaN,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, F:System.Double.NegativeInfinity: {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, F:System.Double.NegativeInfinity,
    Id: F:System.Double.NegativeInfinity,
    Kind: Field,
    Modifiers: [
      Static,
      Const
    ],
    Name: NegativeInfinity,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, F:System.Double.NegativeZero: {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, F:System.Double.NegativeZero,
    Id: F:System.Double.NegativeZero,
    Kind: Field,
    Modifiers: [
      Static,
      Const
    ],
    Name: NegativeZero,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, F:System.Double.Pi: {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, F:System.Double.Pi,
    Id: F:System.Double.Pi,
    Kind: Field,
    Modifiers: [
      Static,
      Const
    ],
    Name: Pi,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, F:System.Double.PositiveInfinity: {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, F:System.Double.PositiveInfinity,
    Id: F:System.Double.PositiveInfinity,
    Kind: Field,
    Modifiers: [
      Static,
      Const
    ],
    Name: PositiveInfinity,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, F:System.Double.Tau: {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, F:System.Double.Tau,
    Id: F:System.Double.Tau,
    Kind: Field,
    Modifiers: [
      Static,
      Const
    ],
    Name: Tau,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.#ctor: {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.#ctor,
    Id: M:System.Double.#ctor,
    Kind: Constructor,
    Name: .ctor,
    ParentId: T:System.Double
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Abs(System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IntrinsicAttribute,
        Id: T:System.Runtime.CompilerServices.IntrinsicAttribute,
        Kind: Attribute,
        Name: IntrinsicAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Abs(System.Double),
    Id: M:System.Double.Abs(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Abs,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Abs(System.Double).value,
        Id: M:System.Double.Abs(System.Double).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Double.Abs(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Acos(System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IntrinsicAttribute,
        Id: T:System.Runtime.CompilerServices.IntrinsicAttribute,
        Kind: Attribute,
        Name: IntrinsicAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Acos(System.Double),
    Id: M:System.Double.Acos(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Acos,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Acos(System.Double).x,
        Id: M:System.Double.Acos(System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.Acos(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Acosh(System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IntrinsicAttribute,
        Id: T:System.Runtime.CompilerServices.IntrinsicAttribute,
        Kind: Attribute,
        Name: IntrinsicAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Acosh(System.Double),
    Id: M:System.Double.Acosh(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Acosh,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Acosh(System.Double).x,
        Id: M:System.Double.Acosh(System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.Acosh(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.AcosPi(System.Double): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.AcosPi(System.Double),
    Id: M:System.Double.AcosPi(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: AcosPi,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.AcosPi(System.Double).x,
        Id: M:System.Double.AcosPi(System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.AcosPi(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Asin(System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IntrinsicAttribute,
        Id: T:System.Runtime.CompilerServices.IntrinsicAttribute,
        Kind: Attribute,
        Name: IntrinsicAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Asin(System.Double),
    Id: M:System.Double.Asin(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Asin,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Asin(System.Double).x,
        Id: M:System.Double.Asin(System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.Asin(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Asinh(System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IntrinsicAttribute,
        Id: T:System.Runtime.CompilerServices.IntrinsicAttribute,
        Kind: Attribute,
        Name: IntrinsicAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Asinh(System.Double),
    Id: M:System.Double.Asinh(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Asinh,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Asinh(System.Double).x,
        Id: M:System.Double.Asinh(System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.Asinh(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.AsinPi(System.Double): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.AsinPi(System.Double),
    Id: M:System.Double.AsinPi(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: AsinPi,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.AsinPi(System.Double).x,
        Id: M:System.Double.AsinPi(System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.AsinPi(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Atan(System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IntrinsicAttribute,
        Id: T:System.Runtime.CompilerServices.IntrinsicAttribute,
        Kind: Attribute,
        Name: IntrinsicAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Atan(System.Double),
    Id: M:System.Double.Atan(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Atan,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Atan(System.Double).x,
        Id: M:System.Double.Atan(System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.Atan(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Atan2(System.Double,System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IntrinsicAttribute,
        Id: T:System.Runtime.CompilerServices.IntrinsicAttribute,
        Kind: Attribute,
        Name: IntrinsicAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Atan2(System.Double,System.Double),
    Id: M:System.Double.Atan2(System.Double,System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Atan2,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Atan2(System.Double,System.Double).y,
        Id: M:System.Double.Atan2(System.Double,System.Double).y,
        Kind: Parameter,
        Name: y,
        ParentId: M:System.Double.Atan2(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Atan2(System.Double,System.Double).x,
        Id: M:System.Double.Atan2(System.Double,System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.Atan2(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Atan2Pi(System.Double,System.Double): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Atan2Pi(System.Double,System.Double),
    Id: M:System.Double.Atan2Pi(System.Double,System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Atan2Pi,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Atan2Pi(System.Double,System.Double).y,
        Id: M:System.Double.Atan2Pi(System.Double,System.Double).y,
        Kind: Parameter,
        Name: y,
        ParentId: M:System.Double.Atan2Pi(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Atan2Pi(System.Double,System.Double).x,
        Id: M:System.Double.Atan2Pi(System.Double,System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.Atan2Pi(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Atanh(System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IntrinsicAttribute,
        Id: T:System.Runtime.CompilerServices.IntrinsicAttribute,
        Kind: Attribute,
        Name: IntrinsicAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Atanh(System.Double),
    Id: M:System.Double.Atanh(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Atanh,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Atanh(System.Double).x,
        Id: M:System.Double.Atanh(System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.Atanh(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.AtanPi(System.Double): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.AtanPi(System.Double),
    Id: M:System.Double.AtanPi(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: AtanPi,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.AtanPi(System.Double).x,
        Id: M:System.Double.AtanPi(System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.AtanPi(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.BitDecrement(System.Double): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.BitDecrement(System.Double),
    Id: M:System.Double.BitDecrement(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: BitDecrement,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.BitDecrement(System.Double).x,
        Id: M:System.Double.BitDecrement(System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.BitDecrement(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.BitIncrement(System.Double): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.BitIncrement(System.Double),
    Id: M:System.Double.BitIncrement(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: BitIncrement,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.BitIncrement(System.Double).x,
        Id: M:System.Double.BitIncrement(System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.BitIncrement(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Cbrt(System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IntrinsicAttribute,
        Id: T:System.Runtime.CompilerServices.IntrinsicAttribute,
        Kind: Attribute,
        Name: IntrinsicAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Cbrt(System.Double),
    Id: M:System.Double.Cbrt(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Cbrt,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Cbrt(System.Double).x,
        Id: M:System.Double.Cbrt(System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.Cbrt(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Ceiling(System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IntrinsicAttribute,
        Id: T:System.Runtime.CompilerServices.IntrinsicAttribute,
        Kind: Attribute,
        Name: IntrinsicAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Ceiling(System.Double),
    Id: M:System.Double.Ceiling(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Ceiling,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Ceiling(System.Double).x,
        Id: M:System.Double.Ceiling(System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.Ceiling(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Clamp(System.Double,System.Double,System.Double): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Clamp(System.Double,System.Double,System.Double),
    Id: M:System.Double.Clamp(System.Double,System.Double,System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Clamp,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Clamp(System.Double,System.Double,System.Double).value,
        Id: M:System.Double.Clamp(System.Double,System.Double,System.Double).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Double.Clamp(System.Double,System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Clamp(System.Double,System.Double,System.Double).min,
        Id: M:System.Double.Clamp(System.Double,System.Double,System.Double).min,
        Kind: Parameter,
        Name: min,
        ParentId: M:System.Double.Clamp(System.Double,System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Clamp(System.Double,System.Double,System.Double).max,
        Id: M:System.Double.Clamp(System.Double,System.Double,System.Double).max,
        Kind: Parameter,
        Name: max,
        ParentId: M:System.Double.Clamp(System.Double,System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.CompareTo(System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.MethodImplAttribute,
        Id: T:System.Runtime.CompilerServices.MethodImplAttribute,
        Kind: Attribute,
        Name: MethodImplAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.CompareTo(System.Double),
    Id: M:System.Double.CompareTo(System.Double),
    IsLocal: false,
    Kind: Method,
    Name: CompareTo,
    OverloadedMembers: [
      M:System.Double.CompareTo(System.Object)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.CompareTo(System.Double).value,
        Id: M:System.Double.CompareTo(System.Double).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Double.CompareTo(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.CompareTo(System.Object): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.CompareTo(System.Object),
    Id: M:System.Double.CompareTo(System.Object),
    IsLocal: false,
    Kind: Method,
    Name: CompareTo,
    OverloadedMembers: [
      M:System.Double.CompareTo(System.Double)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.CompareTo(System.Object).value,
        Id: M:System.Double.CompareTo(System.Object).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Double.CompareTo(System.Object),
        Type: {
          Id: T:System.Object,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.ConvertToInteger``1(System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IntrinsicAttribute,
        Id: T:System.Runtime.CompilerServices.IntrinsicAttribute,
        Kind: Attribute,
        Name: IntrinsicAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.ConvertToInteger``1(System.Double),
    Id: M:System.Double.ConvertToInteger``1(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: ConvertToInteger,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.ConvertToInteger``1(System.Double).value,
        Id: M:System.Double.ConvertToInteger``1(System.Double).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Double.ConvertToInteger``1(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double.ConvertToInteger.TInteger,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.ConvertToInteger``1(System.Double).TInteger,
        Id: G:System.Double.ConvertToInteger``1(System.Double).TInteger,
        Kind: TypeParameter,
        Name: TInteger,
        ParentId: M:System.Double.ConvertToInteger``1(System.Double)
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.ConvertToIntegerNative``1(System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IntrinsicAttribute,
        Id: T:System.Runtime.CompilerServices.IntrinsicAttribute,
        Kind: Attribute,
        Name: IntrinsicAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.ConvertToIntegerNative``1(System.Double),
    Id: M:System.Double.ConvertToIntegerNative``1(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: ConvertToIntegerNative,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.ConvertToIntegerNative``1(System.Double).value,
        Id: M:System.Double.ConvertToIntegerNative``1(System.Double).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Double.ConvertToIntegerNative``1(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double.ConvertToIntegerNative.TInteger,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.ConvertToIntegerNative``1(System.Double).TInteger,
        Id: G:System.Double.ConvertToIntegerNative``1(System.Double).TInteger,
        Kind: TypeParameter,
        Name: TInteger,
        ParentId: M:System.Double.ConvertToIntegerNative``1(System.Double)
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.CopySign(System.Double,System.Double): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.CopySign(System.Double,System.Double),
    Id: M:System.Double.CopySign(System.Double,System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: CopySign,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.CopySign(System.Double,System.Double).value,
        Id: M:System.Double.CopySign(System.Double,System.Double).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Double.CopySign(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.CopySign(System.Double,System.Double).sign,
        Id: M:System.Double.CopySign(System.Double,System.Double).sign,
        Kind: Parameter,
        Name: sign,
        ParentId: M:System.Double.CopySign(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Cos(System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IntrinsicAttribute,
        Id: T:System.Runtime.CompilerServices.IntrinsicAttribute,
        Kind: Attribute,
        Name: IntrinsicAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Cos(System.Double),
    Id: M:System.Double.Cos(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Cos,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Cos(System.Double).x,
        Id: M:System.Double.Cos(System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.Cos(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.CosForIntervalPiBy4(System.Double,System.Double): {
    Accessibility: Private,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.MethodImplAttribute,
        Id: T:System.Runtime.CompilerServices.MethodImplAttribute,
        Kind: Attribute,
        Name: MethodImplAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.CosForIntervalPiBy4(System.Double,System.Double),
    Id: M:System.Double.CosForIntervalPiBy4(System.Double,System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: CosForIntervalPiBy4,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.CosForIntervalPiBy4(System.Double,System.Double).x,
        Id: M:System.Double.CosForIntervalPiBy4(System.Double,System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.CosForIntervalPiBy4(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.CosForIntervalPiBy4(System.Double,System.Double).xTail,
        Id: M:System.Double.CosForIntervalPiBy4(System.Double,System.Double).xTail,
        Kind: Parameter,
        Name: xTail,
        ParentId: M:System.Double.CosForIntervalPiBy4(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Cosh(System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IntrinsicAttribute,
        Id: T:System.Runtime.CompilerServices.IntrinsicAttribute,
        Kind: Attribute,
        Name: IntrinsicAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Cosh(System.Double),
    Id: M:System.Double.Cosh(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Cosh,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Cosh(System.Double).x,
        Id: M:System.Double.Cosh(System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.Cosh(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.CosPi(System.Double): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.CosPi(System.Double),
    Id: M:System.Double.CosPi(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: CosPi,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.CosPi(System.Double).x,
        Id: M:System.Double.CosPi(System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.CosPi(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.CreateChecked``1(``0): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.MethodImplAttribute,
        Id: T:System.Runtime.CompilerServices.MethodImplAttribute,
        Kind: Attribute,
        Name: MethodImplAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.CreateChecked``1(``0),
    Id: M:System.Double.CreateChecked``1(``0),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: CreateChecked,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.CreateChecked``1(``0).value,
        Id: M:System.Double.CreateChecked``1(``0).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Double.CreateChecked``1(``0),
        Type: {
          Id: T:System.Double.CreateChecked.TOther,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.CreateChecked``1(``0).TOther,
        Id: G:System.Double.CreateChecked``1(``0).TOther,
        Kind: TypeParameter,
        Name: TOther,
        ParentId: M:System.Double.CreateChecked``1(``0)
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.CreateSaturating``1(``0): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.MethodImplAttribute,
        Id: T:System.Runtime.CompilerServices.MethodImplAttribute,
        Kind: Attribute,
        Name: MethodImplAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.CreateSaturating``1(``0),
    Id: M:System.Double.CreateSaturating``1(``0),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: CreateSaturating,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.CreateSaturating``1(``0).value,
        Id: M:System.Double.CreateSaturating``1(``0).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Double.CreateSaturating``1(``0),
        Type: {
          Id: T:System.Double.CreateSaturating.TOther,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.CreateSaturating``1(``0).TOther,
        Id: G:System.Double.CreateSaturating``1(``0).TOther,
        Kind: TypeParameter,
        Name: TOther,
        ParentId: M:System.Double.CreateSaturating``1(``0)
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.CreateTruncating``1(``0): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.MethodImplAttribute,
        Id: T:System.Runtime.CompilerServices.MethodImplAttribute,
        Kind: Attribute,
        Name: MethodImplAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.CreateTruncating``1(``0),
    Id: M:System.Double.CreateTruncating``1(``0),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: CreateTruncating,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.CreateTruncating``1(``0).value,
        Id: M:System.Double.CreateTruncating``1(``0).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Double.CreateTruncating``1(``0),
        Type: {
          Id: T:System.Double.CreateTruncating.TOther,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.CreateTruncating``1(``0).TOther,
        Id: G:System.Double.CreateTruncating``1(``0).TOther,
        Kind: TypeParameter,
        Name: TOther,
        ParentId: M:System.Double.CreateTruncating``1(``0)
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.DegreesToRadians(System.Double): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.DegreesToRadians(System.Double),
    Id: M:System.Double.DegreesToRadians(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: DegreesToRadians,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.DegreesToRadians(System.Double).degrees,
        Id: M:System.Double.DegreesToRadians(System.Double).degrees,
        Kind: Parameter,
        Name: degrees,
        ParentId: M:System.Double.DegreesToRadians(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Equals(System.Double): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Equals(System.Double),
    Id: M:System.Double.Equals(System.Double),
    IsLocal: false,
    Kind: Method,
    Name: Equals,
    OverloadedMembers: [
      M:System.Double.Equals(System.Object)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Equals(System.Double).obj,
        Id: M:System.Double.Equals(System.Double).obj,
        Kind: Parameter,
        Name: obj,
        ParentId: M:System.Double.Equals(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Equals(System.Object): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute,
        Id: T:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute,
        Kind: Attribute,
        Name: UnconditionalSuppressMessageAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Equals(System.Object),
    Id: M:System.Double.Equals(System.Object),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Override
    ],
    Name: Equals,
    OverloadedMembers: [
      M:System.Double.Equals(System.Double)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Equals(System.Object).obj,
        Id: M:System.Double.Equals(System.Object).obj,
        Kind: Parameter,
        Name: obj,
        ParentId: M:System.Double.Equals(System.Object),
        Type: {
          Id: T:System.Object,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Exp(System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IntrinsicAttribute,
        Id: T:System.Runtime.CompilerServices.IntrinsicAttribute,
        Kind: Attribute,
        Name: IntrinsicAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Exp(System.Double),
    Id: M:System.Double.Exp(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Exp,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Exp(System.Double).x,
        Id: M:System.Double.Exp(System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.Exp(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Exp10(System.Double): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Exp10(System.Double),
    Id: M:System.Double.Exp10(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Exp10,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Exp10(System.Double).x,
        Id: M:System.Double.Exp10(System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.Exp10(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Exp10M1(System.Double): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Exp10M1(System.Double),
    Id: M:System.Double.Exp10M1(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Exp10M1,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Exp10M1(System.Double).x,
        Id: M:System.Double.Exp10M1(System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.Exp10M1(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Exp2(System.Double): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Exp2(System.Double),
    Id: M:System.Double.Exp2(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Exp2,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Exp2(System.Double).x,
        Id: M:System.Double.Exp2(System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.Exp2(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Exp2M1(System.Double): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Exp2M1(System.Double),
    Id: M:System.Double.Exp2M1(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Exp2M1,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Exp2M1(System.Double).x,
        Id: M:System.Double.Exp2M1(System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.Exp2M1(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.ExpM1(System.Double): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.ExpM1(System.Double),
    Id: M:System.Double.ExpM1(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: ExpM1,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.ExpM1(System.Double).x,
        Id: M:System.Double.ExpM1(System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.ExpM1(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.ExtractBiasedExponentFromBits(System.UInt64): {
    Accessibility: Internal,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.ExtractBiasedExponentFromBits(System.UInt64),
    Id: M:System.Double.ExtractBiasedExponentFromBits(System.UInt64),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: ExtractBiasedExponentFromBits,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.ExtractBiasedExponentFromBits(System.UInt64).bits,
        Id: M:System.Double.ExtractBiasedExponentFromBits(System.UInt64).bits,
        Kind: Parameter,
        Name: bits,
        ParentId: M:System.Double.ExtractBiasedExponentFromBits(System.UInt64),
        Type: {
          Id: T:System.UInt64,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.UInt16,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.ExtractTrailingSignificandFromBits(System.UInt64): {
    Accessibility: Internal,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.ExtractTrailingSignificandFromBits(System.UInt64),
    Id: M:System.Double.ExtractTrailingSignificandFromBits(System.UInt64),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: ExtractTrailingSignificandFromBits,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.ExtractTrailingSignificandFromBits(System.UInt64).bits,
        Id: M:System.Double.ExtractTrailingSignificandFromBits(System.UInt64).bits,
        Kind: Parameter,
        Name: bits,
        ParentId: M:System.Double.ExtractTrailingSignificandFromBits(System.UInt64),
        Type: {
          Id: T:System.UInt64,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.UInt64,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Floor(System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IntrinsicAttribute,
        Id: T:System.Runtime.CompilerServices.IntrinsicAttribute,
        Kind: Attribute,
        Name: IntrinsicAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Floor(System.Double),
    Id: M:System.Double.Floor(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Floor,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Floor(System.Double).x,
        Id: M:System.Double.Floor(System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.Floor(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.FusedMultiplyAdd(System.Double,System.Double,System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IntrinsicAttribute,
        Id: T:System.Runtime.CompilerServices.IntrinsicAttribute,
        Kind: Attribute,
        Name: IntrinsicAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.FusedMultiplyAdd(System.Double,System.Double,System.Double),
    Id: M:System.Double.FusedMultiplyAdd(System.Double,System.Double,System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: FusedMultiplyAdd,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.FusedMultiplyAdd(System.Double,System.Double,System.Double).left,
        Id: M:System.Double.FusedMultiplyAdd(System.Double,System.Double,System.Double).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Double.FusedMultiplyAdd(System.Double,System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.FusedMultiplyAdd(System.Double,System.Double,System.Double).right,
        Id: M:System.Double.FusedMultiplyAdd(System.Double,System.Double,System.Double).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Double.FusedMultiplyAdd(System.Double,System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.FusedMultiplyAdd(System.Double,System.Double,System.Double).addend,
        Id: M:System.Double.FusedMultiplyAdd(System.Double,System.Double,System.Double).addend,
        Kind: Parameter,
        Name: addend,
        ParentId: M:System.Double.FusedMultiplyAdd(System.Double,System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.GetHashCode: {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.MethodImplAttribute,
        Id: T:System.Runtime.CompilerServices.MethodImplAttribute,
        Kind: Attribute,
        Name: MethodImplAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.GetHashCode,
    Id: M:System.Double.GetHashCode,
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Override
    ],
    Name: GetHashCode,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.GetTypeCode: {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.GetTypeCode,
    Id: M:System.Double.GetTypeCode,
    IsLocal: false,
    Kind: Method,
    Name: GetTypeCode,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.TypeCode,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Hypot(System.Double,System.Double): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Hypot(System.Double,System.Double),
    Id: M:System.Double.Hypot(System.Double,System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Hypot,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Hypot(System.Double,System.Double).x,
        Id: M:System.Double.Hypot(System.Double,System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.Hypot(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Hypot(System.Double,System.Double).y,
        Id: M:System.Double.Hypot(System.Double,System.Double).y,
        Kind: Parameter,
        Name: y,
        ParentId: M:System.Double.Hypot(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Ieee754Remainder(System.Double,System.Double): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Ieee754Remainder(System.Double,System.Double),
    Id: M:System.Double.Ieee754Remainder(System.Double,System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Ieee754Remainder,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Ieee754Remainder(System.Double,System.Double).left,
        Id: M:System.Double.Ieee754Remainder(System.Double,System.Double).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Double.Ieee754Remainder(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Ieee754Remainder(System.Double,System.Double).right,
        Id: M:System.Double.Ieee754Remainder(System.Double,System.Double).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Double.Ieee754Remainder(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.ILogB(System.Double): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.ILogB(System.Double),
    Id: M:System.Double.ILogB(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: ILogB,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.ILogB(System.Double).x,
        Id: M:System.Double.ILogB(System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.ILogB(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsEvenInteger(System.Double): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsEvenInteger(System.Double),
    Id: M:System.Double.IsEvenInteger(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsEvenInteger,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsEvenInteger(System.Double).value,
        Id: M:System.Double.IsEvenInteger(System.Double).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Double.IsEvenInteger(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsFinite(System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.MethodImplAttribute,
        Id: T:System.Runtime.CompilerServices.MethodImplAttribute,
        Kind: Attribute,
        Name: MethodImplAttribute
      },
      {
        FullName: System.Runtime.Versioning.NonVersionableAttribute,
        Id: T:System.Runtime.Versioning.NonVersionableAttribute,
        Kind: Attribute,
        Name: NonVersionableAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsFinite(System.Double),
    Id: M:System.Double.IsFinite(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsFinite,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsFinite(System.Double).d,
        Id: M:System.Double.IsFinite(System.Double).d,
        Kind: Parameter,
        Name: d,
        ParentId: M:System.Double.IsFinite(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsInfinity(System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.MethodImplAttribute,
        Id: T:System.Runtime.CompilerServices.MethodImplAttribute,
        Kind: Attribute,
        Name: MethodImplAttribute
      },
      {
        FullName: System.Runtime.Versioning.NonVersionableAttribute,
        Id: T:System.Runtime.Versioning.NonVersionableAttribute,
        Kind: Attribute,
        Name: NonVersionableAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsInfinity(System.Double),
    Id: M:System.Double.IsInfinity(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsInfinity,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsInfinity(System.Double).d,
        Id: M:System.Double.IsInfinity(System.Double).d,
        Kind: Parameter,
        Name: d,
        ParentId: M:System.Double.IsInfinity(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsInteger(System.Double): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsInteger(System.Double),
    Id: M:System.Double.IsInteger(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsInteger,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsInteger(System.Double).value,
        Id: M:System.Double.IsInteger(System.Double).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Double.IsInteger(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsNaN(System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.MethodImplAttribute,
        Id: T:System.Runtime.CompilerServices.MethodImplAttribute,
        Kind: Attribute,
        Name: MethodImplAttribute
      },
      {
        FullName: System.Runtime.Versioning.NonVersionableAttribute,
        Id: T:System.Runtime.Versioning.NonVersionableAttribute,
        Kind: Attribute,
        Name: NonVersionableAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsNaN(System.Double),
    Id: M:System.Double.IsNaN(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsNaN,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsNaN(System.Double).d,
        Id: M:System.Double.IsNaN(System.Double).d,
        Kind: Parameter,
        Name: d,
        ParentId: M:System.Double.IsNaN(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsNaNOrZero(System.Double): {
    Accessibility: Internal,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.MethodImplAttribute,
        Id: T:System.Runtime.CompilerServices.MethodImplAttribute,
        Kind: Attribute,
        Name: MethodImplAttribute
      },
      {
        FullName: System.Runtime.Versioning.NonVersionableAttribute,
        Id: T:System.Runtime.Versioning.NonVersionableAttribute,
        Kind: Attribute,
        Name: NonVersionableAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsNaNOrZero(System.Double),
    Id: M:System.Double.IsNaNOrZero(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsNaNOrZero,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsNaNOrZero(System.Double).d,
        Id: M:System.Double.IsNaNOrZero(System.Double).d,
        Kind: Parameter,
        Name: d,
        ParentId: M:System.Double.IsNaNOrZero(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsNegative(System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.MethodImplAttribute,
        Id: T:System.Runtime.CompilerServices.MethodImplAttribute,
        Kind: Attribute,
        Name: MethodImplAttribute
      },
      {
        FullName: System.Runtime.Versioning.NonVersionableAttribute,
        Id: T:System.Runtime.Versioning.NonVersionableAttribute,
        Kind: Attribute,
        Name: NonVersionableAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsNegative(System.Double),
    Id: M:System.Double.IsNegative(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsNegative,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsNegative(System.Double).d,
        Id: M:System.Double.IsNegative(System.Double).d,
        Kind: Parameter,
        Name: d,
        ParentId: M:System.Double.IsNegative(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsNegativeInfinity(System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.MethodImplAttribute,
        Id: T:System.Runtime.CompilerServices.MethodImplAttribute,
        Kind: Attribute,
        Name: MethodImplAttribute
      },
      {
        FullName: System.Runtime.Versioning.NonVersionableAttribute,
        Id: T:System.Runtime.Versioning.NonVersionableAttribute,
        Kind: Attribute,
        Name: NonVersionableAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsNegativeInfinity(System.Double),
    Id: M:System.Double.IsNegativeInfinity(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsNegativeInfinity,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsNegativeInfinity(System.Double).d,
        Id: M:System.Double.IsNegativeInfinity(System.Double).d,
        Kind: Parameter,
        Name: d,
        ParentId: M:System.Double.IsNegativeInfinity(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsNormal(System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.MethodImplAttribute,
        Id: T:System.Runtime.CompilerServices.MethodImplAttribute,
        Kind: Attribute,
        Name: MethodImplAttribute
      },
      {
        FullName: System.Runtime.Versioning.NonVersionableAttribute,
        Id: T:System.Runtime.Versioning.NonVersionableAttribute,
        Kind: Attribute,
        Name: NonVersionableAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsNormal(System.Double),
    Id: M:System.Double.IsNormal(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsNormal,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsNormal(System.Double).d,
        Id: M:System.Double.IsNormal(System.Double).d,
        Kind: Parameter,
        Name: d,
        ParentId: M:System.Double.IsNormal(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsOddInteger(System.Double): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsOddInteger(System.Double),
    Id: M:System.Double.IsOddInteger(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsOddInteger,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsOddInteger(System.Double).value,
        Id: M:System.Double.IsOddInteger(System.Double).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Double.IsOddInteger(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsPositive(System.Double): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsPositive(System.Double),
    Id: M:System.Double.IsPositive(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsPositive,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsPositive(System.Double).value,
        Id: M:System.Double.IsPositive(System.Double).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Double.IsPositive(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsPositiveInfinity(System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.MethodImplAttribute,
        Id: T:System.Runtime.CompilerServices.MethodImplAttribute,
        Kind: Attribute,
        Name: MethodImplAttribute
      },
      {
        FullName: System.Runtime.Versioning.NonVersionableAttribute,
        Id: T:System.Runtime.Versioning.NonVersionableAttribute,
        Kind: Attribute,
        Name: NonVersionableAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsPositiveInfinity(System.Double),
    Id: M:System.Double.IsPositiveInfinity(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsPositiveInfinity,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsPositiveInfinity(System.Double).d,
        Id: M:System.Double.IsPositiveInfinity(System.Double).d,
        Kind: Parameter,
        Name: d,
        ParentId: M:System.Double.IsPositiveInfinity(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsPow2(System.Double): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsPow2(System.Double),
    Id: M:System.Double.IsPow2(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsPow2,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsPow2(System.Double).value,
        Id: M:System.Double.IsPow2(System.Double).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Double.IsPow2(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsRealNumber(System.Double): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsRealNumber(System.Double),
    Id: M:System.Double.IsRealNumber(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsRealNumber,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsRealNumber(System.Double).value,
        Id: M:System.Double.IsRealNumber(System.Double).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Double.IsRealNumber(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsSubnormal(System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.MethodImplAttribute,
        Id: T:System.Runtime.CompilerServices.MethodImplAttribute,
        Kind: Attribute,
        Name: MethodImplAttribute
      },
      {
        FullName: System.Runtime.Versioning.NonVersionableAttribute,
        Id: T:System.Runtime.Versioning.NonVersionableAttribute,
        Kind: Attribute,
        Name: NonVersionableAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsSubnormal(System.Double),
    Id: M:System.Double.IsSubnormal(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsSubnormal,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsSubnormal(System.Double).d,
        Id: M:System.Double.IsSubnormal(System.Double).d,
        Kind: Parameter,
        Name: d,
        ParentId: M:System.Double.IsSubnormal(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsZero(System.Double): {
    Accessibility: Internal,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.MethodImplAttribute,
        Id: T:System.Runtime.CompilerServices.MethodImplAttribute,
        Kind: Attribute,
        Name: MethodImplAttribute
      },
      {
        FullName: System.Runtime.Versioning.NonVersionableAttribute,
        Id: T:System.Runtime.Versioning.NonVersionableAttribute,
        Kind: Attribute,
        Name: NonVersionableAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsZero(System.Double),
    Id: M:System.Double.IsZero(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsZero,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.IsZero(System.Double).d,
        Id: M:System.Double.IsZero(System.Double).d,
        Kind: Parameter,
        Name: d,
        ParentId: M:System.Double.IsZero(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Lerp(System.Double,System.Double,System.Double): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Lerp(System.Double,System.Double,System.Double),
    Id: M:System.Double.Lerp(System.Double,System.Double,System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Lerp,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Lerp(System.Double,System.Double,System.Double).value1,
        Id: M:System.Double.Lerp(System.Double,System.Double,System.Double).value1,
        Kind: Parameter,
        Name: value1,
        ParentId: M:System.Double.Lerp(System.Double,System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Lerp(System.Double,System.Double,System.Double).value2,
        Id: M:System.Double.Lerp(System.Double,System.Double,System.Double).value2,
        Kind: Parameter,
        Name: value2,
        ParentId: M:System.Double.Lerp(System.Double,System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Lerp(System.Double,System.Double,System.Double).amount,
        Id: M:System.Double.Lerp(System.Double,System.Double,System.Double).amount,
        Kind: Parameter,
        Name: amount,
        ParentId: M:System.Double.Lerp(System.Double,System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Log(System.Double,System.Double): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Log(System.Double,System.Double),
    Id: M:System.Double.Log(System.Double,System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Log,
    OverloadedMembers: [
      M:System.Double.Log(System.Double)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Log(System.Double,System.Double).x,
        Id: M:System.Double.Log(System.Double,System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.Log(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Log(System.Double,System.Double).newBase,
        Id: M:System.Double.Log(System.Double,System.Double).newBase,
        Kind: Parameter,
        Name: newBase,
        ParentId: M:System.Double.Log(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Log(System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IntrinsicAttribute,
        Id: T:System.Runtime.CompilerServices.IntrinsicAttribute,
        Kind: Attribute,
        Name: IntrinsicAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Log(System.Double),
    Id: M:System.Double.Log(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Log,
    OverloadedMembers: [
      M:System.Double.Log(System.Double,System.Double)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Log(System.Double).x,
        Id: M:System.Double.Log(System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.Log(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Log10(System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IntrinsicAttribute,
        Id: T:System.Runtime.CompilerServices.IntrinsicAttribute,
        Kind: Attribute,
        Name: IntrinsicAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Log10(System.Double),
    Id: M:System.Double.Log10(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Log10,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Log10(System.Double).x,
        Id: M:System.Double.Log10(System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.Log10(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Log10P1(System.Double): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Log10P1(System.Double),
    Id: M:System.Double.Log10P1(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Log10P1,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Log10P1(System.Double).x,
        Id: M:System.Double.Log10P1(System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.Log10P1(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Log2(System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IntrinsicAttribute,
        Id: T:System.Runtime.CompilerServices.IntrinsicAttribute,
        Kind: Attribute,
        Name: IntrinsicAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Log2(System.Double),
    Id: M:System.Double.Log2(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Log2,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Log2(System.Double).value,
        Id: M:System.Double.Log2(System.Double).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Double.Log2(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Log2P1(System.Double): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Log2P1(System.Double),
    Id: M:System.Double.Log2P1(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Log2P1,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Log2P1(System.Double).x,
        Id: M:System.Double.Log2P1(System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.Log2P1(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.LogP1(System.Double): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.LogP1(System.Double),
    Id: M:System.Double.LogP1(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: LogP1,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.LogP1(System.Double).x,
        Id: M:System.Double.LogP1(System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.LogP1(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Max(System.Double,System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IntrinsicAttribute,
        Id: T:System.Runtime.CompilerServices.IntrinsicAttribute,
        Kind: Attribute,
        Name: IntrinsicAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Max(System.Double,System.Double),
    Id: M:System.Double.Max(System.Double,System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Max,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Max(System.Double,System.Double).x,
        Id: M:System.Double.Max(System.Double,System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.Max(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Max(System.Double,System.Double).y,
        Id: M:System.Double.Max(System.Double,System.Double).y,
        Kind: Parameter,
        Name: y,
        ParentId: M:System.Double.Max(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.MaxMagnitude(System.Double,System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IntrinsicAttribute,
        Id: T:System.Runtime.CompilerServices.IntrinsicAttribute,
        Kind: Attribute,
        Name: IntrinsicAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.MaxMagnitude(System.Double,System.Double),
    Id: M:System.Double.MaxMagnitude(System.Double,System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: MaxMagnitude,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.MaxMagnitude(System.Double,System.Double).x,
        Id: M:System.Double.MaxMagnitude(System.Double,System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.MaxMagnitude(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.MaxMagnitude(System.Double,System.Double).y,
        Id: M:System.Double.MaxMagnitude(System.Double,System.Double).y,
        Kind: Parameter,
        Name: y,
        ParentId: M:System.Double.MaxMagnitude(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.MaxMagnitudeNumber(System.Double,System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IntrinsicAttribute,
        Id: T:System.Runtime.CompilerServices.IntrinsicAttribute,
        Kind: Attribute,
        Name: IntrinsicAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.MaxMagnitudeNumber(System.Double,System.Double),
    Id: M:System.Double.MaxMagnitudeNumber(System.Double,System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: MaxMagnitudeNumber,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.MaxMagnitudeNumber(System.Double,System.Double).x,
        Id: M:System.Double.MaxMagnitudeNumber(System.Double,System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.MaxMagnitudeNumber(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.MaxMagnitudeNumber(System.Double,System.Double).y,
        Id: M:System.Double.MaxMagnitudeNumber(System.Double,System.Double).y,
        Kind: Parameter,
        Name: y,
        ParentId: M:System.Double.MaxMagnitudeNumber(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.MaxNumber(System.Double,System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IntrinsicAttribute,
        Id: T:System.Runtime.CompilerServices.IntrinsicAttribute,
        Kind: Attribute,
        Name: IntrinsicAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.MaxNumber(System.Double,System.Double),
    Id: M:System.Double.MaxNumber(System.Double,System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: MaxNumber,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.MaxNumber(System.Double,System.Double).x,
        Id: M:System.Double.MaxNumber(System.Double,System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.MaxNumber(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.MaxNumber(System.Double,System.Double).y,
        Id: M:System.Double.MaxNumber(System.Double,System.Double).y,
        Kind: Parameter,
        Name: y,
        ParentId: M:System.Double.MaxNumber(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Min(System.Double,System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IntrinsicAttribute,
        Id: T:System.Runtime.CompilerServices.IntrinsicAttribute,
        Kind: Attribute,
        Name: IntrinsicAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Min(System.Double,System.Double),
    Id: M:System.Double.Min(System.Double,System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Min,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Min(System.Double,System.Double).x,
        Id: M:System.Double.Min(System.Double,System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.Min(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Min(System.Double,System.Double).y,
        Id: M:System.Double.Min(System.Double,System.Double).y,
        Kind: Parameter,
        Name: y,
        ParentId: M:System.Double.Min(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.MinMagnitude(System.Double,System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IntrinsicAttribute,
        Id: T:System.Runtime.CompilerServices.IntrinsicAttribute,
        Kind: Attribute,
        Name: IntrinsicAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.MinMagnitude(System.Double,System.Double),
    Id: M:System.Double.MinMagnitude(System.Double,System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: MinMagnitude,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.MinMagnitude(System.Double,System.Double).x,
        Id: M:System.Double.MinMagnitude(System.Double,System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.MinMagnitude(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.MinMagnitude(System.Double,System.Double).y,
        Id: M:System.Double.MinMagnitude(System.Double,System.Double).y,
        Kind: Parameter,
        Name: y,
        ParentId: M:System.Double.MinMagnitude(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.MinMagnitudeNumber(System.Double,System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IntrinsicAttribute,
        Id: T:System.Runtime.CompilerServices.IntrinsicAttribute,
        Kind: Attribute,
        Name: IntrinsicAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.MinMagnitudeNumber(System.Double,System.Double),
    Id: M:System.Double.MinMagnitudeNumber(System.Double,System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: MinMagnitudeNumber,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.MinMagnitudeNumber(System.Double,System.Double).x,
        Id: M:System.Double.MinMagnitudeNumber(System.Double,System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.MinMagnitudeNumber(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.MinMagnitudeNumber(System.Double,System.Double).y,
        Id: M:System.Double.MinMagnitudeNumber(System.Double,System.Double).y,
        Kind: Parameter,
        Name: y,
        ParentId: M:System.Double.MinMagnitudeNumber(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.MinNumber(System.Double,System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IntrinsicAttribute,
        Id: T:System.Runtime.CompilerServices.IntrinsicAttribute,
        Kind: Attribute,
        Name: IntrinsicAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.MinNumber(System.Double,System.Double),
    Id: M:System.Double.MinNumber(System.Double,System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: MinNumber,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.MinNumber(System.Double,System.Double).x,
        Id: M:System.Double.MinNumber(System.Double,System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.MinNumber(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.MinNumber(System.Double,System.Double).y,
        Id: M:System.Double.MinNumber(System.Double,System.Double).y,
        Kind: Parameter,
        Name: y,
        ParentId: M:System.Double.MinNumber(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.MultiplyAddEstimate(System.Double,System.Double,System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IntrinsicAttribute,
        Id: T:System.Runtime.CompilerServices.IntrinsicAttribute,
        Kind: Attribute,
        Name: IntrinsicAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.MultiplyAddEstimate(System.Double,System.Double,System.Double),
    Id: M:System.Double.MultiplyAddEstimate(System.Double,System.Double,System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: MultiplyAddEstimate,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.MultiplyAddEstimate(System.Double,System.Double,System.Double).left,
        Id: M:System.Double.MultiplyAddEstimate(System.Double,System.Double,System.Double).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Double.MultiplyAddEstimate(System.Double,System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.MultiplyAddEstimate(System.Double,System.Double,System.Double).right,
        Id: M:System.Double.MultiplyAddEstimate(System.Double,System.Double,System.Double).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Double.MultiplyAddEstimate(System.Double,System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.MultiplyAddEstimate(System.Double,System.Double,System.Double).addend,
        Id: M:System.Double.MultiplyAddEstimate(System.Double,System.Double,System.Double).addend,
        Kind: Parameter,
        Name: addend,
        ParentId: M:System.Double.MultiplyAddEstimate(System.Double,System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.op_Equality(System.Double,System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.Versioning.NonVersionableAttribute,
        Id: T:System.Runtime.Versioning.NonVersionableAttribute,
        Kind: Attribute,
        Name: NonVersionableAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.op_Equality(System.Double,System.Double),
    Id: M:System.Double.op_Equality(System.Double,System.Double),
    Kind: Operator,
    Modifiers: [
      Static
    ],
    Name: op_Equality,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.op_Equality(System.Double,System.Double).left,
        Id: M:System.Double.op_Equality(System.Double,System.Double).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Double.op_Equality(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.op_Equality(System.Double,System.Double).right,
        Id: M:System.Double.op_Equality(System.Double,System.Double).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Double.op_Equality(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.op_GreaterThan(System.Double,System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.Versioning.NonVersionableAttribute,
        Id: T:System.Runtime.Versioning.NonVersionableAttribute,
        Kind: Attribute,
        Name: NonVersionableAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.op_GreaterThan(System.Double,System.Double),
    Id: M:System.Double.op_GreaterThan(System.Double,System.Double),
    Kind: Operator,
    Modifiers: [
      Static
    ],
    Name: op_GreaterThan,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.op_GreaterThan(System.Double,System.Double).left,
        Id: M:System.Double.op_GreaterThan(System.Double,System.Double).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Double.op_GreaterThan(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.op_GreaterThan(System.Double,System.Double).right,
        Id: M:System.Double.op_GreaterThan(System.Double,System.Double).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Double.op_GreaterThan(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.op_GreaterThanOrEqual(System.Double,System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.Versioning.NonVersionableAttribute,
        Id: T:System.Runtime.Versioning.NonVersionableAttribute,
        Kind: Attribute,
        Name: NonVersionableAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.op_GreaterThanOrEqual(System.Double,System.Double),
    Id: M:System.Double.op_GreaterThanOrEqual(System.Double,System.Double),
    Kind: Operator,
    Modifiers: [
      Static
    ],
    Name: op_GreaterThanOrEqual,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.op_GreaterThanOrEqual(System.Double,System.Double).left,
        Id: M:System.Double.op_GreaterThanOrEqual(System.Double,System.Double).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Double.op_GreaterThanOrEqual(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.op_GreaterThanOrEqual(System.Double,System.Double).right,
        Id: M:System.Double.op_GreaterThanOrEqual(System.Double,System.Double).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Double.op_GreaterThanOrEqual(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.op_Inequality(System.Double,System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.Versioning.NonVersionableAttribute,
        Id: T:System.Runtime.Versioning.NonVersionableAttribute,
        Kind: Attribute,
        Name: NonVersionableAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.op_Inequality(System.Double,System.Double),
    Id: M:System.Double.op_Inequality(System.Double,System.Double),
    Kind: Operator,
    Modifiers: [
      Static
    ],
    Name: op_Inequality,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.op_Inequality(System.Double,System.Double).left,
        Id: M:System.Double.op_Inequality(System.Double,System.Double).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Double.op_Inequality(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.op_Inequality(System.Double,System.Double).right,
        Id: M:System.Double.op_Inequality(System.Double,System.Double).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Double.op_Inequality(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.op_LessThan(System.Double,System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.Versioning.NonVersionableAttribute,
        Id: T:System.Runtime.Versioning.NonVersionableAttribute,
        Kind: Attribute,
        Name: NonVersionableAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.op_LessThan(System.Double,System.Double),
    Id: M:System.Double.op_LessThan(System.Double,System.Double),
    Kind: Operator,
    Modifiers: [
      Static
    ],
    Name: op_LessThan,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.op_LessThan(System.Double,System.Double).left,
        Id: M:System.Double.op_LessThan(System.Double,System.Double).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Double.op_LessThan(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.op_LessThan(System.Double,System.Double).right,
        Id: M:System.Double.op_LessThan(System.Double,System.Double).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Double.op_LessThan(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.op_LessThanOrEqual(System.Double,System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.Versioning.NonVersionableAttribute,
        Id: T:System.Runtime.Versioning.NonVersionableAttribute,
        Kind: Attribute,
        Name: NonVersionableAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.op_LessThanOrEqual(System.Double,System.Double),
    Id: M:System.Double.op_LessThanOrEqual(System.Double,System.Double),
    Kind: Operator,
    Modifiers: [
      Static
    ],
    Name: op_LessThanOrEqual,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.op_LessThanOrEqual(System.Double,System.Double).left,
        Id: M:System.Double.op_LessThanOrEqual(System.Double,System.Double).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Double.op_LessThanOrEqual(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.op_LessThanOrEqual(System.Double,System.Double).right,
        Id: M:System.Double.op_LessThanOrEqual(System.Double,System.Double).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Double.op_LessThanOrEqual(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Parse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Parse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider),
    Id: M:System.Double.Parse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Parse,
    OverloadedMembers: [
      M:System.Double.Parse(System.String),
      M:System.Double.Parse(System.String,System.Globalization.NumberStyles),
      M:System.Double.Parse(System.String,System.IFormatProvider),
      M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Double.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Double.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider),
      M:System.Double.Parse(System.ReadOnlySpan{System.Byte},System.IFormatProvider)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Parse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider).utf8Text,
        Id: M:System.Double.Parse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider).utf8Text,
        Kind: Parameter,
        Name: utf8Text,
        ParentId: M:System.Double.Parse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Byte]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Parse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider).style,
        Id: M:System.Double.Parse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider).style,
        Kind: Parameter,
        Name: style,
        OptionalValue: 231,
        ParentId: M:System.Double.Parse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider),
        Type: {
          Id: T:System.Globalization.NumberStyles,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Parse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider).provider,
        Id: M:System.Double.Parse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        OptionalValue: <null>,
        ParentId: M:System.Double.Parse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Parse(System.ReadOnlySpan{System.Byte},System.IFormatProvider): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Parse(System.ReadOnlySpan{System.Byte},System.IFormatProvider),
    Id: M:System.Double.Parse(System.ReadOnlySpan{System.Byte},System.IFormatProvider),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Parse,
    OverloadedMembers: [
      M:System.Double.Parse(System.String),
      M:System.Double.Parse(System.String,System.Globalization.NumberStyles),
      M:System.Double.Parse(System.String,System.IFormatProvider),
      M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Double.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Double.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider),
      M:System.Double.Parse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Parse(System.ReadOnlySpan{System.Byte},System.IFormatProvider).utf8Text,
        Id: M:System.Double.Parse(System.ReadOnlySpan{System.Byte},System.IFormatProvider).utf8Text,
        Kind: Parameter,
        Name: utf8Text,
        ParentId: M:System.Double.Parse(System.ReadOnlySpan{System.Byte},System.IFormatProvider),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Byte]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Parse(System.ReadOnlySpan{System.Byte},System.IFormatProvider).provider,
        Id: M:System.Double.Parse(System.ReadOnlySpan{System.Byte},System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Double.Parse(System.ReadOnlySpan{System.Byte},System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider),
    Id: M:System.Double.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Parse,
    OverloadedMembers: [
      M:System.Double.Parse(System.String),
      M:System.Double.Parse(System.String,System.Globalization.NumberStyles),
      M:System.Double.Parse(System.String,System.IFormatProvider),
      M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Double.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider),
      M:System.Double.Parse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Double.Parse(System.ReadOnlySpan{System.Byte},System.IFormatProvider)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider).s,
        Id: M:System.Double.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Double.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Char]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider).style,
        Id: M:System.Double.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider).style,
        Kind: Parameter,
        Name: style,
        OptionalValue: 231,
        ParentId: M:System.Double.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider),
        Type: {
          Id: T:System.Globalization.NumberStyles,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider).provider,
        Id: M:System.Double.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        OptionalValue: <null>,
        ParentId: M:System.Double.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider),
    Id: M:System.Double.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Parse,
    OverloadedMembers: [
      M:System.Double.Parse(System.String),
      M:System.Double.Parse(System.String,System.Globalization.NumberStyles),
      M:System.Double.Parse(System.String,System.IFormatProvider),
      M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Double.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Double.Parse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Double.Parse(System.ReadOnlySpan{System.Byte},System.IFormatProvider)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider).s,
        Id: M:System.Double.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Double.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Char]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider).provider,
        Id: M:System.Double.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Double.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider),
    Id: M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Parse,
    OverloadedMembers: [
      M:System.Double.Parse(System.String),
      M:System.Double.Parse(System.String,System.Globalization.NumberStyles),
      M:System.Double.Parse(System.String,System.IFormatProvider),
      M:System.Double.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Double.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider),
      M:System.Double.Parse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Double.Parse(System.ReadOnlySpan{System.Byte},System.IFormatProvider)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider).s,
        Id: M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider).style,
        Id: M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider).style,
        Kind: Parameter,
        Name: style,
        ParentId: M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider),
        Type: {
          Id: T:System.Globalization.NumberStyles,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider).provider,
        Id: M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Parse(System.String,System.Globalization.NumberStyles): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Parse(System.String,System.Globalization.NumberStyles),
    Id: M:System.Double.Parse(System.String,System.Globalization.NumberStyles),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Parse,
    OverloadedMembers: [
      M:System.Double.Parse(System.String),
      M:System.Double.Parse(System.String,System.IFormatProvider),
      M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Double.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Double.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider),
      M:System.Double.Parse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Double.Parse(System.ReadOnlySpan{System.Byte},System.IFormatProvider)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Parse(System.String,System.Globalization.NumberStyles).s,
        Id: M:System.Double.Parse(System.String,System.Globalization.NumberStyles).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Double.Parse(System.String,System.Globalization.NumberStyles),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Parse(System.String,System.Globalization.NumberStyles).style,
        Id: M:System.Double.Parse(System.String,System.Globalization.NumberStyles).style,
        Kind: Parameter,
        Name: style,
        ParentId: M:System.Double.Parse(System.String,System.Globalization.NumberStyles),
        Type: {
          Id: T:System.Globalization.NumberStyles,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Parse(System.String,System.IFormatProvider): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Parse(System.String,System.IFormatProvider),
    Id: M:System.Double.Parse(System.String,System.IFormatProvider),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Parse,
    OverloadedMembers: [
      M:System.Double.Parse(System.String),
      M:System.Double.Parse(System.String,System.Globalization.NumberStyles),
      M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Double.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Double.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider),
      M:System.Double.Parse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Double.Parse(System.ReadOnlySpan{System.Byte},System.IFormatProvider)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Parse(System.String,System.IFormatProvider).s,
        Id: M:System.Double.Parse(System.String,System.IFormatProvider).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Double.Parse(System.String,System.IFormatProvider),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Parse(System.String,System.IFormatProvider).provider,
        Id: M:System.Double.Parse(System.String,System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Double.Parse(System.String,System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Parse(System.String): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Parse(System.String),
    Id: M:System.Double.Parse(System.String),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Parse,
    OverloadedMembers: [
      M:System.Double.Parse(System.String,System.Globalization.NumberStyles),
      M:System.Double.Parse(System.String,System.IFormatProvider),
      M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Double.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Double.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider),
      M:System.Double.Parse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Double.Parse(System.ReadOnlySpan{System.Byte},System.IFormatProvider)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Parse(System.String).s,
        Id: M:System.Double.Parse(System.String).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Double.Parse(System.String),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Pow(System.Double,System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IntrinsicAttribute,
        Id: T:System.Runtime.CompilerServices.IntrinsicAttribute,
        Kind: Attribute,
        Name: IntrinsicAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Pow(System.Double,System.Double),
    Id: M:System.Double.Pow(System.Double,System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Pow,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Pow(System.Double,System.Double).x,
        Id: M:System.Double.Pow(System.Double,System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.Pow(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Pow(System.Double,System.Double).y,
        Id: M:System.Double.Pow(System.Double,System.Double).y,
        Kind: Parameter,
        Name: y,
        ParentId: M:System.Double.Pow(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.RadiansToDegrees(System.Double): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.RadiansToDegrees(System.Double),
    Id: M:System.Double.RadiansToDegrees(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: RadiansToDegrees,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.RadiansToDegrees(System.Double).radians,
        Id: M:System.Double.RadiansToDegrees(System.Double).radians,
        Kind: Parameter,
        Name: radians,
        ParentId: M:System.Double.RadiansToDegrees(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.ReciprocalEstimate(System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IntrinsicAttribute,
        Id: T:System.Runtime.CompilerServices.IntrinsicAttribute,
        Kind: Attribute,
        Name: IntrinsicAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.ReciprocalEstimate(System.Double),
    Id: M:System.Double.ReciprocalEstimate(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: ReciprocalEstimate,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.ReciprocalEstimate(System.Double).x,
        Id: M:System.Double.ReciprocalEstimate(System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.ReciprocalEstimate(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.ReciprocalSqrtEstimate(System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IntrinsicAttribute,
        Id: T:System.Runtime.CompilerServices.IntrinsicAttribute,
        Kind: Attribute,
        Name: IntrinsicAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.ReciprocalSqrtEstimate(System.Double),
    Id: M:System.Double.ReciprocalSqrtEstimate(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: ReciprocalSqrtEstimate,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.ReciprocalSqrtEstimate(System.Double).x,
        Id: M:System.Double.ReciprocalSqrtEstimate(System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.ReciprocalSqrtEstimate(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.RootN(System.Double,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.RootN(System.Double,System.Int32),
    Id: M:System.Double.RootN(System.Double,System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: RootN,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.RootN(System.Double,System.Int32).x,
        Id: M:System.Double.RootN(System.Double,System.Int32).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.RootN(System.Double,System.Int32),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.RootN(System.Double,System.Int32).n,
        Id: M:System.Double.RootN(System.Double,System.Int32).n,
        Kind: Parameter,
        Name: n,
        ParentId: M:System.Double.RootN(System.Double,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Round(System.Double,System.Int32,System.MidpointRounding): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Round(System.Double,System.Int32,System.MidpointRounding),
    Id: M:System.Double.Round(System.Double,System.Int32,System.MidpointRounding),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Round,
    OverloadedMembers: [
      M:System.Double.Round(System.Double),
      M:System.Double.Round(System.Double,System.Int32),
      M:System.Double.Round(System.Double,System.MidpointRounding)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Round(System.Double,System.Int32,System.MidpointRounding).x,
        Id: M:System.Double.Round(System.Double,System.Int32,System.MidpointRounding).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.Round(System.Double,System.Int32,System.MidpointRounding),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Round(System.Double,System.Int32,System.MidpointRounding).digits,
        Id: M:System.Double.Round(System.Double,System.Int32,System.MidpointRounding).digits,
        Kind: Parameter,
        Name: digits,
        ParentId: M:System.Double.Round(System.Double,System.Int32,System.MidpointRounding),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Round(System.Double,System.Int32,System.MidpointRounding).mode,
        Id: M:System.Double.Round(System.Double,System.Int32,System.MidpointRounding).mode,
        Kind: Parameter,
        Name: mode,
        ParentId: M:System.Double.Round(System.Double,System.Int32,System.MidpointRounding),
        Type: {
          Id: T:System.MidpointRounding,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Round(System.Double,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Round(System.Double,System.Int32),
    Id: M:System.Double.Round(System.Double,System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Round,
    OverloadedMembers: [
      M:System.Double.Round(System.Double),
      M:System.Double.Round(System.Double,System.MidpointRounding),
      M:System.Double.Round(System.Double,System.Int32,System.MidpointRounding)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Round(System.Double,System.Int32).x,
        Id: M:System.Double.Round(System.Double,System.Int32).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.Round(System.Double,System.Int32),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Round(System.Double,System.Int32).digits,
        Id: M:System.Double.Round(System.Double,System.Int32).digits,
        Kind: Parameter,
        Name: digits,
        ParentId: M:System.Double.Round(System.Double,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Round(System.Double,System.MidpointRounding): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Round(System.Double,System.MidpointRounding),
    Id: M:System.Double.Round(System.Double,System.MidpointRounding),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Round,
    OverloadedMembers: [
      M:System.Double.Round(System.Double),
      M:System.Double.Round(System.Double,System.Int32),
      M:System.Double.Round(System.Double,System.Int32,System.MidpointRounding)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Round(System.Double,System.MidpointRounding).x,
        Id: M:System.Double.Round(System.Double,System.MidpointRounding).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.Round(System.Double,System.MidpointRounding),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Round(System.Double,System.MidpointRounding).mode,
        Id: M:System.Double.Round(System.Double,System.MidpointRounding).mode,
        Kind: Parameter,
        Name: mode,
        ParentId: M:System.Double.Round(System.Double,System.MidpointRounding),
        Type: {
          Id: T:System.MidpointRounding,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Round(System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IntrinsicAttribute,
        Id: T:System.Runtime.CompilerServices.IntrinsicAttribute,
        Kind: Attribute,
        Name: IntrinsicAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Round(System.Double),
    Id: M:System.Double.Round(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Round,
    OverloadedMembers: [
      M:System.Double.Round(System.Double,System.Int32),
      M:System.Double.Round(System.Double,System.MidpointRounding),
      M:System.Double.Round(System.Double,System.Int32,System.MidpointRounding)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Round(System.Double).x,
        Id: M:System.Double.Round(System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.Round(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.ScaleB(System.Double,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.ScaleB(System.Double,System.Int32),
    Id: M:System.Double.ScaleB(System.Double,System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: ScaleB,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.ScaleB(System.Double,System.Int32).x,
        Id: M:System.Double.ScaleB(System.Double,System.Int32).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.ScaleB(System.Double,System.Int32),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.ScaleB(System.Double,System.Int32).n,
        Id: M:System.Double.ScaleB(System.Double,System.Int32).n,
        Kind: Parameter,
        Name: n,
        ParentId: M:System.Double.ScaleB(System.Double,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Sign(System.Double): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Sign(System.Double),
    Id: M:System.Double.Sign(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Sign,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Sign(System.Double).value,
        Id: M:System.Double.Sign(System.Double).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Double.Sign(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Sin(System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IntrinsicAttribute,
        Id: T:System.Runtime.CompilerServices.IntrinsicAttribute,
        Kind: Attribute,
        Name: IntrinsicAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Sin(System.Double),
    Id: M:System.Double.Sin(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Sin,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Sin(System.Double).x,
        Id: M:System.Double.Sin(System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.Sin(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.SinCos(System.Double): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.SinCos(System.Double),
    Id: M:System.Double.SinCos(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: SinCos,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.SinCos(System.Double).x,
        Id: M:System.Double.SinCos(System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.SinCos(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.ValueTuple`2[[System.Double],[System.Double]],
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.SinCosPi(System.Double): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.SinCosPi(System.Double),
    Id: M:System.Double.SinCosPi(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: SinCosPi,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.SinCosPi(System.Double).x,
        Id: M:System.Double.SinCosPi(System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.SinCosPi(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.ValueTuple`2[[System.Double],[System.Double]],
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.SinForIntervalPiBy4(System.Double,System.Double): {
    Accessibility: Private,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.MethodImplAttribute,
        Id: T:System.Runtime.CompilerServices.MethodImplAttribute,
        Kind: Attribute,
        Name: MethodImplAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.SinForIntervalPiBy4(System.Double,System.Double),
    Id: M:System.Double.SinForIntervalPiBy4(System.Double,System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: SinForIntervalPiBy4,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.SinForIntervalPiBy4(System.Double,System.Double).x,
        Id: M:System.Double.SinForIntervalPiBy4(System.Double,System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.SinForIntervalPiBy4(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.SinForIntervalPiBy4(System.Double,System.Double).xTail,
        Id: M:System.Double.SinForIntervalPiBy4(System.Double,System.Double).xTail,
        Kind: Parameter,
        Name: xTail,
        ParentId: M:System.Double.SinForIntervalPiBy4(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Sinh(System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IntrinsicAttribute,
        Id: T:System.Runtime.CompilerServices.IntrinsicAttribute,
        Kind: Attribute,
        Name: IntrinsicAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Sinh(System.Double),
    Id: M:System.Double.Sinh(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Sinh,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Sinh(System.Double).x,
        Id: M:System.Double.Sinh(System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.Sinh(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.SinPi(System.Double): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.SinPi(System.Double),
    Id: M:System.Double.SinPi(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: SinPi,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.SinPi(System.Double).x,
        Id: M:System.Double.SinPi(System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.SinPi(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Sqrt(System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IntrinsicAttribute,
        Id: T:System.Runtime.CompilerServices.IntrinsicAttribute,
        Kind: Attribute,
        Name: IntrinsicAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Sqrt(System.Double),
    Id: M:System.Double.Sqrt(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Sqrt,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Sqrt(System.Double).x,
        Id: M:System.Double.Sqrt(System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.Sqrt(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#BitsToFloat(System.UInt64): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#BitsToFloat(System.UInt64),
    Id: M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#BitsToFloat(System.UInt64),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.BitsToFloat,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#BitsToFloat(System.UInt64).bits,
        Id: M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#BitsToFloat(System.UInt64).bits,
        Kind: Parameter,
        Name: bits,
        ParentId: M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#BitsToFloat(System.UInt64),
        Type: {
          Id: T:System.UInt64,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#FloatToBits(System.Double): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#FloatToBits(System.Double),
    Id: M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#FloatToBits(System.Double),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.FloatToBits,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#FloatToBits(System.Double).value,
        Id: M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#FloatToBits(System.Double).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#FloatToBits(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.UInt64,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToBoolean(System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToBoolean(System.IFormatProvider),
    Id: M:System.Double.System#IConvertible#ToBoolean(System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IConvertible.ToBoolean,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToBoolean(System.IFormatProvider).provider,
        Id: M:System.Double.System#IConvertible#ToBoolean(System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Double.System#IConvertible#ToBoolean(System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToByte(System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToByte(System.IFormatProvider),
    Id: M:System.Double.System#IConvertible#ToByte(System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IConvertible.ToByte,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToByte(System.IFormatProvider).provider,
        Id: M:System.Double.System#IConvertible#ToByte(System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Double.System#IConvertible#ToByte(System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Byte,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToChar(System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToChar(System.IFormatProvider),
    Id: M:System.Double.System#IConvertible#ToChar(System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IConvertible.ToChar,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToChar(System.IFormatProvider).provider,
        Id: M:System.Double.System#IConvertible#ToChar(System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Double.System#IConvertible#ToChar(System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToDateTime(System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToDateTime(System.IFormatProvider),
    Id: M:System.Double.System#IConvertible#ToDateTime(System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IConvertible.ToDateTime,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToDateTime(System.IFormatProvider).provider,
        Id: M:System.Double.System#IConvertible#ToDateTime(System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Double.System#IConvertible#ToDateTime(System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.DateTime,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToDecimal(System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToDecimal(System.IFormatProvider),
    Id: M:System.Double.System#IConvertible#ToDecimal(System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IConvertible.ToDecimal,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToDecimal(System.IFormatProvider).provider,
        Id: M:System.Double.System#IConvertible#ToDecimal(System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Double.System#IConvertible#ToDecimal(System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Decimal,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToDouble(System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToDouble(System.IFormatProvider),
    Id: M:System.Double.System#IConvertible#ToDouble(System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IConvertible.ToDouble,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToDouble(System.IFormatProvider).provider,
        Id: M:System.Double.System#IConvertible#ToDouble(System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Double.System#IConvertible#ToDouble(System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToInt16(System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToInt16(System.IFormatProvider),
    Id: M:System.Double.System#IConvertible#ToInt16(System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IConvertible.ToInt16,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToInt16(System.IFormatProvider).provider,
        Id: M:System.Double.System#IConvertible#ToInt16(System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Double.System#IConvertible#ToInt16(System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Int16,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToInt32(System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToInt32(System.IFormatProvider),
    Id: M:System.Double.System#IConvertible#ToInt32(System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IConvertible.ToInt32,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToInt32(System.IFormatProvider).provider,
        Id: M:System.Double.System#IConvertible#ToInt32(System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Double.System#IConvertible#ToInt32(System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToInt64(System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToInt64(System.IFormatProvider),
    Id: M:System.Double.System#IConvertible#ToInt64(System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IConvertible.ToInt64,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToInt64(System.IFormatProvider).provider,
        Id: M:System.Double.System#IConvertible#ToInt64(System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Double.System#IConvertible#ToInt64(System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Int64,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToSByte(System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToSByte(System.IFormatProvider),
    Id: M:System.Double.System#IConvertible#ToSByte(System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IConvertible.ToSByte,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToSByte(System.IFormatProvider).provider,
        Id: M:System.Double.System#IConvertible#ToSByte(System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Double.System#IConvertible#ToSByte(System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.SByte,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToSingle(System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToSingle(System.IFormatProvider),
    Id: M:System.Double.System#IConvertible#ToSingle(System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IConvertible.ToSingle,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToSingle(System.IFormatProvider).provider,
        Id: M:System.Double.System#IConvertible#ToSingle(System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Double.System#IConvertible#ToSingle(System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Single,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToType(System.Type,System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToType(System.Type,System.IFormatProvider),
    Id: M:System.Double.System#IConvertible#ToType(System.Type,System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IConvertible.ToType,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToType(System.Type,System.IFormatProvider).type,
        Id: M:System.Double.System#IConvertible#ToType(System.Type,System.IFormatProvider).type,
        Kind: Parameter,
        Name: type,
        ParentId: M:System.Double.System#IConvertible#ToType(System.Type,System.IFormatProvider),
        Type: {
          Id: T:System.Type,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToType(System.Type,System.IFormatProvider).provider,
        Id: M:System.Double.System#IConvertible#ToType(System.Type,System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Double.System#IConvertible#ToType(System.Type,System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Object,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToUInt16(System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToUInt16(System.IFormatProvider),
    Id: M:System.Double.System#IConvertible#ToUInt16(System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IConvertible.ToUInt16,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToUInt16(System.IFormatProvider).provider,
        Id: M:System.Double.System#IConvertible#ToUInt16(System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Double.System#IConvertible#ToUInt16(System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.UInt16,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToUInt32(System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToUInt32(System.IFormatProvider),
    Id: M:System.Double.System#IConvertible#ToUInt32(System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IConvertible.ToUInt32,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToUInt32(System.IFormatProvider).provider,
        Id: M:System.Double.System#IConvertible#ToUInt32(System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Double.System#IConvertible#ToUInt32(System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.UInt32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToUInt64(System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToUInt64(System.IFormatProvider),
    Id: M:System.Double.System#IConvertible#ToUInt64(System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IConvertible.ToUInt64,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IConvertible#ToUInt64(System.IFormatProvider).provider,
        Id: M:System.Double.System#IConvertible#ToUInt64(System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Double.System#IConvertible#ToUInt64(System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.UInt64,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IAdditionOperators{System#Double,System#Double,System#Double}#op_Addition(System.Double,System.Double): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IAdditionOperators{System#Double,System#Double,System#Double}#op_Addition(System.Double,System.Double),
    Id: M:System.Double.System#Numerics#IAdditionOperators{System#Double,System#Double,System#Double}#op_Addition(System.Double,System.Double),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IAdditionOperators<System.Double,System.Double,System.Double>.op_Addition,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IAdditionOperators{System#Double,System#Double,System#Double}#op_Addition(System.Double,System.Double).left,
        Id: M:System.Double.System#Numerics#IAdditionOperators{System#Double,System#Double,System#Double}#op_Addition(System.Double,System.Double).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Double.System#Numerics#IAdditionOperators{System#Double,System#Double,System#Double}#op_Addition(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IAdditionOperators{System#Double,System#Double,System#Double}#op_Addition(System.Double,System.Double).right,
        Id: M:System.Double.System#Numerics#IAdditionOperators{System#Double,System#Double,System#Double}#op_Addition(System.Double,System.Double).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Double.System#Numerics#IAdditionOperators{System#Double,System#Double,System#Double}#op_Addition(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IBitwiseOperators{System#Double,System#Double,System#Double}#op_BitwiseAnd(System.Double,System.Double): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IBitwiseOperators{System#Double,System#Double,System#Double}#op_BitwiseAnd(System.Double,System.Double),
    Id: M:System.Double.System#Numerics#IBitwiseOperators{System#Double,System#Double,System#Double}#op_BitwiseAnd(System.Double,System.Double),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IBitwiseOperators<System.Double,System.Double,System.Double>.op_BitwiseAnd,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IBitwiseOperators{System#Double,System#Double,System#Double}#op_BitwiseAnd(System.Double,System.Double).left,
        Id: M:System.Double.System#Numerics#IBitwiseOperators{System#Double,System#Double,System#Double}#op_BitwiseAnd(System.Double,System.Double).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Double.System#Numerics#IBitwiseOperators{System#Double,System#Double,System#Double}#op_BitwiseAnd(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IBitwiseOperators{System#Double,System#Double,System#Double}#op_BitwiseAnd(System.Double,System.Double).right,
        Id: M:System.Double.System#Numerics#IBitwiseOperators{System#Double,System#Double,System#Double}#op_BitwiseAnd(System.Double,System.Double).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Double.System#Numerics#IBitwiseOperators{System#Double,System#Double,System#Double}#op_BitwiseAnd(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IBitwiseOperators{System#Double,System#Double,System#Double}#op_BitwiseOr(System.Double,System.Double): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IBitwiseOperators{System#Double,System#Double,System#Double}#op_BitwiseOr(System.Double,System.Double),
    Id: M:System.Double.System#Numerics#IBitwiseOperators{System#Double,System#Double,System#Double}#op_BitwiseOr(System.Double,System.Double),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IBitwiseOperators<System.Double,System.Double,System.Double>.op_BitwiseOr,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IBitwiseOperators{System#Double,System#Double,System#Double}#op_BitwiseOr(System.Double,System.Double).left,
        Id: M:System.Double.System#Numerics#IBitwiseOperators{System#Double,System#Double,System#Double}#op_BitwiseOr(System.Double,System.Double).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Double.System#Numerics#IBitwiseOperators{System#Double,System#Double,System#Double}#op_BitwiseOr(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IBitwiseOperators{System#Double,System#Double,System#Double}#op_BitwiseOr(System.Double,System.Double).right,
        Id: M:System.Double.System#Numerics#IBitwiseOperators{System#Double,System#Double,System#Double}#op_BitwiseOr(System.Double,System.Double).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Double.System#Numerics#IBitwiseOperators{System#Double,System#Double,System#Double}#op_BitwiseOr(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IBitwiseOperators{System#Double,System#Double,System#Double}#op_ExclusiveOr(System.Double,System.Double): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IBitwiseOperators{System#Double,System#Double,System#Double}#op_ExclusiveOr(System.Double,System.Double),
    Id: M:System.Double.System#Numerics#IBitwiseOperators{System#Double,System#Double,System#Double}#op_ExclusiveOr(System.Double,System.Double),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IBitwiseOperators<System.Double,System.Double,System.Double>.op_ExclusiveOr,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IBitwiseOperators{System#Double,System#Double,System#Double}#op_ExclusiveOr(System.Double,System.Double).left,
        Id: M:System.Double.System#Numerics#IBitwiseOperators{System#Double,System#Double,System#Double}#op_ExclusiveOr(System.Double,System.Double).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Double.System#Numerics#IBitwiseOperators{System#Double,System#Double,System#Double}#op_ExclusiveOr(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IBitwiseOperators{System#Double,System#Double,System#Double}#op_ExclusiveOr(System.Double,System.Double).right,
        Id: M:System.Double.System#Numerics#IBitwiseOperators{System#Double,System#Double,System#Double}#op_ExclusiveOr(System.Double,System.Double).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Double.System#Numerics#IBitwiseOperators{System#Double,System#Double,System#Double}#op_ExclusiveOr(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IBitwiseOperators{System#Double,System#Double,System#Double}#op_OnesComplement(System.Double): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IBitwiseOperators{System#Double,System#Double,System#Double}#op_OnesComplement(System.Double),
    Id: M:System.Double.System#Numerics#IBitwiseOperators{System#Double,System#Double,System#Double}#op_OnesComplement(System.Double),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IBitwiseOperators<System.Double,System.Double,System.Double>.op_OnesComplement,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IBitwiseOperators{System#Double,System#Double,System#Double}#op_OnesComplement(System.Double).value,
        Id: M:System.Double.System#Numerics#IBitwiseOperators{System#Double,System#Double,System#Double}#op_OnesComplement(System.Double).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Double.System#Numerics#IBitwiseOperators{System#Double,System#Double,System#Double}#op_OnesComplement(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IDecrementOperators{System#Double}#op_Decrement(System.Double): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IDecrementOperators{System#Double}#op_Decrement(System.Double),
    Id: M:System.Double.System#Numerics#IDecrementOperators{System#Double}#op_Decrement(System.Double),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IDecrementOperators<System.Double>.op_Decrement,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IDecrementOperators{System#Double}#op_Decrement(System.Double).value,
        Id: M:System.Double.System#Numerics#IDecrementOperators{System#Double}#op_Decrement(System.Double).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Double.System#Numerics#IDecrementOperators{System#Double}#op_Decrement(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IDivisionOperators{System#Double,System#Double,System#Double}#op_Division(System.Double,System.Double): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IDivisionOperators{System#Double,System#Double,System#Double}#op_Division(System.Double,System.Double),
    Id: M:System.Double.System#Numerics#IDivisionOperators{System#Double,System#Double,System#Double}#op_Division(System.Double,System.Double),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IDivisionOperators<System.Double,System.Double,System.Double>.op_Division,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IDivisionOperators{System#Double,System#Double,System#Double}#op_Division(System.Double,System.Double).left,
        Id: M:System.Double.System#Numerics#IDivisionOperators{System#Double,System#Double,System#Double}#op_Division(System.Double,System.Double).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Double.System#Numerics#IDivisionOperators{System#Double,System#Double,System#Double}#op_Division(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IDivisionOperators{System#Double,System#Double,System#Double}#op_Division(System.Double,System.Double).right,
        Id: M:System.Double.System#Numerics#IDivisionOperators{System#Double,System#Double,System#Double}#op_Division(System.Double,System.Double).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Double.System#Numerics#IDivisionOperators{System#Double,System#Double,System#Double}#op_Division(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IFloatingPoint{System#Double}#GetExponentByteCount: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IFloatingPoint{System#Double}#GetExponentByteCount,
    Id: M:System.Double.System#Numerics#IFloatingPoint{System#Double}#GetExponentByteCount,
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.Numerics.IFloatingPoint<System.Double>.GetExponentByteCount,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IFloatingPoint{System#Double}#GetExponentShortestBitLength: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IFloatingPoint{System#Double}#GetExponentShortestBitLength,
    Id: M:System.Double.System#Numerics#IFloatingPoint{System#Double}#GetExponentShortestBitLength,
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.Numerics.IFloatingPoint<System.Double>.GetExponentShortestBitLength,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IFloatingPoint{System#Double}#GetSignificandBitLength: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IFloatingPoint{System#Double}#GetSignificandBitLength,
    Id: M:System.Double.System#Numerics#IFloatingPoint{System#Double}#GetSignificandBitLength,
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.Numerics.IFloatingPoint<System.Double>.GetSignificandBitLength,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IFloatingPoint{System#Double}#GetSignificandByteCount: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IFloatingPoint{System#Double}#GetSignificandByteCount,
    Id: M:System.Double.System#Numerics#IFloatingPoint{System#Double}#GetSignificandByteCount,
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.Numerics.IFloatingPoint<System.Double>.GetSignificandByteCount,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IFloatingPoint{System#Double}#TryWriteExponentBigEndian(System.Span{System.Byte},System.Int32@): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IFloatingPoint{System#Double}#TryWriteExponentBigEndian(System.Span{System.Byte},System.Int32@),
    Id: M:System.Double.System#Numerics#IFloatingPoint{System#Double}#TryWriteExponentBigEndian(System.Span{System.Byte},System.Int32@),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.Numerics.IFloatingPoint<System.Double>.TryWriteExponentBigEndian,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IFloatingPoint{System#Double}#TryWriteExponentBigEndian(System.Span{System.Byte},System.Int32@).destination,
        Id: M:System.Double.System#Numerics#IFloatingPoint{System#Double}#TryWriteExponentBigEndian(System.Span{System.Byte},System.Int32@).destination,
        Kind: Parameter,
        Name: destination,
        ParentId: M:System.Double.System#Numerics#IFloatingPoint{System#Double}#TryWriteExponentBigEndian(System.Span{System.Byte},System.Int32@),
        Type: {
          Id: T:System.Span`1[[System.Byte]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IFloatingPoint{System#Double}#TryWriteExponentBigEndian(System.Span{System.Byte},System.Int32@).bytesWritten,
        Id: M:System.Double.System#Numerics#IFloatingPoint{System#Double}#TryWriteExponentBigEndian(System.Span{System.Byte},System.Int32@).bytesWritten,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: bytesWritten,
        ParentId: M:System.Double.System#Numerics#IFloatingPoint{System#Double}#TryWriteExponentBigEndian(System.Span{System.Byte},System.Int32@),
        Type: {
          Id: T:System.Int32&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IFloatingPoint{System#Double}#TryWriteExponentLittleEndian(System.Span{System.Byte},System.Int32@): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IFloatingPoint{System#Double}#TryWriteExponentLittleEndian(System.Span{System.Byte},System.Int32@),
    Id: M:System.Double.System#Numerics#IFloatingPoint{System#Double}#TryWriteExponentLittleEndian(System.Span{System.Byte},System.Int32@),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.Numerics.IFloatingPoint<System.Double>.TryWriteExponentLittleEndian,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IFloatingPoint{System#Double}#TryWriteExponentLittleEndian(System.Span{System.Byte},System.Int32@).destination,
        Id: M:System.Double.System#Numerics#IFloatingPoint{System#Double}#TryWriteExponentLittleEndian(System.Span{System.Byte},System.Int32@).destination,
        Kind: Parameter,
        Name: destination,
        ParentId: M:System.Double.System#Numerics#IFloatingPoint{System#Double}#TryWriteExponentLittleEndian(System.Span{System.Byte},System.Int32@),
        Type: {
          Id: T:System.Span`1[[System.Byte]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IFloatingPoint{System#Double}#TryWriteExponentLittleEndian(System.Span{System.Byte},System.Int32@).bytesWritten,
        Id: M:System.Double.System#Numerics#IFloatingPoint{System#Double}#TryWriteExponentLittleEndian(System.Span{System.Byte},System.Int32@).bytesWritten,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: bytesWritten,
        ParentId: M:System.Double.System#Numerics#IFloatingPoint{System#Double}#TryWriteExponentLittleEndian(System.Span{System.Byte},System.Int32@),
        Type: {
          Id: T:System.Int32&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IFloatingPoint{System#Double}#TryWriteSignificandBigEndian(System.Span{System.Byte},System.Int32@): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IFloatingPoint{System#Double}#TryWriteSignificandBigEndian(System.Span{System.Byte},System.Int32@),
    Id: M:System.Double.System#Numerics#IFloatingPoint{System#Double}#TryWriteSignificandBigEndian(System.Span{System.Byte},System.Int32@),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.Numerics.IFloatingPoint<System.Double>.TryWriteSignificandBigEndian,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IFloatingPoint{System#Double}#TryWriteSignificandBigEndian(System.Span{System.Byte},System.Int32@).destination,
        Id: M:System.Double.System#Numerics#IFloatingPoint{System#Double}#TryWriteSignificandBigEndian(System.Span{System.Byte},System.Int32@).destination,
        Kind: Parameter,
        Name: destination,
        ParentId: M:System.Double.System#Numerics#IFloatingPoint{System#Double}#TryWriteSignificandBigEndian(System.Span{System.Byte},System.Int32@),
        Type: {
          Id: T:System.Span`1[[System.Byte]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IFloatingPoint{System#Double}#TryWriteSignificandBigEndian(System.Span{System.Byte},System.Int32@).bytesWritten,
        Id: M:System.Double.System#Numerics#IFloatingPoint{System#Double}#TryWriteSignificandBigEndian(System.Span{System.Byte},System.Int32@).bytesWritten,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: bytesWritten,
        ParentId: M:System.Double.System#Numerics#IFloatingPoint{System#Double}#TryWriteSignificandBigEndian(System.Span{System.Byte},System.Int32@),
        Type: {
          Id: T:System.Int32&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IFloatingPoint{System#Double}#TryWriteSignificandLittleEndian(System.Span{System.Byte},System.Int32@): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IFloatingPoint{System#Double}#TryWriteSignificandLittleEndian(System.Span{System.Byte},System.Int32@),
    Id: M:System.Double.System#Numerics#IFloatingPoint{System#Double}#TryWriteSignificandLittleEndian(System.Span{System.Byte},System.Int32@),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.Numerics.IFloatingPoint<System.Double>.TryWriteSignificandLittleEndian,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IFloatingPoint{System#Double}#TryWriteSignificandLittleEndian(System.Span{System.Byte},System.Int32@).destination,
        Id: M:System.Double.System#Numerics#IFloatingPoint{System#Double}#TryWriteSignificandLittleEndian(System.Span{System.Byte},System.Int32@).destination,
        Kind: Parameter,
        Name: destination,
        ParentId: M:System.Double.System#Numerics#IFloatingPoint{System#Double}#TryWriteSignificandLittleEndian(System.Span{System.Byte},System.Int32@),
        Type: {
          Id: T:System.Span`1[[System.Byte]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IFloatingPoint{System#Double}#TryWriteSignificandLittleEndian(System.Span{System.Byte},System.Int32@).bytesWritten,
        Id: M:System.Double.System#Numerics#IFloatingPoint{System#Double}#TryWriteSignificandLittleEndian(System.Span{System.Byte},System.Int32@).bytesWritten,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: bytesWritten,
        ParentId: M:System.Double.System#Numerics#IFloatingPoint{System#Double}#TryWriteSignificandLittleEndian(System.Span{System.Byte},System.Int32@),
        Type: {
          Id: T:System.Int32&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IIncrementOperators{System#Double}#op_Increment(System.Double): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IIncrementOperators{System#Double}#op_Increment(System.Double),
    Id: M:System.Double.System#Numerics#IIncrementOperators{System#Double}#op_Increment(System.Double),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IIncrementOperators<System.Double>.op_Increment,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IIncrementOperators{System#Double}#op_Increment(System.Double).value,
        Id: M:System.Double.System#Numerics#IIncrementOperators{System#Double}#op_Increment(System.Double).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Double.System#Numerics#IIncrementOperators{System#Double}#op_Increment(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IModulusOperators{System#Double,System#Double,System#Double}#op_Modulus(System.Double,System.Double): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IModulusOperators{System#Double,System#Double,System#Double}#op_Modulus(System.Double,System.Double),
    Id: M:System.Double.System#Numerics#IModulusOperators{System#Double,System#Double,System#Double}#op_Modulus(System.Double,System.Double),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IModulusOperators<System.Double,System.Double,System.Double>.op_Modulus,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IModulusOperators{System#Double,System#Double,System#Double}#op_Modulus(System.Double,System.Double).left,
        Id: M:System.Double.System#Numerics#IModulusOperators{System#Double,System#Double,System#Double}#op_Modulus(System.Double,System.Double).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Double.System#Numerics#IModulusOperators{System#Double,System#Double,System#Double}#op_Modulus(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IModulusOperators{System#Double,System#Double,System#Double}#op_Modulus(System.Double,System.Double).right,
        Id: M:System.Double.System#Numerics#IModulusOperators{System#Double,System#Double,System#Double}#op_Modulus(System.Double,System.Double).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Double.System#Numerics#IModulusOperators{System#Double,System#Double,System#Double}#op_Modulus(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IMultiplyOperators{System#Double,System#Double,System#Double}#op_Multiply(System.Double,System.Double): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IMultiplyOperators{System#Double,System#Double,System#Double}#op_Multiply(System.Double,System.Double),
    Id: M:System.Double.System#Numerics#IMultiplyOperators{System#Double,System#Double,System#Double}#op_Multiply(System.Double,System.Double),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IMultiplyOperators<System.Double,System.Double,System.Double>.op_Multiply,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IMultiplyOperators{System#Double,System#Double,System#Double}#op_Multiply(System.Double,System.Double).left,
        Id: M:System.Double.System#Numerics#IMultiplyOperators{System#Double,System#Double,System#Double}#op_Multiply(System.Double,System.Double).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Double.System#Numerics#IMultiplyOperators{System#Double,System#Double,System#Double}#op_Multiply(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IMultiplyOperators{System#Double,System#Double,System#Double}#op_Multiply(System.Double,System.Double).right,
        Id: M:System.Double.System#Numerics#IMultiplyOperators{System#Double,System#Double,System#Double}#op_Multiply(System.Double,System.Double).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Double.System#Numerics#IMultiplyOperators{System#Double,System#Double,System#Double}#op_Multiply(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#INumberBase{System#Double}#IsCanonical(System.Double): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#INumberBase{System#Double}#IsCanonical(System.Double),
    Id: M:System.Double.System#Numerics#INumberBase{System#Double}#IsCanonical(System.Double),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Double>.IsCanonical,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#INumberBase{System#Double}#IsCanonical(System.Double).value,
        Id: M:System.Double.System#Numerics#INumberBase{System#Double}#IsCanonical(System.Double).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Double.System#Numerics#INumberBase{System#Double}#IsCanonical(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#INumberBase{System#Double}#IsComplexNumber(System.Double): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#INumberBase{System#Double}#IsComplexNumber(System.Double),
    Id: M:System.Double.System#Numerics#INumberBase{System#Double}#IsComplexNumber(System.Double),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Double>.IsComplexNumber,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#INumberBase{System#Double}#IsComplexNumber(System.Double).value,
        Id: M:System.Double.System#Numerics#INumberBase{System#Double}#IsComplexNumber(System.Double).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Double.System#Numerics#INumberBase{System#Double}#IsComplexNumber(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#INumberBase{System#Double}#IsImaginaryNumber(System.Double): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#INumberBase{System#Double}#IsImaginaryNumber(System.Double),
    Id: M:System.Double.System#Numerics#INumberBase{System#Double}#IsImaginaryNumber(System.Double),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Double>.IsImaginaryNumber,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#INumberBase{System#Double}#IsImaginaryNumber(System.Double).value,
        Id: M:System.Double.System#Numerics#INumberBase{System#Double}#IsImaginaryNumber(System.Double).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Double.System#Numerics#INumberBase{System#Double}#IsImaginaryNumber(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#INumberBase{System#Double}#IsZero(System.Double): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#INumberBase{System#Double}#IsZero(System.Double),
    Id: M:System.Double.System#Numerics#INumberBase{System#Double}#IsZero(System.Double),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Double>.IsZero,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#INumberBase{System#Double}#IsZero(System.Double).value,
        Id: M:System.Double.System#Numerics#INumberBase{System#Double}#IsZero(System.Double).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Double.System#Numerics#INumberBase{System#Double}#IsZero(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertFromChecked``1(``0,System.Double@): {
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.MethodImplAttribute,
        Id: T:System.Runtime.CompilerServices.MethodImplAttribute,
        Kind: Attribute,
        Name: MethodImplAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertFromChecked``1(``0,System.Double@),
    Id: M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertFromChecked``1(``0,System.Double@),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Double>.TryConvertFromChecked,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertFromChecked``1(``0,System.Double@).value,
        Id: M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertFromChecked``1(``0,System.Double@).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertFromChecked``1(``0,System.Double@),
        Type: {
          Id: T:System.Double.System.Numerics.INumberBase<System.Double>.TryConvertFromChecked.TOther,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertFromChecked``1(``0,System.Double@).result,
        Id: M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertFromChecked``1(``0,System.Double@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertFromChecked``1(``0,System.Double@),
        Type: {
          Id: T:System.Double&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertFromChecked``1(``0,System.Double@).TOther,
        Id: G:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertFromChecked``1(``0,System.Double@).TOther,
        Kind: TypeParameter,
        Name: TOther,
        ParentId: M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertFromChecked``1(``0,System.Double@)
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertFromSaturating``1(``0,System.Double@): {
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.MethodImplAttribute,
        Id: T:System.Runtime.CompilerServices.MethodImplAttribute,
        Kind: Attribute,
        Name: MethodImplAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertFromSaturating``1(``0,System.Double@),
    Id: M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertFromSaturating``1(``0,System.Double@),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Double>.TryConvertFromSaturating,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertFromSaturating``1(``0,System.Double@).value,
        Id: M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertFromSaturating``1(``0,System.Double@).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertFromSaturating``1(``0,System.Double@),
        Type: {
          Id: T:System.Double.System.Numerics.INumberBase<System.Double>.TryConvertFromSaturating.TOther,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertFromSaturating``1(``0,System.Double@).result,
        Id: M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertFromSaturating``1(``0,System.Double@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertFromSaturating``1(``0,System.Double@),
        Type: {
          Id: T:System.Double&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertFromSaturating``1(``0,System.Double@).TOther,
        Id: G:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertFromSaturating``1(``0,System.Double@).TOther,
        Kind: TypeParameter,
        Name: TOther,
        ParentId: M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertFromSaturating``1(``0,System.Double@)
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertFromTruncating``1(``0,System.Double@): {
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.MethodImplAttribute,
        Id: T:System.Runtime.CompilerServices.MethodImplAttribute,
        Kind: Attribute,
        Name: MethodImplAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertFromTruncating``1(``0,System.Double@),
    Id: M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertFromTruncating``1(``0,System.Double@),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Double>.TryConvertFromTruncating,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertFromTruncating``1(``0,System.Double@).value,
        Id: M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertFromTruncating``1(``0,System.Double@).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertFromTruncating``1(``0,System.Double@),
        Type: {
          Id: T:System.Double.System.Numerics.INumberBase<System.Double>.TryConvertFromTruncating.TOther,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertFromTruncating``1(``0,System.Double@).result,
        Id: M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertFromTruncating``1(``0,System.Double@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertFromTruncating``1(``0,System.Double@),
        Type: {
          Id: T:System.Double&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertFromTruncating``1(``0,System.Double@).TOther,
        Id: G:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertFromTruncating``1(``0,System.Double@).TOther,
        Kind: TypeParameter,
        Name: TOther,
        ParentId: M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertFromTruncating``1(``0,System.Double@)
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertToChecked``1(System.Double,``0@): {
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.MethodImplAttribute,
        Id: T:System.Runtime.CompilerServices.MethodImplAttribute,
        Kind: Attribute,
        Name: MethodImplAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertToChecked``1(System.Double,``0@),
    Id: M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertToChecked``1(System.Double,``0@),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Double>.TryConvertToChecked,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertToChecked``1(System.Double,``0@).value,
        Id: M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertToChecked``1(System.Double,``0@).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertToChecked``1(System.Double,``0@),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertToChecked``1(System.Double,``0@).result,
        Id: M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertToChecked``1(System.Double,``0@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertToChecked``1(System.Double,``0@),
        Type: {
          Id: T:``0&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertToChecked``1(System.Double,``0@).TOther,
        Id: G:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertToChecked``1(System.Double,``0@).TOther,
        Kind: TypeParameter,
        Name: TOther,
        ParentId: M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertToChecked``1(System.Double,``0@)
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertToSaturating``1(System.Double,``0@): {
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.MethodImplAttribute,
        Id: T:System.Runtime.CompilerServices.MethodImplAttribute,
        Kind: Attribute,
        Name: MethodImplAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertToSaturating``1(System.Double,``0@),
    Id: M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertToSaturating``1(System.Double,``0@),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Double>.TryConvertToSaturating,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertToSaturating``1(System.Double,``0@).value,
        Id: M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertToSaturating``1(System.Double,``0@).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertToSaturating``1(System.Double,``0@),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertToSaturating``1(System.Double,``0@).result,
        Id: M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertToSaturating``1(System.Double,``0@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertToSaturating``1(System.Double,``0@),
        Type: {
          Id: T:``0&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertToSaturating``1(System.Double,``0@).TOther,
        Id: G:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertToSaturating``1(System.Double,``0@).TOther,
        Kind: TypeParameter,
        Name: TOther,
        ParentId: M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertToSaturating``1(System.Double,``0@)
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertToTruncating``1(System.Double,``0@): {
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.MethodImplAttribute,
        Id: T:System.Runtime.CompilerServices.MethodImplAttribute,
        Kind: Attribute,
        Name: MethodImplAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertToTruncating``1(System.Double,``0@),
    Id: M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertToTruncating``1(System.Double,``0@),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Double>.TryConvertToTruncating,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertToTruncating``1(System.Double,``0@).value,
        Id: M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertToTruncating``1(System.Double,``0@).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertToTruncating``1(System.Double,``0@),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertToTruncating``1(System.Double,``0@).result,
        Id: M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertToTruncating``1(System.Double,``0@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertToTruncating``1(System.Double,``0@),
        Type: {
          Id: T:``0&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertToTruncating``1(System.Double,``0@).TOther,
        Id: G:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertToTruncating``1(System.Double,``0@).TOther,
        Kind: TypeParameter,
        Name: TOther,
        ParentId: M:System.Double.System#Numerics#INumberBase{System#Double}#TryConvertToTruncating``1(System.Double,``0@)
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#ISubtractionOperators{System#Double,System#Double,System#Double}#op_Subtraction(System.Double,System.Double): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#ISubtractionOperators{System#Double,System#Double,System#Double}#op_Subtraction(System.Double,System.Double),
    Id: M:System.Double.System#Numerics#ISubtractionOperators{System#Double,System#Double,System#Double}#op_Subtraction(System.Double,System.Double),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.ISubtractionOperators<System.Double,System.Double,System.Double>.op_Subtraction,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#ISubtractionOperators{System#Double,System#Double,System#Double}#op_Subtraction(System.Double,System.Double).left,
        Id: M:System.Double.System#Numerics#ISubtractionOperators{System#Double,System#Double,System#Double}#op_Subtraction(System.Double,System.Double).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Double.System#Numerics#ISubtractionOperators{System#Double,System#Double,System#Double}#op_Subtraction(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#ISubtractionOperators{System#Double,System#Double,System#Double}#op_Subtraction(System.Double,System.Double).right,
        Id: M:System.Double.System#Numerics#ISubtractionOperators{System#Double,System#Double,System#Double}#op_Subtraction(System.Double,System.Double).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Double.System#Numerics#ISubtractionOperators{System#Double,System#Double,System#Double}#op_Subtraction(System.Double,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IUnaryNegationOperators{System#Double,System#Double}#op_UnaryNegation(System.Double): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IUnaryNegationOperators{System#Double,System#Double}#op_UnaryNegation(System.Double),
    Id: M:System.Double.System#Numerics#IUnaryNegationOperators{System#Double,System#Double}#op_UnaryNegation(System.Double),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IUnaryNegationOperators<System.Double,System.Double>.op_UnaryNegation,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IUnaryNegationOperators{System#Double,System#Double}#op_UnaryNegation(System.Double).value,
        Id: M:System.Double.System#Numerics#IUnaryNegationOperators{System#Double,System#Double}#op_UnaryNegation(System.Double).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Double.System#Numerics#IUnaryNegationOperators{System#Double,System#Double}#op_UnaryNegation(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IUnaryPlusOperators{System#Double,System#Double}#op_UnaryPlus(System.Double): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IUnaryPlusOperators{System#Double,System#Double}#op_UnaryPlus(System.Double),
    Id: M:System.Double.System#Numerics#IUnaryPlusOperators{System#Double,System#Double}#op_UnaryPlus(System.Double),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IUnaryPlusOperators<System.Double,System.Double>.op_UnaryPlus,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IUnaryPlusOperators{System#Double,System#Double}#op_UnaryPlus(System.Double).value,
        Id: M:System.Double.System#Numerics#IUnaryPlusOperators{System#Double,System#Double}#op_UnaryPlus(System.Double).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Double.System#Numerics#IUnaryPlusOperators{System#Double,System#Double}#op_UnaryPlus(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Tan(System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IntrinsicAttribute,
        Id: T:System.Runtime.CompilerServices.IntrinsicAttribute,
        Kind: Attribute,
        Name: IntrinsicAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Tan(System.Double),
    Id: M:System.Double.Tan(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Tan,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Tan(System.Double).x,
        Id: M:System.Double.Tan(System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.Tan(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TanForIntervalPiBy4(System.Double,System.Double,System.Boolean): {
    Accessibility: Private,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.MethodImplAttribute,
        Id: T:System.Runtime.CompilerServices.MethodImplAttribute,
        Kind: Attribute,
        Name: MethodImplAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TanForIntervalPiBy4(System.Double,System.Double,System.Boolean),
    Id: M:System.Double.TanForIntervalPiBy4(System.Double,System.Double,System.Boolean),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: TanForIntervalPiBy4,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TanForIntervalPiBy4(System.Double,System.Double,System.Boolean).x,
        Id: M:System.Double.TanForIntervalPiBy4(System.Double,System.Double,System.Boolean).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.TanForIntervalPiBy4(System.Double,System.Double,System.Boolean),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TanForIntervalPiBy4(System.Double,System.Double,System.Boolean).xTail,
        Id: M:System.Double.TanForIntervalPiBy4(System.Double,System.Double,System.Boolean).xTail,
        Kind: Parameter,
        Name: xTail,
        ParentId: M:System.Double.TanForIntervalPiBy4(System.Double,System.Double,System.Boolean),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TanForIntervalPiBy4(System.Double,System.Double,System.Boolean).isReciprocal,
        Id: M:System.Double.TanForIntervalPiBy4(System.Double,System.Double,System.Boolean).isReciprocal,
        Kind: Parameter,
        Name: isReciprocal,
        ParentId: M:System.Double.TanForIntervalPiBy4(System.Double,System.Double,System.Boolean),
        Type: {
          Id: T:System.Boolean,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Tanh(System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IntrinsicAttribute,
        Id: T:System.Runtime.CompilerServices.IntrinsicAttribute,
        Kind: Attribute,
        Name: IntrinsicAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Tanh(System.Double),
    Id: M:System.Double.Tanh(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Tanh,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Tanh(System.Double).x,
        Id: M:System.Double.Tanh(System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.Tanh(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TanPi(System.Double): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TanPi(System.Double),
    Id: M:System.Double.TanPi(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: TanPi,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TanPi(System.Double).x,
        Id: M:System.Double.TanPi(System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.TanPi(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.ToString: {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.ToString,
    Id: M:System.Double.ToString,
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Override
    ],
    Name: ToString,
    OverloadedMembers: [
      M:System.Double.ToString(System.String),
      M:System.Double.ToString(System.IFormatProvider),
      M:System.Double.ToString(System.String,System.IFormatProvider)
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.String,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.ToString(System.IFormatProvider): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.ToString(System.IFormatProvider),
    Id: M:System.Double.ToString(System.IFormatProvider),
    IsLocal: false,
    Kind: Method,
    Name: ToString,
    OverloadedMembers: [
      M:System.Double.ToString,
      M:System.Double.ToString(System.String),
      M:System.Double.ToString(System.String,System.IFormatProvider)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.ToString(System.IFormatProvider).provider,
        Id: M:System.Double.ToString(System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Double.ToString(System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.String,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.ToString(System.String,System.IFormatProvider): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.ToString(System.String,System.IFormatProvider),
    Id: M:System.Double.ToString(System.String,System.IFormatProvider),
    IsLocal: false,
    Kind: Method,
    Name: ToString,
    OverloadedMembers: [
      M:System.Double.ToString,
      M:System.Double.ToString(System.String),
      M:System.Double.ToString(System.IFormatProvider)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.ToString(System.String,System.IFormatProvider).format,
        Id: M:System.Double.ToString(System.String,System.IFormatProvider).format,
        Kind: Parameter,
        Name: format,
        ParentId: M:System.Double.ToString(System.String,System.IFormatProvider),
        Type: {
          Id: T:System.String,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.ToString(System.String,System.IFormatProvider).provider,
        Id: M:System.Double.ToString(System.String,System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Double.ToString(System.String,System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.String,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.ToString(System.String): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.ToString(System.String),
    Id: M:System.Double.ToString(System.String),
    IsLocal: false,
    Kind: Method,
    Name: ToString,
    OverloadedMembers: [
      M:System.Double.ToString,
      M:System.Double.ToString(System.IFormatProvider),
      M:System.Double.ToString(System.String,System.IFormatProvider)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.ToString(System.String).format,
        Id: M:System.Double.ToString(System.String).format,
        Kind: Parameter,
        Name: format,
        ParentId: M:System.Double.ToString(System.String),
        Type: {
          Id: T:System.String,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.String,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Truncate(System.Double): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IntrinsicAttribute,
        Id: T:System.Runtime.CompilerServices.IntrinsicAttribute,
        Kind: Attribute,
        Name: IntrinsicAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Truncate(System.Double),
    Id: M:System.Double.Truncate(System.Double),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Truncate,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.Truncate(System.Double).x,
        Id: M:System.Double.Truncate(System.Double).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Double.Truncate(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryConvertFrom``1(``0,System.Double@): {
    Accessibility: Private,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryConvertFrom``1(``0,System.Double@),
    Id: M:System.Double.TryConvertFrom``1(``0,System.Double@),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: TryConvertFrom,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryConvertFrom``1(``0,System.Double@).value,
        Id: M:System.Double.TryConvertFrom``1(``0,System.Double@).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Double.TryConvertFrom``1(``0,System.Double@),
        Type: {
          Id: T:System.Double.TryConvertFrom.TOther,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryConvertFrom``1(``0,System.Double@).result,
        Id: M:System.Double.TryConvertFrom``1(``0,System.Double@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Double.TryConvertFrom``1(``0,System.Double@),
        Type: {
          Id: T:System.Double&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryConvertFrom``1(``0,System.Double@).TOther,
        Id: G:System.Double.TryConvertFrom``1(``0,System.Double@).TOther,
        Kind: TypeParameter,
        Name: TOther,
        ParentId: M:System.Double.TryConvertFrom``1(``0,System.Double@)
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryConvertTo``1(System.Double,``0@): {
    Accessibility: Private,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryConvertTo``1(System.Double,``0@),
    Id: M:System.Double.TryConvertTo``1(System.Double,``0@),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: TryConvertTo,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryConvertTo``1(System.Double,``0@).value,
        Id: M:System.Double.TryConvertTo``1(System.Double,``0@).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Double.TryConvertTo``1(System.Double,``0@),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryConvertTo``1(System.Double,``0@).result,
        Id: M:System.Double.TryConvertTo``1(System.Double,``0@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Double.TryConvertTo``1(System.Double,``0@),
        Type: {
          Id: T:``0&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryConvertTo``1(System.Double,``0@).TOther,
        Id: G:System.Double.TryConvertTo``1(System.Double,``0@).TOther,
        Kind: TypeParameter,
        Name: TOther,
        ParentId: M:System.Double.TryConvertTo``1(System.Double,``0@)
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider),
    Id: M:System.Double.TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider),
    IsLocal: false,
    Kind: Method,
    Name: TryFormat,
    OverloadedMembers: [
      M:System.Double.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).utf8Destination,
        Id: M:System.Double.TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).utf8Destination,
        Kind: Parameter,
        Name: utf8Destination,
        ParentId: M:System.Double.TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider),
        Type: {
          Id: T:System.Span`1[[System.Byte]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).bytesWritten,
        Id: M:System.Double.TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).bytesWritten,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: bytesWritten,
        ParentId: M:System.Double.TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider),
        Type: {
          Id: T:System.Int32&,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).format,
        Id: M:System.Double.TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).format,
        Kind: Parameter,
        Name: format,
        OptionalValue: <null>,
        ParentId: M:System.Double.TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Char]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).provider,
        Id: M:System.Double.TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        OptionalValue: <null>,
        ParentId: M:System.Double.TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider),
    Id: M:System.Double.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider),
    IsLocal: false,
    Kind: Method,
    Name: TryFormat,
    OverloadedMembers: [
      M:System.Double.TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).destination,
        Id: M:System.Double.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).destination,
        Kind: Parameter,
        Name: destination,
        ParentId: M:System.Double.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider),
        Type: {
          Id: T:System.Span`1[[System.Char]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).charsWritten,
        Id: M:System.Double.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).charsWritten,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: charsWritten,
        ParentId: M:System.Double.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider),
        Type: {
          Id: T:System.Int32&,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).format,
        Id: M:System.Double.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).format,
        Kind: Parameter,
        Name: format,
        OptionalValue: <null>,
        ParentId: M:System.Double.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Char]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).provider,
        Id: M:System.Double.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        OptionalValue: <null>,
        ParentId: M:System.Double.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.Double@): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.Double@),
    Id: M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.Double@),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: TryParse,
    OverloadedMembers: [
      M:System.Double.TryParse(System.String,System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Double@),
      M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@),
      M:System.Double.TryParse(System.String,System.IFormatProvider,System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Double@)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.Double@).utf8Text,
        Id: M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.Double@).utf8Text,
        Kind: Parameter,
        Name: utf8Text,
        ParentId: M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.Double@),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Byte]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.Double@).result,
        Id: M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.Double@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.Double@),
        Type: {
          Id: T:System.Double&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@),
    Id: M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: TryParse,
    OverloadedMembers: [
      M:System.Double.TryParse(System.String,System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.Double@),
      M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@),
      M:System.Double.TryParse(System.String,System.IFormatProvider,System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Double@)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@).utf8Text,
        Id: M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@).utf8Text,
        Kind: Parameter,
        Name: utf8Text,
        ParentId: M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Byte]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@).style,
        Id: M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@).style,
        Kind: Parameter,
        Name: style,
        ParentId: M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@),
        Type: {
          Id: T:System.Globalization.NumberStyles,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@).provider,
        Id: M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@).result,
        Id: M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@),
        Type: {
          Id: T:System.Double&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Double@): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Double@),
    Id: M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Double@),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: TryParse,
    OverloadedMembers: [
      M:System.Double.TryParse(System.String,System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.Double@),
      M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@),
      M:System.Double.TryParse(System.String,System.IFormatProvider,System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Double@).utf8Text,
        Id: M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Double@).utf8Text,
        Kind: Parameter,
        Name: utf8Text,
        ParentId: M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Double@),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Byte]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Double@).provider,
        Id: M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Double@).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Double@),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Double@).result,
        Id: M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Double@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Double@),
        Type: {
          Id: T:System.Double&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Double@): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Double@),
    Id: M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Double@),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: TryParse,
    OverloadedMembers: [
      M:System.Double.TryParse(System.String,System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.Double@),
      M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@),
      M:System.Double.TryParse(System.String,System.IFormatProvider,System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Double@)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Double@).s,
        Id: M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Double@).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Double@),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Char]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Double@).result,
        Id: M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Double@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Double@),
        Type: {
          Id: T:System.Double&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@),
    Id: M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: TryParse,
    OverloadedMembers: [
      M:System.Double.TryParse(System.String,System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.Double@),
      M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@),
      M:System.Double.TryParse(System.String,System.IFormatProvider,System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Double@)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@).s,
        Id: M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Char]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@).style,
        Id: M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@).style,
        Kind: Parameter,
        Name: style,
        ParentId: M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@),
        Type: {
          Id: T:System.Globalization.NumberStyles,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@).provider,
        Id: M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@).result,
        Id: M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@),
        Type: {
          Id: T:System.Double&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Double@): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Double@),
    Id: M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Double@),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: TryParse,
    OverloadedMembers: [
      M:System.Double.TryParse(System.String,System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.Double@),
      M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@),
      M:System.Double.TryParse(System.String,System.IFormatProvider,System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Double@)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Double@).s,
        Id: M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Double@).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Double@),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Char]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Double@).provider,
        Id: M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Double@).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Double@),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Double@).result,
        Id: M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Double@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Double@),
        Type: {
          Id: T:System.Double&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryParse(System.String,System.Double@): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryParse(System.String,System.Double@),
    Id: M:System.Double.TryParse(System.String,System.Double@),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: TryParse,
    OverloadedMembers: [
      M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.Double@),
      M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@),
      M:System.Double.TryParse(System.String,System.IFormatProvider,System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Double@)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryParse(System.String,System.Double@).s,
        Id: M:System.Double.TryParse(System.String,System.Double@).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Double.TryParse(System.String,System.Double@),
        Type: {
          Id: T:System.String,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryParse(System.String,System.Double@).result,
        Id: M:System.Double.TryParse(System.String,System.Double@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Double.TryParse(System.String,System.Double@),
        Type: {
          Id: T:System.Double&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@),
    Id: M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: TryParse,
    OverloadedMembers: [
      M:System.Double.TryParse(System.String,System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@),
      M:System.Double.TryParse(System.String,System.IFormatProvider,System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Double@)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@).s,
        Id: M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@),
        Type: {
          Id: T:System.String,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@).style,
        Id: M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@).style,
        Kind: Parameter,
        Name: style,
        ParentId: M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@),
        Type: {
          Id: T:System.Globalization.NumberStyles,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@).provider,
        Id: M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@).result,
        Id: M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@),
        Type: {
          Id: T:System.Double&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryParse(System.String,System.IFormatProvider,System.Double@): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryParse(System.String,System.IFormatProvider,System.Double@),
    Id: M:System.Double.TryParse(System.String,System.IFormatProvider,System.Double@),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: TryParse,
    OverloadedMembers: [
      M:System.Double.TryParse(System.String,System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.Double@),
      M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@),
      M:System.Double.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Double@)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryParse(System.String,System.IFormatProvider,System.Double@).s,
        Id: M:System.Double.TryParse(System.String,System.IFormatProvider,System.Double@).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Double.TryParse(System.String,System.IFormatProvider,System.Double@),
        Type: {
          Id: T:System.String,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryParse(System.String,System.IFormatProvider,System.Double@).provider,
        Id: M:System.Double.TryParse(System.String,System.IFormatProvider,System.Double@).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Double.TryParse(System.String,System.IFormatProvider,System.Double@),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.TryParse(System.String,System.IFormatProvider,System.Double@).result,
        Id: M:System.Double.TryParse(System.String,System.IFormatProvider,System.Double@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Double.TryParse(System.String,System.IFormatProvider,System.Double@),
        Type: {
          Id: T:System.Double&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Double.BiasedExponent: {
    Accessibility: Internal,
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Double.BiasedExponent,
    Getter: {
      Accessibility: Internal,
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.get_BiasedExponent,
      Id: M:System.Double.get_BiasedExponent,
      IsLocal: false,
      Kind: Method,
      Name: get_BiasedExponent,
      ParentId: T:System.Double,
      Type: {
        Id: T:System.UInt16,
        IsNullable: false
      }
    },
    Id: P:System.Double.BiasedExponent,
    Kind: Property,
    Name: BiasedExponent,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.UInt16,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Double.Exponent: {
    Accessibility: Internal,
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Double.Exponent,
    Getter: {
      Accessibility: Internal,
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.get_Exponent,
      Id: M:System.Double.get_Exponent,
      IsLocal: false,
      Kind: Method,
      Name: get_Exponent,
      ParentId: T:System.Double,
      Type: {
        Id: T:System.Int16,
        IsNullable: false
      }
    },
    Id: P:System.Double.Exponent,
    Kind: Property,
    Name: Exponent,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Int16,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Double.Significand: {
    Accessibility: Internal,
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Double.Significand,
    Getter: {
      Accessibility: Internal,
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.get_Significand,
      Id: M:System.Double.get_Significand,
      IsLocal: false,
      Kind: Method,
      Name: get_Significand,
      ParentId: T:System.Double,
      Type: {
        Id: T:System.UInt64,
        IsNullable: false
      }
    },
    Id: P:System.Double.Significand,
    Kind: Property,
    Name: Significand,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.UInt64,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#DenormalMantissaBits: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#DenormalMantissaBits,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_DenormalMantissaBits,
      Id: M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_DenormalMantissaBits,
      IsLocal: false,
      Kind: Method,
      Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.get_DenormalMantissaBits,
      ParentId: T:System.Double,
      Type: {
        Id: T:System.UInt16,
        IsNullable: false
      }
    },
    Id: P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#DenormalMantissaBits,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.DenormalMantissaBits,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.UInt16,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#DenormalMantissaMask: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#DenormalMantissaMask,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_DenormalMantissaMask,
      Id: M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_DenormalMantissaMask,
      IsLocal: false,
      Kind: Method,
      Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.get_DenormalMantissaMask,
      ParentId: T:System.Double,
      Type: {
        Id: T:System.UInt64,
        IsNullable: false
      }
    },
    Id: P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#DenormalMantissaMask,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.DenormalMantissaMask,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.UInt64,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#ExponentBias: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#ExponentBias,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_ExponentBias,
      Id: M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_ExponentBias,
      IsLocal: false,
      Kind: Method,
      Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.get_ExponentBias,
      ParentId: T:System.Double,
      Type: {
        Id: T:System.Int32,
        IsNullable: false
      }
    },
    Id: P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#ExponentBias,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.ExponentBias,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#ExponentBits: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#ExponentBits,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_ExponentBits,
      Id: M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_ExponentBits,
      IsLocal: false,
      Kind: Method,
      Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.get_ExponentBits,
      ParentId: T:System.Double,
      Type: {
        Id: T:System.UInt16,
        IsNullable: false
      }
    },
    Id: P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#ExponentBits,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.ExponentBits,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.UInt16,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#InfinityBits: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#InfinityBits,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_InfinityBits,
      Id: M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_InfinityBits,
      IsLocal: false,
      Kind: Method,
      Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.get_InfinityBits,
      ParentId: T:System.Double,
      Type: {
        Id: T:System.UInt64,
        IsNullable: false
      }
    },
    Id: P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#InfinityBits,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.InfinityBits,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.UInt64,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#InfinityExponent: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#InfinityExponent,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_InfinityExponent,
      Id: M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_InfinityExponent,
      IsLocal: false,
      Kind: Method,
      Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.get_InfinityExponent,
      ParentId: T:System.Double,
      Type: {
        Id: T:System.Int32,
        IsNullable: false
      }
    },
    Id: P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#InfinityExponent,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.InfinityExponent,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#MaxBinaryExponent: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#MaxBinaryExponent,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_MaxBinaryExponent,
      Id: M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_MaxBinaryExponent,
      IsLocal: false,
      Kind: Method,
      Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.get_MaxBinaryExponent,
      ParentId: T:System.Double,
      Type: {
        Id: T:System.Int32,
        IsNullable: false
      }
    },
    Id: P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#MaxBinaryExponent,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.MaxBinaryExponent,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#MaxDecimalExponent: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#MaxDecimalExponent,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_MaxDecimalExponent,
      Id: M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_MaxDecimalExponent,
      IsLocal: false,
      Kind: Method,
      Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.get_MaxDecimalExponent,
      ParentId: T:System.Double,
      Type: {
        Id: T:System.Int32,
        IsNullable: false
      }
    },
    Id: P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#MaxDecimalExponent,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.MaxDecimalExponent,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#MaxExponentFastPath: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#MaxExponentFastPath,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_MaxExponentFastPath,
      Id: M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_MaxExponentFastPath,
      IsLocal: false,
      Kind: Method,
      Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.get_MaxExponentFastPath,
      ParentId: T:System.Double,
      Type: {
        Id: T:System.Int32,
        IsNullable: false
      }
    },
    Id: P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#MaxExponentFastPath,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.MaxExponentFastPath,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#MaxExponentRoundToEven: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#MaxExponentRoundToEven,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_MaxExponentRoundToEven,
      Id: M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_MaxExponentRoundToEven,
      IsLocal: false,
      Kind: Method,
      Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.get_MaxExponentRoundToEven,
      ParentId: T:System.Double,
      Type: {
        Id: T:System.Int32,
        IsNullable: false
      }
    },
    Id: P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#MaxExponentRoundToEven,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.MaxExponentRoundToEven,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#MaxFastFloatDecimalExponent: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#MaxFastFloatDecimalExponent,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_MaxFastFloatDecimalExponent,
      Id: M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_MaxFastFloatDecimalExponent,
      IsLocal: false,
      Kind: Method,
      Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.get_MaxFastFloatDecimalExponent,
      ParentId: T:System.Double,
      Type: {
        Id: T:System.Int32,
        IsNullable: false
      }
    },
    Id: P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#MaxFastFloatDecimalExponent,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.MaxFastFloatDecimalExponent,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#MaxMantissaFastPath: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#MaxMantissaFastPath,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_MaxMantissaFastPath,
      Id: M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_MaxMantissaFastPath,
      IsLocal: false,
      Kind: Method,
      Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.get_MaxMantissaFastPath,
      ParentId: T:System.Double,
      Type: {
        Id: T:System.UInt64,
        IsNullable: false
      }
    },
    Id: P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#MaxMantissaFastPath,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.MaxMantissaFastPath,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.UInt64,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#MaxPrecisionCustomFormat: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#MaxPrecisionCustomFormat,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_MaxPrecisionCustomFormat,
      Id: M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_MaxPrecisionCustomFormat,
      IsLocal: false,
      Kind: Method,
      Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.get_MaxPrecisionCustomFormat,
      ParentId: T:System.Double,
      Type: {
        Id: T:System.Int32,
        IsNullable: false
      }
    },
    Id: P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#MaxPrecisionCustomFormat,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.MaxPrecisionCustomFormat,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#MaxRoundTripDigits: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#MaxRoundTripDigits,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_MaxRoundTripDigits,
      Id: M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_MaxRoundTripDigits,
      IsLocal: false,
      Kind: Method,
      Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.get_MaxRoundTripDigits,
      ParentId: T:System.Double,
      Type: {
        Id: T:System.Int32,
        IsNullable: false
      }
    },
    Id: P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#MaxRoundTripDigits,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.MaxRoundTripDigits,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#MinBinaryExponent: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#MinBinaryExponent,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_MinBinaryExponent,
      Id: M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_MinBinaryExponent,
      IsLocal: false,
      Kind: Method,
      Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.get_MinBinaryExponent,
      ParentId: T:System.Double,
      Type: {
        Id: T:System.Int32,
        IsNullable: false
      }
    },
    Id: P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#MinBinaryExponent,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.MinBinaryExponent,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#MinDecimalExponent: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#MinDecimalExponent,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_MinDecimalExponent,
      Id: M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_MinDecimalExponent,
      IsLocal: false,
      Kind: Method,
      Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.get_MinDecimalExponent,
      ParentId: T:System.Double,
      Type: {
        Id: T:System.Int32,
        IsNullable: false
      }
    },
    Id: P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#MinDecimalExponent,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.MinDecimalExponent,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#MinExponentRoundToEven: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#MinExponentRoundToEven,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_MinExponentRoundToEven,
      Id: M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_MinExponentRoundToEven,
      IsLocal: false,
      Kind: Method,
      Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.get_MinExponentRoundToEven,
      ParentId: T:System.Double,
      Type: {
        Id: T:System.Int32,
        IsNullable: false
      }
    },
    Id: P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#MinExponentRoundToEven,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.MinExponentRoundToEven,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#MinFastFloatDecimalExponent: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#MinFastFloatDecimalExponent,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_MinFastFloatDecimalExponent,
      Id: M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_MinFastFloatDecimalExponent,
      IsLocal: false,
      Kind: Method,
      Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.get_MinFastFloatDecimalExponent,
      ParentId: T:System.Double,
      Type: {
        Id: T:System.Int32,
        IsNullable: false
      }
    },
    Id: P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#MinFastFloatDecimalExponent,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.MinFastFloatDecimalExponent,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#NormalMantissaBits: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#NormalMantissaBits,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_NormalMantissaBits,
      Id: M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_NormalMantissaBits,
      IsLocal: false,
      Kind: Method,
      Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.get_NormalMantissaBits,
      ParentId: T:System.Double,
      Type: {
        Id: T:System.UInt16,
        IsNullable: false
      }
    },
    Id: P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#NormalMantissaBits,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.NormalMantissaBits,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.UInt16,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#NormalMantissaMask: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#NormalMantissaMask,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_NormalMantissaMask,
      Id: M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_NormalMantissaMask,
      IsLocal: false,
      Kind: Method,
      Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.get_NormalMantissaMask,
      ParentId: T:System.Double,
      Type: {
        Id: T:System.UInt64,
        IsNullable: false
      }
    },
    Id: P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#NormalMantissaMask,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.NormalMantissaMask,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.UInt64,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#NumberBufferLength: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#NumberBufferLength,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_NumberBufferLength,
      Id: M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_NumberBufferLength,
      IsLocal: false,
      Kind: Method,
      Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.get_NumberBufferLength,
      ParentId: T:System.Double,
      Type: {
        Id: T:System.Int32,
        IsNullable: false
      }
    },
    Id: P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#NumberBufferLength,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.NumberBufferLength,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#OverflowDecimalExponent: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#OverflowDecimalExponent,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_OverflowDecimalExponent,
      Id: M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_OverflowDecimalExponent,
      IsLocal: false,
      Kind: Method,
      Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.get_OverflowDecimalExponent,
      ParentId: T:System.Double,
      Type: {
        Id: T:System.Int32,
        IsNullable: false
      }
    },
    Id: P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#OverflowDecimalExponent,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.OverflowDecimalExponent,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#ZeroBits: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#ZeroBits,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_ZeroBits,
      Id: M:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#get_ZeroBits,
      IsLocal: false,
      Kind: Method,
      Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.get_ZeroBits,
      ParentId: T:System.Double,
      Type: {
        Id: T:System.UInt64,
        IsNullable: false
      }
    },
    Id: P:System.Double.System#IBinaryFloatParseAndFormatInfo{System#Double}#ZeroBits,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.IBinaryFloatParseAndFormatInfo<System.Double>.ZeroBits,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.UInt64,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#Numerics#IAdditiveIdentity{System#Double,System#Double}#AdditiveIdentity: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#Numerics#IAdditiveIdentity{System#Double,System#Double}#AdditiveIdentity,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IAdditiveIdentity{System#Double,System#Double}#get_AdditiveIdentity,
      Id: M:System.Double.System#Numerics#IAdditiveIdentity{System#Double,System#Double}#get_AdditiveIdentity,
      IsLocal: false,
      Kind: Method,
      Name: System.Numerics.IAdditiveIdentity<System.Double,System.Double>.get_AdditiveIdentity,
      ParentId: T:System.Double,
      Type: {
        Id: T:System.Double,
        IsNullable: false
      }
    },
    Id: P:System.Double.System#Numerics#IAdditiveIdentity{System#Double,System#Double}#AdditiveIdentity,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IAdditiveIdentity<System.Double,System.Double>.AdditiveIdentity,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#Numerics#IBinaryNumber{System#Double}#AllBitsSet: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#Numerics#IBinaryNumber{System#Double}#AllBitsSet,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IBinaryNumber{System#Double}#get_AllBitsSet,
      Id: M:System.Double.System#Numerics#IBinaryNumber{System#Double}#get_AllBitsSet,
      IsLocal: false,
      Kind: Method,
      Name: System.Numerics.IBinaryNumber<System.Double>.get_AllBitsSet,
      ParentId: T:System.Double,
      Type: {
        Id: T:System.Double,
        IsNullable: false
      }
    },
    Id: P:System.Double.System#Numerics#IBinaryNumber{System#Double}#AllBitsSet,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IBinaryNumber<System.Double>.AllBitsSet,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#Numerics#IFloatingPointConstants{System#Double}#E: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#Numerics#IFloatingPointConstants{System#Double}#E,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IFloatingPointConstants{System#Double}#get_E,
      Id: M:System.Double.System#Numerics#IFloatingPointConstants{System#Double}#get_E,
      IsLocal: false,
      Kind: Method,
      Name: System.Numerics.IFloatingPointConstants<System.Double>.get_E,
      ParentId: T:System.Double,
      Type: {
        Id: T:System.Double,
        IsNullable: false
      }
    },
    Id: P:System.Double.System#Numerics#IFloatingPointConstants{System#Double}#E,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IFloatingPointConstants<System.Double>.E,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#Numerics#IFloatingPointConstants{System#Double}#Pi: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#Numerics#IFloatingPointConstants{System#Double}#Pi,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IFloatingPointConstants{System#Double}#get_Pi,
      Id: M:System.Double.System#Numerics#IFloatingPointConstants{System#Double}#get_Pi,
      IsLocal: false,
      Kind: Method,
      Name: System.Numerics.IFloatingPointConstants<System.Double>.get_Pi,
      ParentId: T:System.Double,
      Type: {
        Id: T:System.Double,
        IsNullable: false
      }
    },
    Id: P:System.Double.System#Numerics#IFloatingPointConstants{System#Double}#Pi,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IFloatingPointConstants<System.Double>.Pi,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#Numerics#IFloatingPointConstants{System#Double}#Tau: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#Numerics#IFloatingPointConstants{System#Double}#Tau,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IFloatingPointConstants{System#Double}#get_Tau,
      Id: M:System.Double.System#Numerics#IFloatingPointConstants{System#Double}#get_Tau,
      IsLocal: false,
      Kind: Method,
      Name: System.Numerics.IFloatingPointConstants<System.Double>.get_Tau,
      ParentId: T:System.Double,
      Type: {
        Id: T:System.Double,
        IsNullable: false
      }
    },
    Id: P:System.Double.System#Numerics#IFloatingPointConstants{System#Double}#Tau,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IFloatingPointConstants<System.Double>.Tau,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#Numerics#IFloatingPointIeee754{System#Double}#Epsilon: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#Numerics#IFloatingPointIeee754{System#Double}#Epsilon,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IFloatingPointIeee754{System#Double}#get_Epsilon,
      Id: M:System.Double.System#Numerics#IFloatingPointIeee754{System#Double}#get_Epsilon,
      IsLocal: false,
      Kind: Method,
      Name: System.Numerics.IFloatingPointIeee754<System.Double>.get_Epsilon,
      ParentId: T:System.Double,
      Type: {
        Id: T:System.Double,
        IsNullable: false
      }
    },
    Id: P:System.Double.System#Numerics#IFloatingPointIeee754{System#Double}#Epsilon,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IFloatingPointIeee754<System.Double>.Epsilon,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#Numerics#IFloatingPointIeee754{System#Double}#NaN: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#Numerics#IFloatingPointIeee754{System#Double}#NaN,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IFloatingPointIeee754{System#Double}#get_NaN,
      Id: M:System.Double.System#Numerics#IFloatingPointIeee754{System#Double}#get_NaN,
      IsLocal: false,
      Kind: Method,
      Name: System.Numerics.IFloatingPointIeee754<System.Double>.get_NaN,
      ParentId: T:System.Double,
      Type: {
        Id: T:System.Double,
        IsNullable: false
      }
    },
    Id: P:System.Double.System#Numerics#IFloatingPointIeee754{System#Double}#NaN,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IFloatingPointIeee754<System.Double>.NaN,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#Numerics#IFloatingPointIeee754{System#Double}#NegativeInfinity: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#Numerics#IFloatingPointIeee754{System#Double}#NegativeInfinity,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IFloatingPointIeee754{System#Double}#get_NegativeInfinity,
      Id: M:System.Double.System#Numerics#IFloatingPointIeee754{System#Double}#get_NegativeInfinity,
      IsLocal: false,
      Kind: Method,
      Name: System.Numerics.IFloatingPointIeee754<System.Double>.get_NegativeInfinity,
      ParentId: T:System.Double,
      Type: {
        Id: T:System.Double,
        IsNullable: false
      }
    },
    Id: P:System.Double.System#Numerics#IFloatingPointIeee754{System#Double}#NegativeInfinity,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IFloatingPointIeee754<System.Double>.NegativeInfinity,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#Numerics#IFloatingPointIeee754{System#Double}#NegativeZero: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#Numerics#IFloatingPointIeee754{System#Double}#NegativeZero,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IFloatingPointIeee754{System#Double}#get_NegativeZero,
      Id: M:System.Double.System#Numerics#IFloatingPointIeee754{System#Double}#get_NegativeZero,
      IsLocal: false,
      Kind: Method,
      Name: System.Numerics.IFloatingPointIeee754<System.Double>.get_NegativeZero,
      ParentId: T:System.Double,
      Type: {
        Id: T:System.Double,
        IsNullable: false
      }
    },
    Id: P:System.Double.System#Numerics#IFloatingPointIeee754{System#Double}#NegativeZero,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IFloatingPointIeee754<System.Double>.NegativeZero,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#Numerics#IFloatingPointIeee754{System#Double}#PositiveInfinity: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#Numerics#IFloatingPointIeee754{System#Double}#PositiveInfinity,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IFloatingPointIeee754{System#Double}#get_PositiveInfinity,
      Id: M:System.Double.System#Numerics#IFloatingPointIeee754{System#Double}#get_PositiveInfinity,
      IsLocal: false,
      Kind: Method,
      Name: System.Numerics.IFloatingPointIeee754<System.Double>.get_PositiveInfinity,
      ParentId: T:System.Double,
      Type: {
        Id: T:System.Double,
        IsNullable: false
      }
    },
    Id: P:System.Double.System#Numerics#IFloatingPointIeee754{System#Double}#PositiveInfinity,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IFloatingPointIeee754<System.Double>.PositiveInfinity,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#Numerics#IMinMaxValue{System#Double}#MaxValue: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#Numerics#IMinMaxValue{System#Double}#MaxValue,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IMinMaxValue{System#Double}#get_MaxValue,
      Id: M:System.Double.System#Numerics#IMinMaxValue{System#Double}#get_MaxValue,
      IsLocal: false,
      Kind: Method,
      Name: System.Numerics.IMinMaxValue<System.Double>.get_MaxValue,
      ParentId: T:System.Double,
      Type: {
        Id: T:System.Double,
        IsNullable: false
      }
    },
    Id: P:System.Double.System#Numerics#IMinMaxValue{System#Double}#MaxValue,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IMinMaxValue<System.Double>.MaxValue,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#Numerics#IMinMaxValue{System#Double}#MinValue: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#Numerics#IMinMaxValue{System#Double}#MinValue,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IMinMaxValue{System#Double}#get_MinValue,
      Id: M:System.Double.System#Numerics#IMinMaxValue{System#Double}#get_MinValue,
      IsLocal: false,
      Kind: Method,
      Name: System.Numerics.IMinMaxValue<System.Double>.get_MinValue,
      ParentId: T:System.Double,
      Type: {
        Id: T:System.Double,
        IsNullable: false
      }
    },
    Id: P:System.Double.System#Numerics#IMinMaxValue{System#Double}#MinValue,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IMinMaxValue<System.Double>.MinValue,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#Numerics#IMultiplicativeIdentity{System#Double,System#Double}#MultiplicativeIdentity: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#Numerics#IMultiplicativeIdentity{System#Double,System#Double}#MultiplicativeIdentity,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#IMultiplicativeIdentity{System#Double,System#Double}#get_MultiplicativeIdentity,
      Id: M:System.Double.System#Numerics#IMultiplicativeIdentity{System#Double,System#Double}#get_MultiplicativeIdentity,
      IsLocal: false,
      Kind: Method,
      Name: System.Numerics.IMultiplicativeIdentity<System.Double,System.Double>.get_MultiplicativeIdentity,
      ParentId: T:System.Double,
      Type: {
        Id: T:System.Double,
        IsNullable: false
      }
    },
    Id: P:System.Double.System#Numerics#IMultiplicativeIdentity{System#Double,System#Double}#MultiplicativeIdentity,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IMultiplicativeIdentity<System.Double,System.Double>.MultiplicativeIdentity,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#Numerics#INumberBase{System#Double}#One: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#Numerics#INumberBase{System#Double}#One,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#INumberBase{System#Double}#get_One,
      Id: M:System.Double.System#Numerics#INumberBase{System#Double}#get_One,
      IsLocal: false,
      Kind: Method,
      Name: System.Numerics.INumberBase<System.Double>.get_One,
      ParentId: T:System.Double,
      Type: {
        Id: T:System.Double,
        IsNullable: false
      }
    },
    Id: P:System.Double.System#Numerics#INumberBase{System#Double}#One,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Double>.One,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#Numerics#INumberBase{System#Double}#Radix: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#Numerics#INumberBase{System#Double}#Radix,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#INumberBase{System#Double}#get_Radix,
      Id: M:System.Double.System#Numerics#INumberBase{System#Double}#get_Radix,
      IsLocal: false,
      Kind: Method,
      Name: System.Numerics.INumberBase<System.Double>.get_Radix,
      ParentId: T:System.Double,
      Type: {
        Id: T:System.Int32,
        IsNullable: false
      }
    },
    Id: P:System.Double.System#Numerics#INumberBase{System#Double}#Radix,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Double>.Radix,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#Numerics#INumberBase{System#Double}#Zero: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#Numerics#INumberBase{System#Double}#Zero,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#INumberBase{System#Double}#get_Zero,
      Id: M:System.Double.System#Numerics#INumberBase{System#Double}#get_Zero,
      IsLocal: false,
      Kind: Method,
      Name: System.Numerics.INumberBase<System.Double>.get_Zero,
      ParentId: T:System.Double,
      Type: {
        Id: T:System.Double,
        IsNullable: false
      }
    },
    Id: P:System.Double.System#Numerics#INumberBase{System#Double}#Zero,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Double>.Zero,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#Numerics#ISignedNumber{System#Double}#NegativeOne: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Double.System#Numerics#ISignedNumber{System#Double}#NegativeOne,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.System#Numerics#ISignedNumber{System#Double}#get_NegativeOne,
      Id: M:System.Double.System#Numerics#ISignedNumber{System#Double}#get_NegativeOne,
      IsLocal: false,
      Kind: Method,
      Name: System.Numerics.ISignedNumber<System.Double>.get_NegativeOne,
      ParentId: T:System.Double,
      Type: {
        Id: T:System.Double,
        IsNullable: false
      }
    },
    Id: P:System.Double.System#Numerics#ISignedNumber{System#Double}#NegativeOne,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.ISignedNumber<System.Double>.NegativeOne,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Double.TrailingSignificand: {
    Accessibility: Internal,
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Double.TrailingSignificand,
    Getter: {
      Accessibility: Internal,
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Double.get_TrailingSignificand,
      Id: M:System.Double.get_TrailingSignificand,
      IsLocal: false,
      Kind: Method,
      Name: get_TrailingSignificand,
      ParentId: T:System.Double,
      Type: {
        Id: T:System.UInt64,
        IsNullable: false
      }
    },
    Id: P:System.Double.TrailingSignificand,
    Kind: Property,
    Name: TrailingSignificand,
    ParentId: T:System.Double,
    Type: {
      Id: T:System.UInt64,
      IsNullable: false
    }
  }
}