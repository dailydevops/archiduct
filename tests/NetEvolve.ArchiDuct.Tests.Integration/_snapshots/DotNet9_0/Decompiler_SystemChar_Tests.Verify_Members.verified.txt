{
  System.Private.CoreLib, Version=x.x.x.x, F:System.Char.m_value: {
    Accessibility: Private,
    FullName: System.Private.CoreLib, Version=x.x.x.x, F:System.Char.m_value,
    Id: F:System.Char.m_value,
    Kind: Field,
    Modifiers: [
      ReadOnly
    ],
    Name: m_value,
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, F:System.Char.MaxValue: {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, F:System.Char.MaxValue,
    Id: F:System.Char.MaxValue,
    Kind: Field,
    Modifiers: [
      Static,
      Const
    ],
    Name: MaxValue,
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, F:System.Char.MinValue: {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, F:System.Char.MinValue,
    Id: F:System.Char.MinValue,
    Kind: Field,
    Modifiers: [
      Static,
      Const
    ],
    Name: MinValue,
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.#ctor: {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.#ctor,
    Id: M:System.Char.#ctor,
    Kind: Constructor,
    Name: .ctor,
    ParentId: T:System.Char
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.CheckLetter(System.Globalization.UnicodeCategory): {
    Accessibility: Internal,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.CheckLetter(System.Globalization.UnicodeCategory),
    Id: M:System.Char.CheckLetter(System.Globalization.UnicodeCategory),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: CheckLetter,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.CheckLetter(System.Globalization.UnicodeCategory).uc,
        Id: M:System.Char.CheckLetter(System.Globalization.UnicodeCategory).uc,
        Kind: Parameter,
        Name: uc,
        ParentId: M:System.Char.CheckLetter(System.Globalization.UnicodeCategory),
        Type: {
          Id: T:System.Globalization.UnicodeCategory,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.CheckLetterOrDigit(System.Globalization.UnicodeCategory): {
    Accessibility: Internal,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.CheckLetterOrDigit(System.Globalization.UnicodeCategory),
    Id: M:System.Char.CheckLetterOrDigit(System.Globalization.UnicodeCategory),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: CheckLetterOrDigit,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.CheckLetterOrDigit(System.Globalization.UnicodeCategory).uc,
        Id: M:System.Char.CheckLetterOrDigit(System.Globalization.UnicodeCategory).uc,
        Kind: Parameter,
        Name: uc,
        ParentId: M:System.Char.CheckLetterOrDigit(System.Globalization.UnicodeCategory),
        Type: {
          Id: T:System.Globalization.UnicodeCategory,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.CheckNumber(System.Globalization.UnicodeCategory): {
    Accessibility: Internal,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.CheckNumber(System.Globalization.UnicodeCategory),
    Id: M:System.Char.CheckNumber(System.Globalization.UnicodeCategory),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: CheckNumber,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.CheckNumber(System.Globalization.UnicodeCategory).uc,
        Id: M:System.Char.CheckNumber(System.Globalization.UnicodeCategory).uc,
        Kind: Parameter,
        Name: uc,
        ParentId: M:System.Char.CheckNumber(System.Globalization.UnicodeCategory),
        Type: {
          Id: T:System.Globalization.UnicodeCategory,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.CheckPunctuation(System.Globalization.UnicodeCategory): {
    Accessibility: Internal,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.CheckPunctuation(System.Globalization.UnicodeCategory),
    Id: M:System.Char.CheckPunctuation(System.Globalization.UnicodeCategory),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: CheckPunctuation,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.CheckPunctuation(System.Globalization.UnicodeCategory).uc,
        Id: M:System.Char.CheckPunctuation(System.Globalization.UnicodeCategory).uc,
        Kind: Parameter,
        Name: uc,
        ParentId: M:System.Char.CheckPunctuation(System.Globalization.UnicodeCategory),
        Type: {
          Id: T:System.Globalization.UnicodeCategory,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.CheckSeparator(System.Globalization.UnicodeCategory): {
    Accessibility: Internal,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.CheckSeparator(System.Globalization.UnicodeCategory),
    Id: M:System.Char.CheckSeparator(System.Globalization.UnicodeCategory),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: CheckSeparator,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.CheckSeparator(System.Globalization.UnicodeCategory).uc,
        Id: M:System.Char.CheckSeparator(System.Globalization.UnicodeCategory).uc,
        Kind: Parameter,
        Name: uc,
        ParentId: M:System.Char.CheckSeparator(System.Globalization.UnicodeCategory),
        Type: {
          Id: T:System.Globalization.UnicodeCategory,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.CheckSymbol(System.Globalization.UnicodeCategory): {
    Accessibility: Internal,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.CheckSymbol(System.Globalization.UnicodeCategory),
    Id: M:System.Char.CheckSymbol(System.Globalization.UnicodeCategory),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: CheckSymbol,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.CheckSymbol(System.Globalization.UnicodeCategory).uc,
        Id: M:System.Char.CheckSymbol(System.Globalization.UnicodeCategory).uc,
        Kind: Parameter,
        Name: uc,
        ParentId: M:System.Char.CheckSymbol(System.Globalization.UnicodeCategory),
        Type: {
          Id: T:System.Globalization.UnicodeCategory,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.CompareTo(System.Char): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.CompareTo(System.Char),
    Id: M:System.Char.CompareTo(System.Char),
    IsLocal: false,
    Kind: Method,
    Name: CompareTo,
    OverloadedMembers: [
      M:System.Char.CompareTo(System.Object)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.CompareTo(System.Char).value,
        Id: M:System.Char.CompareTo(System.Char).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.CompareTo(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.CompareTo(System.Object): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.CompareTo(System.Object),
    Id: M:System.Char.CompareTo(System.Object),
    IsLocal: false,
    Kind: Method,
    Name: CompareTo,
    OverloadedMembers: [
      M:System.Char.CompareTo(System.Char)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.CompareTo(System.Object).value,
        Id: M:System.Char.CompareTo(System.Object).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.CompareTo(System.Object),
        Type: {
          Id: T:System.Object,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.ConvertFromUtf32(System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.ConvertFromUtf32(System.Int32),
    Id: M:System.Char.ConvertFromUtf32(System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: ConvertFromUtf32,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.ConvertFromUtf32(System.Int32).utf32,
        Id: M:System.Char.ConvertFromUtf32(System.Int32).utf32,
        Kind: Parameter,
        Name: utf32,
        ParentId: M:System.Char.ConvertFromUtf32(System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.String,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.ConvertToUtf32_ThrowInvalidArgs(System.UInt32): {
    Accessibility: Private,
    Attributes: [
      {
        FullName: System.Diagnostics.StackTraceHiddenAttribute,
        Id: T:System.Diagnostics.StackTraceHiddenAttribute,
        Kind: Attribute,
        Name: StackTraceHiddenAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.ConvertToUtf32_ThrowInvalidArgs(System.UInt32),
    Id: M:System.Char.ConvertToUtf32_ThrowInvalidArgs(System.UInt32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: ConvertToUtf32_ThrowInvalidArgs,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.ConvertToUtf32_ThrowInvalidArgs(System.UInt32).highSurrogateOffset,
        Id: M:System.Char.ConvertToUtf32_ThrowInvalidArgs(System.UInt32).highSurrogateOffset,
        Kind: Parameter,
        Name: highSurrogateOffset,
        ParentId: M:System.Char.ConvertToUtf32_ThrowInvalidArgs(System.UInt32),
        Type: {
          Id: T:System.UInt32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Void,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.ConvertToUtf32(System.Char,System.Char): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.ConvertToUtf32(System.Char,System.Char),
    Id: M:System.Char.ConvertToUtf32(System.Char,System.Char),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: ConvertToUtf32,
    OverloadedMembers: [
      M:System.Char.ConvertToUtf32(System.String,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.ConvertToUtf32(System.Char,System.Char).highSurrogate,
        Id: M:System.Char.ConvertToUtf32(System.Char,System.Char).highSurrogate,
        Kind: Parameter,
        Name: highSurrogate,
        ParentId: M:System.Char.ConvertToUtf32(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.ConvertToUtf32(System.Char,System.Char).lowSurrogate,
        Id: M:System.Char.ConvertToUtf32(System.Char,System.Char).lowSurrogate,
        Kind: Parameter,
        Name: lowSurrogate,
        ParentId: M:System.Char.ConvertToUtf32(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.ConvertToUtf32(System.String,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.ConvertToUtf32(System.String,System.Int32),
    Id: M:System.Char.ConvertToUtf32(System.String,System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: ConvertToUtf32,
    OverloadedMembers: [
      M:System.Char.ConvertToUtf32(System.Char,System.Char)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.ConvertToUtf32(System.String,System.Int32).s,
        Id: M:System.Char.ConvertToUtf32(System.String,System.Int32).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Char.ConvertToUtf32(System.String,System.Int32),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.ConvertToUtf32(System.String,System.Int32).index,
        Id: M:System.Char.ConvertToUtf32(System.String,System.Int32).index,
        Kind: Parameter,
        Name: index,
        ParentId: M:System.Char.ConvertToUtf32(System.String,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.Equals(System.Char): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.Versioning.NonVersionableAttribute,
        Id: T:System.Runtime.Versioning.NonVersionableAttribute,
        Kind: Attribute,
        Name: NonVersionableAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.Equals(System.Char),
    Id: M:System.Char.Equals(System.Char),
    IsLocal: false,
    Kind: Method,
    Name: Equals,
    OverloadedMembers: [
      M:System.Char.Equals(System.Object)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.Equals(System.Char).obj,
        Id: M:System.Char.Equals(System.Char).obj,
        Kind: Parameter,
        Name: obj,
        ParentId: M:System.Char.Equals(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.Equals(System.Object): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute,
        Id: T:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute,
        Kind: Attribute,
        Name: UnconditionalSuppressMessageAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.Equals(System.Object),
    Id: M:System.Char.Equals(System.Object),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Override
    ],
    Name: Equals,
    OverloadedMembers: [
      M:System.Char.Equals(System.Char)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.Equals(System.Object).obj,
        Id: M:System.Char.Equals(System.Object).obj,
        Kind: Parameter,
        Name: obj,
        ParentId: M:System.Char.Equals(System.Object),
        Type: {
          Id: T:System.Object,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.GetHashCode: {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.GetHashCode,
    Id: M:System.Char.GetHashCode,
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Override
    ],
    Name: GetHashCode,
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.GetLatin1UnicodeCategory(System.Char): {
    Accessibility: Private,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.GetLatin1UnicodeCategory(System.Char),
    Id: M:System.Char.GetLatin1UnicodeCategory(System.Char),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: GetLatin1UnicodeCategory,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.GetLatin1UnicodeCategory(System.Char).c,
        Id: M:System.Char.GetLatin1UnicodeCategory(System.Char).c,
        Kind: Parameter,
        Name: c,
        ParentId: M:System.Char.GetLatin1UnicodeCategory(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Globalization.UnicodeCategory,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.GetNumericValue(System.Char): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.GetNumericValue(System.Char),
    Id: M:System.Char.GetNumericValue(System.Char),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: GetNumericValue,
    OverloadedMembers: [
      M:System.Char.GetNumericValue(System.String,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.GetNumericValue(System.Char).c,
        Id: M:System.Char.GetNumericValue(System.Char).c,
        Kind: Parameter,
        Name: c,
        ParentId: M:System.Char.GetNumericValue(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.GetNumericValue(System.String,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.GetNumericValue(System.String,System.Int32),
    Id: M:System.Char.GetNumericValue(System.String,System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: GetNumericValue,
    OverloadedMembers: [
      M:System.Char.GetNumericValue(System.Char)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.GetNumericValue(System.String,System.Int32).s,
        Id: M:System.Char.GetNumericValue(System.String,System.Int32).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Char.GetNumericValue(System.String,System.Int32),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.GetNumericValue(System.String,System.Int32).index,
        Id: M:System.Char.GetNumericValue(System.String,System.Int32).index,
        Kind: Parameter,
        Name: index,
        ParentId: M:System.Char.GetNumericValue(System.String,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.GetTypeCode: {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.GetTypeCode,
    Id: M:System.Char.GetTypeCode,
    IsLocal: false,
    Kind: Method,
    Name: GetTypeCode,
    ParentId: T:System.Char,
    Type: {
      Id: T:System.TypeCode,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.GetUnicodeCategory(System.Char): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.GetUnicodeCategory(System.Char),
    Id: M:System.Char.GetUnicodeCategory(System.Char),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: GetUnicodeCategory,
    OverloadedMembers: [
      M:System.Char.GetUnicodeCategory(System.String,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.GetUnicodeCategory(System.Char).c,
        Id: M:System.Char.GetUnicodeCategory(System.Char).c,
        Kind: Parameter,
        Name: c,
        ParentId: M:System.Char.GetUnicodeCategory(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Globalization.UnicodeCategory,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.GetUnicodeCategory(System.String,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.GetUnicodeCategory(System.String,System.Int32),
    Id: M:System.Char.GetUnicodeCategory(System.String,System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: GetUnicodeCategory,
    OverloadedMembers: [
      M:System.Char.GetUnicodeCategory(System.Char)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.GetUnicodeCategory(System.String,System.Int32).s,
        Id: M:System.Char.GetUnicodeCategory(System.String,System.Int32).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Char.GetUnicodeCategory(System.String,System.Int32),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.GetUnicodeCategory(System.String,System.Int32).index,
        Id: M:System.Char.GetUnicodeCategory(System.String,System.Int32).index,
        Kind: Parameter,
        Name: index,
        ParentId: M:System.Char.GetUnicodeCategory(System.String,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Globalization.UnicodeCategory,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsAscii(System.Char): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsAscii(System.Char),
    Id: M:System.Char.IsAscii(System.Char),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsAscii,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsAscii(System.Char).c,
        Id: M:System.Char.IsAscii(System.Char).c,
        Kind: Parameter,
        Name: c,
        ParentId: M:System.Char.IsAscii(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsAsciiDigit(System.Char): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsAsciiDigit(System.Char),
    Id: M:System.Char.IsAsciiDigit(System.Char),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsAsciiDigit,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsAsciiDigit(System.Char).c,
        Id: M:System.Char.IsAsciiDigit(System.Char).c,
        Kind: Parameter,
        Name: c,
        ParentId: M:System.Char.IsAsciiDigit(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsAsciiHexDigit(System.Char): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsAsciiHexDigit(System.Char),
    Id: M:System.Char.IsAsciiHexDigit(System.Char),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsAsciiHexDigit,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsAsciiHexDigit(System.Char).c,
        Id: M:System.Char.IsAsciiHexDigit(System.Char).c,
        Kind: Parameter,
        Name: c,
        ParentId: M:System.Char.IsAsciiHexDigit(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsAsciiHexDigitLower(System.Char): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsAsciiHexDigitLower(System.Char),
    Id: M:System.Char.IsAsciiHexDigitLower(System.Char),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsAsciiHexDigitLower,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsAsciiHexDigitLower(System.Char).c,
        Id: M:System.Char.IsAsciiHexDigitLower(System.Char).c,
        Kind: Parameter,
        Name: c,
        ParentId: M:System.Char.IsAsciiHexDigitLower(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsAsciiHexDigitUpper(System.Char): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsAsciiHexDigitUpper(System.Char),
    Id: M:System.Char.IsAsciiHexDigitUpper(System.Char),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsAsciiHexDigitUpper,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsAsciiHexDigitUpper(System.Char).c,
        Id: M:System.Char.IsAsciiHexDigitUpper(System.Char).c,
        Kind: Parameter,
        Name: c,
        ParentId: M:System.Char.IsAsciiHexDigitUpper(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsAsciiLetter(System.Char): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsAsciiLetter(System.Char),
    Id: M:System.Char.IsAsciiLetter(System.Char),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsAsciiLetter,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsAsciiLetter(System.Char).c,
        Id: M:System.Char.IsAsciiLetter(System.Char).c,
        Kind: Parameter,
        Name: c,
        ParentId: M:System.Char.IsAsciiLetter(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsAsciiLetterLower(System.Char): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsAsciiLetterLower(System.Char),
    Id: M:System.Char.IsAsciiLetterLower(System.Char),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsAsciiLetterLower,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsAsciiLetterLower(System.Char).c,
        Id: M:System.Char.IsAsciiLetterLower(System.Char).c,
        Kind: Parameter,
        Name: c,
        ParentId: M:System.Char.IsAsciiLetterLower(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsAsciiLetterOrDigit(System.Char): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsAsciiLetterOrDigit(System.Char),
    Id: M:System.Char.IsAsciiLetterOrDigit(System.Char),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsAsciiLetterOrDigit,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsAsciiLetterOrDigit(System.Char).c,
        Id: M:System.Char.IsAsciiLetterOrDigit(System.Char).c,
        Kind: Parameter,
        Name: c,
        ParentId: M:System.Char.IsAsciiLetterOrDigit(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsAsciiLetterUpper(System.Char): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsAsciiLetterUpper(System.Char),
    Id: M:System.Char.IsAsciiLetterUpper(System.Char),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsAsciiLetterUpper,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsAsciiLetterUpper(System.Char).c,
        Id: M:System.Char.IsAsciiLetterUpper(System.Char).c,
        Kind: Parameter,
        Name: c,
        ParentId: M:System.Char.IsAsciiLetterUpper(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsBetween(System.Char,System.Char,System.Char): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsBetween(System.Char,System.Char,System.Char),
    Id: M:System.Char.IsBetween(System.Char,System.Char,System.Char),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsBetween,
    OverloadedMembers: [
      M:System.Char.IsBetween(System.Globalization.UnicodeCategory,System.Globalization.UnicodeCategory,System.Globalization.UnicodeCategory)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsBetween(System.Char,System.Char,System.Char).c,
        Id: M:System.Char.IsBetween(System.Char,System.Char,System.Char).c,
        Kind: Parameter,
        Name: c,
        ParentId: M:System.Char.IsBetween(System.Char,System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsBetween(System.Char,System.Char,System.Char).minInclusive,
        Id: M:System.Char.IsBetween(System.Char,System.Char,System.Char).minInclusive,
        Kind: Parameter,
        Name: minInclusive,
        ParentId: M:System.Char.IsBetween(System.Char,System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsBetween(System.Char,System.Char,System.Char).maxInclusive,
        Id: M:System.Char.IsBetween(System.Char,System.Char,System.Char).maxInclusive,
        Kind: Parameter,
        Name: maxInclusive,
        ParentId: M:System.Char.IsBetween(System.Char,System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsBetween(System.Globalization.UnicodeCategory,System.Globalization.UnicodeCategory,System.Globalization.UnicodeCategory): {
    Accessibility: Private,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsBetween(System.Globalization.UnicodeCategory,System.Globalization.UnicodeCategory,System.Globalization.UnicodeCategory),
    Id: M:System.Char.IsBetween(System.Globalization.UnicodeCategory,System.Globalization.UnicodeCategory,System.Globalization.UnicodeCategory),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsBetween,
    OverloadedMembers: [
      M:System.Char.IsBetween(System.Char,System.Char,System.Char)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsBetween(System.Globalization.UnicodeCategory,System.Globalization.UnicodeCategory,System.Globalization.UnicodeCategory).c,
        Id: M:System.Char.IsBetween(System.Globalization.UnicodeCategory,System.Globalization.UnicodeCategory,System.Globalization.UnicodeCategory).c,
        Kind: Parameter,
        Name: c,
        ParentId: M:System.Char.IsBetween(System.Globalization.UnicodeCategory,System.Globalization.UnicodeCategory,System.Globalization.UnicodeCategory),
        Type: {
          Id: T:System.Globalization.UnicodeCategory,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsBetween(System.Globalization.UnicodeCategory,System.Globalization.UnicodeCategory,System.Globalization.UnicodeCategory).min,
        Id: M:System.Char.IsBetween(System.Globalization.UnicodeCategory,System.Globalization.UnicodeCategory,System.Globalization.UnicodeCategory).min,
        Kind: Parameter,
        Name: min,
        ParentId: M:System.Char.IsBetween(System.Globalization.UnicodeCategory,System.Globalization.UnicodeCategory,System.Globalization.UnicodeCategory),
        Type: {
          Id: T:System.Globalization.UnicodeCategory,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsBetween(System.Globalization.UnicodeCategory,System.Globalization.UnicodeCategory,System.Globalization.UnicodeCategory).max,
        Id: M:System.Char.IsBetween(System.Globalization.UnicodeCategory,System.Globalization.UnicodeCategory,System.Globalization.UnicodeCategory).max,
        Kind: Parameter,
        Name: max,
        ParentId: M:System.Char.IsBetween(System.Globalization.UnicodeCategory,System.Globalization.UnicodeCategory,System.Globalization.UnicodeCategory),
        Type: {
          Id: T:System.Globalization.UnicodeCategory,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsControl(System.Char): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsControl(System.Char),
    Id: M:System.Char.IsControl(System.Char),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsControl,
    OverloadedMembers: [
      M:System.Char.IsControl(System.String,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsControl(System.Char).c,
        Id: M:System.Char.IsControl(System.Char).c,
        Kind: Parameter,
        Name: c,
        ParentId: M:System.Char.IsControl(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsControl(System.String,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsControl(System.String,System.Int32),
    Id: M:System.Char.IsControl(System.String,System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsControl,
    OverloadedMembers: [
      M:System.Char.IsControl(System.Char)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsControl(System.String,System.Int32).s,
        Id: M:System.Char.IsControl(System.String,System.Int32).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Char.IsControl(System.String,System.Int32),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsControl(System.String,System.Int32).index,
        Id: M:System.Char.IsControl(System.String,System.Int32).index,
        Kind: Parameter,
        Name: index,
        ParentId: M:System.Char.IsControl(System.String,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsDigit(System.Char): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsDigit(System.Char),
    Id: M:System.Char.IsDigit(System.Char),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsDigit,
    OverloadedMembers: [
      M:System.Char.IsDigit(System.String,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsDigit(System.Char).c,
        Id: M:System.Char.IsDigit(System.Char).c,
        Kind: Parameter,
        Name: c,
        ParentId: M:System.Char.IsDigit(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsDigit(System.String,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsDigit(System.String,System.Int32),
    Id: M:System.Char.IsDigit(System.String,System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsDigit,
    OverloadedMembers: [
      M:System.Char.IsDigit(System.Char)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsDigit(System.String,System.Int32).s,
        Id: M:System.Char.IsDigit(System.String,System.Int32).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Char.IsDigit(System.String,System.Int32),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsDigit(System.String,System.Int32).index,
        Id: M:System.Char.IsDigit(System.String,System.Int32).index,
        Kind: Parameter,
        Name: index,
        ParentId: M:System.Char.IsDigit(System.String,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsHighSurrogate(System.Char): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsHighSurrogate(System.Char),
    Id: M:System.Char.IsHighSurrogate(System.Char),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsHighSurrogate,
    OverloadedMembers: [
      M:System.Char.IsHighSurrogate(System.String,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsHighSurrogate(System.Char).c,
        Id: M:System.Char.IsHighSurrogate(System.Char).c,
        Kind: Parameter,
        Name: c,
        ParentId: M:System.Char.IsHighSurrogate(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsHighSurrogate(System.String,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsHighSurrogate(System.String,System.Int32),
    Id: M:System.Char.IsHighSurrogate(System.String,System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsHighSurrogate,
    OverloadedMembers: [
      M:System.Char.IsHighSurrogate(System.Char)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsHighSurrogate(System.String,System.Int32).s,
        Id: M:System.Char.IsHighSurrogate(System.String,System.Int32).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Char.IsHighSurrogate(System.String,System.Int32),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsHighSurrogate(System.String,System.Int32).index,
        Id: M:System.Char.IsHighSurrogate(System.String,System.Int32).index,
        Kind: Parameter,
        Name: index,
        ParentId: M:System.Char.IsHighSurrogate(System.String,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsLatin1(System.Char): {
    Accessibility: Private,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsLatin1(System.Char),
    Id: M:System.Char.IsLatin1(System.Char),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsLatin1,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsLatin1(System.Char).c,
        Id: M:System.Char.IsLatin1(System.Char).c,
        Kind: Parameter,
        Name: c,
        ParentId: M:System.Char.IsLatin1(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsLetter(System.Char): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsLetter(System.Char),
    Id: M:System.Char.IsLetter(System.Char),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsLetter,
    OverloadedMembers: [
      M:System.Char.IsLetter(System.String,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsLetter(System.Char).c,
        Id: M:System.Char.IsLetter(System.Char).c,
        Kind: Parameter,
        Name: c,
        ParentId: M:System.Char.IsLetter(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsLetter(System.String,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsLetter(System.String,System.Int32),
    Id: M:System.Char.IsLetter(System.String,System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsLetter,
    OverloadedMembers: [
      M:System.Char.IsLetter(System.Char)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsLetter(System.String,System.Int32).s,
        Id: M:System.Char.IsLetter(System.String,System.Int32).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Char.IsLetter(System.String,System.Int32),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsLetter(System.String,System.Int32).index,
        Id: M:System.Char.IsLetter(System.String,System.Int32).index,
        Kind: Parameter,
        Name: index,
        ParentId: M:System.Char.IsLetter(System.String,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsLetterOrDigit(System.Char): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsLetterOrDigit(System.Char),
    Id: M:System.Char.IsLetterOrDigit(System.Char),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsLetterOrDigit,
    OverloadedMembers: [
      M:System.Char.IsLetterOrDigit(System.String,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsLetterOrDigit(System.Char).c,
        Id: M:System.Char.IsLetterOrDigit(System.Char).c,
        Kind: Parameter,
        Name: c,
        ParentId: M:System.Char.IsLetterOrDigit(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsLetterOrDigit(System.String,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsLetterOrDigit(System.String,System.Int32),
    Id: M:System.Char.IsLetterOrDigit(System.String,System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsLetterOrDigit,
    OverloadedMembers: [
      M:System.Char.IsLetterOrDigit(System.Char)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsLetterOrDigit(System.String,System.Int32).s,
        Id: M:System.Char.IsLetterOrDigit(System.String,System.Int32).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Char.IsLetterOrDigit(System.String,System.Int32),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsLetterOrDigit(System.String,System.Int32).index,
        Id: M:System.Char.IsLetterOrDigit(System.String,System.Int32).index,
        Kind: Parameter,
        Name: index,
        ParentId: M:System.Char.IsLetterOrDigit(System.String,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsLower(System.Char): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsLower(System.Char),
    Id: M:System.Char.IsLower(System.Char),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsLower,
    OverloadedMembers: [
      M:System.Char.IsLower(System.String,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsLower(System.Char).c,
        Id: M:System.Char.IsLower(System.Char).c,
        Kind: Parameter,
        Name: c,
        ParentId: M:System.Char.IsLower(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsLower(System.String,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsLower(System.String,System.Int32),
    Id: M:System.Char.IsLower(System.String,System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsLower,
    OverloadedMembers: [
      M:System.Char.IsLower(System.Char)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsLower(System.String,System.Int32).s,
        Id: M:System.Char.IsLower(System.String,System.Int32).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Char.IsLower(System.String,System.Int32),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsLower(System.String,System.Int32).index,
        Id: M:System.Char.IsLower(System.String,System.Int32).index,
        Kind: Parameter,
        Name: index,
        ParentId: M:System.Char.IsLower(System.String,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsLowSurrogate(System.Char): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsLowSurrogate(System.Char),
    Id: M:System.Char.IsLowSurrogate(System.Char),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsLowSurrogate,
    OverloadedMembers: [
      M:System.Char.IsLowSurrogate(System.String,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsLowSurrogate(System.Char).c,
        Id: M:System.Char.IsLowSurrogate(System.Char).c,
        Kind: Parameter,
        Name: c,
        ParentId: M:System.Char.IsLowSurrogate(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsLowSurrogate(System.String,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsLowSurrogate(System.String,System.Int32),
    Id: M:System.Char.IsLowSurrogate(System.String,System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsLowSurrogate,
    OverloadedMembers: [
      M:System.Char.IsLowSurrogate(System.Char)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsLowSurrogate(System.String,System.Int32).s,
        Id: M:System.Char.IsLowSurrogate(System.String,System.Int32).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Char.IsLowSurrogate(System.String,System.Int32),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsLowSurrogate(System.String,System.Int32).index,
        Id: M:System.Char.IsLowSurrogate(System.String,System.Int32).index,
        Kind: Parameter,
        Name: index,
        ParentId: M:System.Char.IsLowSurrogate(System.String,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsNumber(System.Char): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsNumber(System.Char),
    Id: M:System.Char.IsNumber(System.Char),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsNumber,
    OverloadedMembers: [
      M:System.Char.IsNumber(System.String,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsNumber(System.Char).c,
        Id: M:System.Char.IsNumber(System.Char).c,
        Kind: Parameter,
        Name: c,
        ParentId: M:System.Char.IsNumber(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsNumber(System.String,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsNumber(System.String,System.Int32),
    Id: M:System.Char.IsNumber(System.String,System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsNumber,
    OverloadedMembers: [
      M:System.Char.IsNumber(System.Char)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsNumber(System.String,System.Int32).s,
        Id: M:System.Char.IsNumber(System.String,System.Int32).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Char.IsNumber(System.String,System.Int32),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsNumber(System.String,System.Int32).index,
        Id: M:System.Char.IsNumber(System.String,System.Int32).index,
        Kind: Parameter,
        Name: index,
        ParentId: M:System.Char.IsNumber(System.String,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsPunctuation(System.Char): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsPunctuation(System.Char),
    Id: M:System.Char.IsPunctuation(System.Char),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsPunctuation,
    OverloadedMembers: [
      M:System.Char.IsPunctuation(System.String,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsPunctuation(System.Char).c,
        Id: M:System.Char.IsPunctuation(System.Char).c,
        Kind: Parameter,
        Name: c,
        ParentId: M:System.Char.IsPunctuation(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsPunctuation(System.String,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsPunctuation(System.String,System.Int32),
    Id: M:System.Char.IsPunctuation(System.String,System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsPunctuation,
    OverloadedMembers: [
      M:System.Char.IsPunctuation(System.Char)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsPunctuation(System.String,System.Int32).s,
        Id: M:System.Char.IsPunctuation(System.String,System.Int32).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Char.IsPunctuation(System.String,System.Int32),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsPunctuation(System.String,System.Int32).index,
        Id: M:System.Char.IsPunctuation(System.String,System.Int32).index,
        Kind: Parameter,
        Name: index,
        ParentId: M:System.Char.IsPunctuation(System.String,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsSeparator(System.Char): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsSeparator(System.Char),
    Id: M:System.Char.IsSeparator(System.Char),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsSeparator,
    OverloadedMembers: [
      M:System.Char.IsSeparator(System.String,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsSeparator(System.Char).c,
        Id: M:System.Char.IsSeparator(System.Char).c,
        Kind: Parameter,
        Name: c,
        ParentId: M:System.Char.IsSeparator(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsSeparator(System.String,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsSeparator(System.String,System.Int32),
    Id: M:System.Char.IsSeparator(System.String,System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsSeparator,
    OverloadedMembers: [
      M:System.Char.IsSeparator(System.Char)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsSeparator(System.String,System.Int32).s,
        Id: M:System.Char.IsSeparator(System.String,System.Int32).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Char.IsSeparator(System.String,System.Int32),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsSeparator(System.String,System.Int32).index,
        Id: M:System.Char.IsSeparator(System.String,System.Int32).index,
        Kind: Parameter,
        Name: index,
        ParentId: M:System.Char.IsSeparator(System.String,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsSeparatorLatin1(System.Char): {
    Accessibility: Private,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsSeparatorLatin1(System.Char),
    Id: M:System.Char.IsSeparatorLatin1(System.Char),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsSeparatorLatin1,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsSeparatorLatin1(System.Char).c,
        Id: M:System.Char.IsSeparatorLatin1(System.Char).c,
        Kind: Parameter,
        Name: c,
        ParentId: M:System.Char.IsSeparatorLatin1(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsSurrogate(System.Char): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsSurrogate(System.Char),
    Id: M:System.Char.IsSurrogate(System.Char),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsSurrogate,
    OverloadedMembers: [
      M:System.Char.IsSurrogate(System.String,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsSurrogate(System.Char).c,
        Id: M:System.Char.IsSurrogate(System.Char).c,
        Kind: Parameter,
        Name: c,
        ParentId: M:System.Char.IsSurrogate(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsSurrogate(System.String,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsSurrogate(System.String,System.Int32),
    Id: M:System.Char.IsSurrogate(System.String,System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsSurrogate,
    OverloadedMembers: [
      M:System.Char.IsSurrogate(System.Char)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsSurrogate(System.String,System.Int32).s,
        Id: M:System.Char.IsSurrogate(System.String,System.Int32).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Char.IsSurrogate(System.String,System.Int32),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsSurrogate(System.String,System.Int32).index,
        Id: M:System.Char.IsSurrogate(System.String,System.Int32).index,
        Kind: Parameter,
        Name: index,
        ParentId: M:System.Char.IsSurrogate(System.String,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsSurrogatePair(System.Char,System.Char): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsSurrogatePair(System.Char,System.Char),
    Id: M:System.Char.IsSurrogatePair(System.Char,System.Char),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsSurrogatePair,
    OverloadedMembers: [
      M:System.Char.IsSurrogatePair(System.String,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsSurrogatePair(System.Char,System.Char).highSurrogate,
        Id: M:System.Char.IsSurrogatePair(System.Char,System.Char).highSurrogate,
        Kind: Parameter,
        Name: highSurrogate,
        ParentId: M:System.Char.IsSurrogatePair(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsSurrogatePair(System.Char,System.Char).lowSurrogate,
        Id: M:System.Char.IsSurrogatePair(System.Char,System.Char).lowSurrogate,
        Kind: Parameter,
        Name: lowSurrogate,
        ParentId: M:System.Char.IsSurrogatePair(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsSurrogatePair(System.String,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsSurrogatePair(System.String,System.Int32),
    Id: M:System.Char.IsSurrogatePair(System.String,System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsSurrogatePair,
    OverloadedMembers: [
      M:System.Char.IsSurrogatePair(System.Char,System.Char)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsSurrogatePair(System.String,System.Int32).s,
        Id: M:System.Char.IsSurrogatePair(System.String,System.Int32).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Char.IsSurrogatePair(System.String,System.Int32),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsSurrogatePair(System.String,System.Int32).index,
        Id: M:System.Char.IsSurrogatePair(System.String,System.Int32).index,
        Kind: Parameter,
        Name: index,
        ParentId: M:System.Char.IsSurrogatePair(System.String,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsSymbol(System.Char): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsSymbol(System.Char),
    Id: M:System.Char.IsSymbol(System.Char),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsSymbol,
    OverloadedMembers: [
      M:System.Char.IsSymbol(System.String,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsSymbol(System.Char).c,
        Id: M:System.Char.IsSymbol(System.Char).c,
        Kind: Parameter,
        Name: c,
        ParentId: M:System.Char.IsSymbol(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsSymbol(System.String,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsSymbol(System.String,System.Int32),
    Id: M:System.Char.IsSymbol(System.String,System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsSymbol,
    OverloadedMembers: [
      M:System.Char.IsSymbol(System.Char)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsSymbol(System.String,System.Int32).s,
        Id: M:System.Char.IsSymbol(System.String,System.Int32).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Char.IsSymbol(System.String,System.Int32),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsSymbol(System.String,System.Int32).index,
        Id: M:System.Char.IsSymbol(System.String,System.Int32).index,
        Kind: Parameter,
        Name: index,
        ParentId: M:System.Char.IsSymbol(System.String,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsUpper(System.Char): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsUpper(System.Char),
    Id: M:System.Char.IsUpper(System.Char),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsUpper,
    OverloadedMembers: [
      M:System.Char.IsUpper(System.String,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsUpper(System.Char).c,
        Id: M:System.Char.IsUpper(System.Char).c,
        Kind: Parameter,
        Name: c,
        ParentId: M:System.Char.IsUpper(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsUpper(System.String,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsUpper(System.String,System.Int32),
    Id: M:System.Char.IsUpper(System.String,System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsUpper,
    OverloadedMembers: [
      M:System.Char.IsUpper(System.Char)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsUpper(System.String,System.Int32).s,
        Id: M:System.Char.IsUpper(System.String,System.Int32).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Char.IsUpper(System.String,System.Int32),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsUpper(System.String,System.Int32).index,
        Id: M:System.Char.IsUpper(System.String,System.Int32).index,
        Kind: Parameter,
        Name: index,
        ParentId: M:System.Char.IsUpper(System.String,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsWhiteSpace(System.Char): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsWhiteSpace(System.Char),
    Id: M:System.Char.IsWhiteSpace(System.Char),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsWhiteSpace,
    OverloadedMembers: [
      M:System.Char.IsWhiteSpace(System.String,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsWhiteSpace(System.Char).c,
        Id: M:System.Char.IsWhiteSpace(System.Char).c,
        Kind: Parameter,
        Name: c,
        ParentId: M:System.Char.IsWhiteSpace(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsWhiteSpace(System.String,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsWhiteSpace(System.String,System.Int32),
    Id: M:System.Char.IsWhiteSpace(System.String,System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsWhiteSpace,
    OverloadedMembers: [
      M:System.Char.IsWhiteSpace(System.Char)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsWhiteSpace(System.String,System.Int32).s,
        Id: M:System.Char.IsWhiteSpace(System.String,System.Int32).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Char.IsWhiteSpace(System.String,System.Int32),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsWhiteSpace(System.String,System.Int32).index,
        Id: M:System.Char.IsWhiteSpace(System.String,System.Int32).index,
        Kind: Parameter,
        Name: index,
        ParentId: M:System.Char.IsWhiteSpace(System.String,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsWhiteSpaceLatin1(System.Char): {
    Accessibility: Private,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsWhiteSpaceLatin1(System.Char),
    Id: M:System.Char.IsWhiteSpaceLatin1(System.Char),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsWhiteSpaceLatin1,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.IsWhiteSpaceLatin1(System.Char).c,
        Id: M:System.Char.IsWhiteSpaceLatin1(System.Char).c,
        Kind: Parameter,
        Name: c,
        ParentId: M:System.Char.IsWhiteSpaceLatin1(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.Parse(System.ReadOnlySpan{System.Char}): {
    Accessibility: Internal,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.Parse(System.ReadOnlySpan{System.Char}),
    Id: M:System.Char.Parse(System.ReadOnlySpan{System.Char}),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Parse,
    OverloadedMembers: [
      M:System.Char.Parse(System.String)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.Parse(System.ReadOnlySpan{System.Char}).s,
        Id: M:System.Char.Parse(System.ReadOnlySpan{System.Char}).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Char.Parse(System.ReadOnlySpan{System.Char}),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Char]],
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.Parse(System.String): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.Parse(System.String),
    Id: M:System.Char.Parse(System.String),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Parse,
    OverloadedMembers: [
      M:System.Char.Parse(System.ReadOnlySpan{System.Char})
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.Parse(System.String).s,
        Id: M:System.Char.Parse(System.String).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Char.Parse(System.String),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#IsGreaterThanAsUnsigned(System.Char,System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#IsGreaterThanAsUnsigned(System.Char,System.Char),
    Id: M:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#IsGreaterThanAsUnsigned(System.Char,System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.IBinaryIntegerParseAndFormatInfo<System.Char>.IsGreaterThanAsUnsigned,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#IsGreaterThanAsUnsigned(System.Char,System.Char).left,
        Id: M:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#IsGreaterThanAsUnsigned(System.Char,System.Char).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#IsGreaterThanAsUnsigned(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#IsGreaterThanAsUnsigned(System.Char,System.Char).right,
        Id: M:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#IsGreaterThanAsUnsigned(System.Char,System.Char).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#IsGreaterThanAsUnsigned(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#MultiplyBy10(System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#MultiplyBy10(System.Char),
    Id: M:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#MultiplyBy10(System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.IBinaryIntegerParseAndFormatInfo<System.Char>.MultiplyBy10,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#MultiplyBy10(System.Char).value,
        Id: M:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#MultiplyBy10(System.Char).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#MultiplyBy10(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#MultiplyBy16(System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#MultiplyBy16(System.Char),
    Id: M:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#MultiplyBy16(System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.IBinaryIntegerParseAndFormatInfo<System.Char>.MultiplyBy16,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#MultiplyBy16(System.Char).value,
        Id: M:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#MultiplyBy16(System.Char).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#MultiplyBy16(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToBoolean(System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToBoolean(System.IFormatProvider),
    Id: M:System.Char.System#IConvertible#ToBoolean(System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IConvertible.ToBoolean,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToBoolean(System.IFormatProvider).provider,
        Id: M:System.Char.System#IConvertible#ToBoolean(System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Char.System#IConvertible#ToBoolean(System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToByte(System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToByte(System.IFormatProvider),
    Id: M:System.Char.System#IConvertible#ToByte(System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IConvertible.ToByte,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToByte(System.IFormatProvider).provider,
        Id: M:System.Char.System#IConvertible#ToByte(System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Char.System#IConvertible#ToByte(System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Byte,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToChar(System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToChar(System.IFormatProvider),
    Id: M:System.Char.System#IConvertible#ToChar(System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IConvertible.ToChar,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToChar(System.IFormatProvider).provider,
        Id: M:System.Char.System#IConvertible#ToChar(System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Char.System#IConvertible#ToChar(System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToDateTime(System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToDateTime(System.IFormatProvider),
    Id: M:System.Char.System#IConvertible#ToDateTime(System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IConvertible.ToDateTime,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToDateTime(System.IFormatProvider).provider,
        Id: M:System.Char.System#IConvertible#ToDateTime(System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Char.System#IConvertible#ToDateTime(System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.DateTime,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToDecimal(System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToDecimal(System.IFormatProvider),
    Id: M:System.Char.System#IConvertible#ToDecimal(System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IConvertible.ToDecimal,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToDecimal(System.IFormatProvider).provider,
        Id: M:System.Char.System#IConvertible#ToDecimal(System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Char.System#IConvertible#ToDecimal(System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Decimal,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToDouble(System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToDouble(System.IFormatProvider),
    Id: M:System.Char.System#IConvertible#ToDouble(System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IConvertible.ToDouble,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToDouble(System.IFormatProvider).provider,
        Id: M:System.Char.System#IConvertible#ToDouble(System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Char.System#IConvertible#ToDouble(System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToInt16(System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToInt16(System.IFormatProvider),
    Id: M:System.Char.System#IConvertible#ToInt16(System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IConvertible.ToInt16,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToInt16(System.IFormatProvider).provider,
        Id: M:System.Char.System#IConvertible#ToInt16(System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Char.System#IConvertible#ToInt16(System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Int16,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToInt32(System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToInt32(System.IFormatProvider),
    Id: M:System.Char.System#IConvertible#ToInt32(System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IConvertible.ToInt32,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToInt32(System.IFormatProvider).provider,
        Id: M:System.Char.System#IConvertible#ToInt32(System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Char.System#IConvertible#ToInt32(System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToInt64(System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToInt64(System.IFormatProvider),
    Id: M:System.Char.System#IConvertible#ToInt64(System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IConvertible.ToInt64,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToInt64(System.IFormatProvider).provider,
        Id: M:System.Char.System#IConvertible#ToInt64(System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Char.System#IConvertible#ToInt64(System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Int64,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToSByte(System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToSByte(System.IFormatProvider),
    Id: M:System.Char.System#IConvertible#ToSByte(System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IConvertible.ToSByte,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToSByte(System.IFormatProvider).provider,
        Id: M:System.Char.System#IConvertible#ToSByte(System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Char.System#IConvertible#ToSByte(System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.SByte,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToSingle(System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToSingle(System.IFormatProvider),
    Id: M:System.Char.System#IConvertible#ToSingle(System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IConvertible.ToSingle,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToSingle(System.IFormatProvider).provider,
        Id: M:System.Char.System#IConvertible#ToSingle(System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Char.System#IConvertible#ToSingle(System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Single,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToType(System.Type,System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToType(System.Type,System.IFormatProvider),
    Id: M:System.Char.System#IConvertible#ToType(System.Type,System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IConvertible.ToType,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToType(System.Type,System.IFormatProvider).type,
        Id: M:System.Char.System#IConvertible#ToType(System.Type,System.IFormatProvider).type,
        Kind: Parameter,
        Name: type,
        ParentId: M:System.Char.System#IConvertible#ToType(System.Type,System.IFormatProvider),
        Type: {
          Id: T:System.Type,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToType(System.Type,System.IFormatProvider).provider,
        Id: M:System.Char.System#IConvertible#ToType(System.Type,System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Char.System#IConvertible#ToType(System.Type,System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Object,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToUInt16(System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToUInt16(System.IFormatProvider),
    Id: M:System.Char.System#IConvertible#ToUInt16(System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IConvertible.ToUInt16,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToUInt16(System.IFormatProvider).provider,
        Id: M:System.Char.System#IConvertible#ToUInt16(System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Char.System#IConvertible#ToUInt16(System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.UInt16,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToUInt32(System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToUInt32(System.IFormatProvider),
    Id: M:System.Char.System#IConvertible#ToUInt32(System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IConvertible.ToUInt32,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToUInt32(System.IFormatProvider).provider,
        Id: M:System.Char.System#IConvertible#ToUInt32(System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Char.System#IConvertible#ToUInt32(System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.UInt32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToUInt64(System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToUInt64(System.IFormatProvider),
    Id: M:System.Char.System#IConvertible#ToUInt64(System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IConvertible.ToUInt64,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IConvertible#ToUInt64(System.IFormatProvider).provider,
        Id: M:System.Char.System#IConvertible#ToUInt64(System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Char.System#IConvertible#ToUInt64(System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.UInt64,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IFormattable#ToString(System.String,System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IFormattable#ToString(System.String,System.IFormatProvider),
    Id: M:System.Char.System#IFormattable#ToString(System.String,System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IFormattable.ToString,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IFormattable#ToString(System.String,System.IFormatProvider).format,
        Id: M:System.Char.System#IFormattable#ToString(System.String,System.IFormatProvider).format,
        Kind: Parameter,
        Name: format,
        ParentId: M:System.Char.System#IFormattable#ToString(System.String,System.IFormatProvider),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IFormattable#ToString(System.String,System.IFormatProvider).formatProvider,
        Id: M:System.Char.System#IFormattable#ToString(System.String,System.IFormatProvider).formatProvider,
        Kind: Parameter,
        Name: formatProvider,
        ParentId: M:System.Char.System#IFormattable#ToString(System.String,System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.String,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IParsable{System#Char}#Parse(System.String,System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IParsable{System#Char}#Parse(System.String,System.IFormatProvider),
    Id: M:System.Char.System#IParsable{System#Char}#Parse(System.String,System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.IParsable<System.Char>.Parse,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IParsable{System#Char}#Parse(System.String,System.IFormatProvider).s,
        Id: M:System.Char.System#IParsable{System#Char}#Parse(System.String,System.IFormatProvider).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Char.System#IParsable{System#Char}#Parse(System.String,System.IFormatProvider),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IParsable{System#Char}#Parse(System.String,System.IFormatProvider).provider,
        Id: M:System.Char.System#IParsable{System#Char}#Parse(System.String,System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Char.System#IParsable{System#Char}#Parse(System.String,System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IParsable{System#Char}#TryParse(System.String,System.IFormatProvider,System.Char@): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IParsable{System#Char}#TryParse(System.String,System.IFormatProvider,System.Char@),
    Id: M:System.Char.System#IParsable{System#Char}#TryParse(System.String,System.IFormatProvider,System.Char@),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.IParsable<System.Char>.TryParse,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IParsable{System#Char}#TryParse(System.String,System.IFormatProvider,System.Char@).s,
        Id: M:System.Char.System#IParsable{System#Char}#TryParse(System.String,System.IFormatProvider,System.Char@).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Char.System#IParsable{System#Char}#TryParse(System.String,System.IFormatProvider,System.Char@),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IParsable{System#Char}#TryParse(System.String,System.IFormatProvider,System.Char@).provider,
        Id: M:System.Char.System#IParsable{System#Char}#TryParse(System.String,System.IFormatProvider,System.Char@).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Char.System#IParsable{System#Char}#TryParse(System.String,System.IFormatProvider,System.Char@),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IParsable{System#Char}#TryParse(System.String,System.IFormatProvider,System.Char@).result,
        Id: M:System.Char.System#IParsable{System#Char}#TryParse(System.String,System.IFormatProvider,System.Char@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Char.System#IParsable{System#Char}#TryParse(System.String,System.IFormatProvider,System.Char@),
        Type: {
          Id: T:System.Char&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#ISpanFormattable#TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#ISpanFormattable#TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider),
    Id: M:System.Char.System#ISpanFormattable#TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.ISpanFormattable.TryFormat,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#ISpanFormattable#TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).destination,
        Id: M:System.Char.System#ISpanFormattable#TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).destination,
        Kind: Parameter,
        Name: destination,
        ParentId: M:System.Char.System#ISpanFormattable#TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider),
        Type: {
          Id: T:System.Span`1[[System.Char]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#ISpanFormattable#TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).charsWritten,
        Id: M:System.Char.System#ISpanFormattable#TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).charsWritten,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: charsWritten,
        ParentId: M:System.Char.System#ISpanFormattable#TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider),
        Type: {
          Id: T:System.Int32&,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#ISpanFormattable#TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).format,
        Id: M:System.Char.System#ISpanFormattable#TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).format,
        Kind: Parameter,
        Name: format,
        ParentId: M:System.Char.System#ISpanFormattable#TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Char]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#ISpanFormattable#TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).provider,
        Id: M:System.Char.System#ISpanFormattable#TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Char.System#ISpanFormattable#TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#ISpanParsable{System#Char}#Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#ISpanParsable{System#Char}#Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider),
    Id: M:System.Char.System#ISpanParsable{System#Char}#Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.ISpanParsable<System.Char>.Parse,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#ISpanParsable{System#Char}#Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider).s,
        Id: M:System.Char.System#ISpanParsable{System#Char}#Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Char.System#ISpanParsable{System#Char}#Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Char]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#ISpanParsable{System#Char}#Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider).provider,
        Id: M:System.Char.System#ISpanParsable{System#Char}#Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Char.System#ISpanParsable{System#Char}#Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#ISpanParsable{System#Char}#TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Char@): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#ISpanParsable{System#Char}#TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Char@),
    Id: M:System.Char.System#ISpanParsable{System#Char}#TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Char@),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.ISpanParsable<System.Char>.TryParse,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#ISpanParsable{System#Char}#TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Char@).s,
        Id: M:System.Char.System#ISpanParsable{System#Char}#TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Char@).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Char.System#ISpanParsable{System#Char}#TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Char@),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Char]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#ISpanParsable{System#Char}#TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Char@).provider,
        Id: M:System.Char.System#ISpanParsable{System#Char}#TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Char@).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Char.System#ISpanParsable{System#Char}#TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Char@),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#ISpanParsable{System#Char}#TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Char@).result,
        Id: M:System.Char.System#ISpanParsable{System#Char}#TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Char@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Char.System#ISpanParsable{System#Char}#TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Char@),
        Type: {
          Id: T:System.Char&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IUtf8SpanFormattable#TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IUtf8SpanFormattable#TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider),
    Id: M:System.Char.System#IUtf8SpanFormattable#TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IUtf8SpanFormattable.TryFormat,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IUtf8SpanFormattable#TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).utf8Destination,
        Id: M:System.Char.System#IUtf8SpanFormattable#TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).utf8Destination,
        Kind: Parameter,
        Name: utf8Destination,
        ParentId: M:System.Char.System#IUtf8SpanFormattable#TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider),
        Type: {
          Id: T:System.Span`1[[System.Byte]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IUtf8SpanFormattable#TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).bytesWritten,
        Id: M:System.Char.System#IUtf8SpanFormattable#TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).bytesWritten,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: bytesWritten,
        ParentId: M:System.Char.System#IUtf8SpanFormattable#TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider),
        Type: {
          Id: T:System.Int32&,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IUtf8SpanFormattable#TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).format,
        Id: M:System.Char.System#IUtf8SpanFormattable#TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).format,
        Kind: Parameter,
        Name: format,
        ParentId: M:System.Char.System#IUtf8SpanFormattable#TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Char]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IUtf8SpanFormattable#TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).provider,
        Id: M:System.Char.System#IUtf8SpanFormattable#TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Char.System#IUtf8SpanFormattable#TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.Byte): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.Byte),
    Id: M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.Byte),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.IUtfChar<System.Char>.CastFrom,
    OverloadedMembers: [
      M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.Char),
      M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.Int32),
      M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.UInt32),
      M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.UInt64)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.Byte).value,
        Id: M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.Byte).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.Byte),
        Type: {
          Id: T:System.Byte,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.Char),
    Id: M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.IUtfChar<System.Char>.CastFrom,
    OverloadedMembers: [
      M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.Byte),
      M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.Int32),
      M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.UInt32),
      M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.UInt64)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.Char).value,
        Id: M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.Char).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.Int32),
    Id: M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.IUtfChar<System.Char>.CastFrom,
    OverloadedMembers: [
      M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.Byte),
      M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.Char),
      M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.UInt32),
      M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.UInt64)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.Int32).value,
        Id: M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.UInt32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.UInt32),
    Id: M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.UInt32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.IUtfChar<System.Char>.CastFrom,
    OverloadedMembers: [
      M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.Byte),
      M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.Char),
      M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.Int32),
      M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.UInt64)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.UInt32).value,
        Id: M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.UInt32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.UInt32),
        Type: {
          Id: T:System.UInt32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.UInt64): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.UInt64),
    Id: M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.UInt64),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.IUtfChar<System.Char>.CastFrom,
    OverloadedMembers: [
      M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.Byte),
      M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.Char),
      M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.Int32),
      M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.UInt32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.UInt64).value,
        Id: M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.UInt64).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#IUtfChar{System#Char}#CastFrom(System.UInt64),
        Type: {
          Id: T:System.UInt64,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IUtfChar{System#Char}#CastToUInt32(System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IUtfChar{System#Char}#CastToUInt32(System.Char),
    Id: M:System.Char.System#IUtfChar{System#Char}#CastToUInt32(System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.IUtfChar<System.Char>.CastToUInt32,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IUtfChar{System#Char}#CastToUInt32(System.Char).value,
        Id: M:System.Char.System#IUtfChar{System#Char}#CastToUInt32(System.Char).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#IUtfChar{System#Char}#CastToUInt32(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.UInt32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IAdditionOperators{System#Char,System#Char,System#Char}#op_Addition(System.Char,System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IAdditionOperators{System#Char,System#Char,System#Char}#op_Addition(System.Char,System.Char),
    Id: M:System.Char.System#Numerics#IAdditionOperators{System#Char,System#Char,System#Char}#op_Addition(System.Char,System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IAdditionOperators<System.Char,System.Char,System.Char>.op_Addition,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IAdditionOperators{System#Char,System#Char,System#Char}#op_Addition(System.Char,System.Char).left,
        Id: M:System.Char.System#Numerics#IAdditionOperators{System#Char,System#Char,System#Char}#op_Addition(System.Char,System.Char).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Char.System#Numerics#IAdditionOperators{System#Char,System#Char,System#Char}#op_Addition(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IAdditionOperators{System#Char,System#Char,System#Char}#op_Addition(System.Char,System.Char).right,
        Id: M:System.Char.System#Numerics#IAdditionOperators{System#Char,System#Char,System#Char}#op_Addition(System.Char,System.Char).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Char.System#Numerics#IAdditionOperators{System#Char,System#Char,System#Char}#op_Addition(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IAdditionOperators{System#Char,System#Char,System#Char}#op_CheckedAddition(System.Char,System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IAdditionOperators{System#Char,System#Char,System#Char}#op_CheckedAddition(System.Char,System.Char),
    Id: M:System.Char.System#Numerics#IAdditionOperators{System#Char,System#Char,System#Char}#op_CheckedAddition(System.Char,System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IAdditionOperators<System.Char,System.Char,System.Char>.op_CheckedAddition,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IAdditionOperators{System#Char,System#Char,System#Char}#op_CheckedAddition(System.Char,System.Char).left,
        Id: M:System.Char.System#Numerics#IAdditionOperators{System#Char,System#Char,System#Char}#op_CheckedAddition(System.Char,System.Char).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Char.System#Numerics#IAdditionOperators{System#Char,System#Char,System#Char}#op_CheckedAddition(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IAdditionOperators{System#Char,System#Char,System#Char}#op_CheckedAddition(System.Char,System.Char).right,
        Id: M:System.Char.System#Numerics#IAdditionOperators{System#Char,System#Char,System#Char}#op_CheckedAddition(System.Char,System.Char).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Char.System#Numerics#IAdditionOperators{System#Char,System#Char,System#Char}#op_CheckedAddition(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryInteger{System#Char}#GetByteCount: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryInteger{System#Char}#GetByteCount,
    Id: M:System.Char.System#Numerics#IBinaryInteger{System#Char}#GetByteCount,
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.Numerics.IBinaryInteger<System.Char>.GetByteCount,
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryInteger{System#Char}#GetShortestBitLength: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryInteger{System#Char}#GetShortestBitLength,
    Id: M:System.Char.System#Numerics#IBinaryInteger{System#Char}#GetShortestBitLength,
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.Numerics.IBinaryInteger<System.Char>.GetShortestBitLength,
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryInteger{System#Char}#LeadingZeroCount(System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryInteger{System#Char}#LeadingZeroCount(System.Char),
    Id: M:System.Char.System#Numerics#IBinaryInteger{System#Char}#LeadingZeroCount(System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IBinaryInteger<System.Char>.LeadingZeroCount,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryInteger{System#Char}#LeadingZeroCount(System.Char).value,
        Id: M:System.Char.System#Numerics#IBinaryInteger{System#Char}#LeadingZeroCount(System.Char).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#Numerics#IBinaryInteger{System#Char}#LeadingZeroCount(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryInteger{System#Char}#PopCount(System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryInteger{System#Char}#PopCount(System.Char),
    Id: M:System.Char.System#Numerics#IBinaryInteger{System#Char}#PopCount(System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IBinaryInteger<System.Char>.PopCount,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryInteger{System#Char}#PopCount(System.Char).value,
        Id: M:System.Char.System#Numerics#IBinaryInteger{System#Char}#PopCount(System.Char).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#Numerics#IBinaryInteger{System#Char}#PopCount(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryInteger{System#Char}#RotateLeft(System.Char,System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryInteger{System#Char}#RotateLeft(System.Char,System.Int32),
    Id: M:System.Char.System#Numerics#IBinaryInteger{System#Char}#RotateLeft(System.Char,System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IBinaryInteger<System.Char>.RotateLeft,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryInteger{System#Char}#RotateLeft(System.Char,System.Int32).value,
        Id: M:System.Char.System#Numerics#IBinaryInteger{System#Char}#RotateLeft(System.Char,System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#Numerics#IBinaryInteger{System#Char}#RotateLeft(System.Char,System.Int32),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryInteger{System#Char}#RotateLeft(System.Char,System.Int32).rotateAmount,
        Id: M:System.Char.System#Numerics#IBinaryInteger{System#Char}#RotateLeft(System.Char,System.Int32).rotateAmount,
        Kind: Parameter,
        Name: rotateAmount,
        ParentId: M:System.Char.System#Numerics#IBinaryInteger{System#Char}#RotateLeft(System.Char,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryInteger{System#Char}#RotateRight(System.Char,System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryInteger{System#Char}#RotateRight(System.Char,System.Int32),
    Id: M:System.Char.System#Numerics#IBinaryInteger{System#Char}#RotateRight(System.Char,System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IBinaryInteger<System.Char>.RotateRight,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryInteger{System#Char}#RotateRight(System.Char,System.Int32).value,
        Id: M:System.Char.System#Numerics#IBinaryInteger{System#Char}#RotateRight(System.Char,System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#Numerics#IBinaryInteger{System#Char}#RotateRight(System.Char,System.Int32),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryInteger{System#Char}#RotateRight(System.Char,System.Int32).rotateAmount,
        Id: M:System.Char.System#Numerics#IBinaryInteger{System#Char}#RotateRight(System.Char,System.Int32).rotateAmount,
        Kind: Parameter,
        Name: rotateAmount,
        ParentId: M:System.Char.System#Numerics#IBinaryInteger{System#Char}#RotateRight(System.Char,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TrailingZeroCount(System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TrailingZeroCount(System.Char),
    Id: M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TrailingZeroCount(System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IBinaryInteger<System.Char>.TrailingZeroCount,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TrailingZeroCount(System.Char).value,
        Id: M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TrailingZeroCount(System.Char).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TrailingZeroCount(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TryReadBigEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Char@): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TryReadBigEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Char@),
    Id: M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TryReadBigEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Char@),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IBinaryInteger<System.Char>.TryReadBigEndian,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TryReadBigEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Char@).source,
        Id: M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TryReadBigEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Char@).source,
        Kind: Parameter,
        Name: source,
        ParentId: M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TryReadBigEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Char@),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Byte]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TryReadBigEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Char@).isUnsigned,
        Id: M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TryReadBigEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Char@).isUnsigned,
        Kind: Parameter,
        Name: isUnsigned,
        ParentId: M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TryReadBigEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Char@),
        Type: {
          Id: T:System.Boolean,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TryReadBigEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Char@).value,
        Id: M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TryReadBigEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Char@).value,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: value,
        ParentId: M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TryReadBigEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Char@),
        Type: {
          Id: T:System.Char&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TryReadLittleEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Char@): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TryReadLittleEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Char@),
    Id: M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TryReadLittleEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Char@),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IBinaryInteger<System.Char>.TryReadLittleEndian,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TryReadLittleEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Char@).source,
        Id: M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TryReadLittleEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Char@).source,
        Kind: Parameter,
        Name: source,
        ParentId: M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TryReadLittleEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Char@),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Byte]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TryReadLittleEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Char@).isUnsigned,
        Id: M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TryReadLittleEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Char@).isUnsigned,
        Kind: Parameter,
        Name: isUnsigned,
        ParentId: M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TryReadLittleEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Char@),
        Type: {
          Id: T:System.Boolean,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TryReadLittleEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Char@).value,
        Id: M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TryReadLittleEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Char@).value,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: value,
        ParentId: M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TryReadLittleEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Char@),
        Type: {
          Id: T:System.Char&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TryWriteBigEndian(System.Span{System.Byte},System.Int32@): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TryWriteBigEndian(System.Span{System.Byte},System.Int32@),
    Id: M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TryWriteBigEndian(System.Span{System.Byte},System.Int32@),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.Numerics.IBinaryInteger<System.Char>.TryWriteBigEndian,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TryWriteBigEndian(System.Span{System.Byte},System.Int32@).destination,
        Id: M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TryWriteBigEndian(System.Span{System.Byte},System.Int32@).destination,
        Kind: Parameter,
        Name: destination,
        ParentId: M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TryWriteBigEndian(System.Span{System.Byte},System.Int32@),
        Type: {
          Id: T:System.Span`1[[System.Byte]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TryWriteBigEndian(System.Span{System.Byte},System.Int32@).bytesWritten,
        Id: M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TryWriteBigEndian(System.Span{System.Byte},System.Int32@).bytesWritten,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: bytesWritten,
        ParentId: M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TryWriteBigEndian(System.Span{System.Byte},System.Int32@),
        Type: {
          Id: T:System.Int32&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TryWriteLittleEndian(System.Span{System.Byte},System.Int32@): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TryWriteLittleEndian(System.Span{System.Byte},System.Int32@),
    Id: M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TryWriteLittleEndian(System.Span{System.Byte},System.Int32@),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.Numerics.IBinaryInteger<System.Char>.TryWriteLittleEndian,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TryWriteLittleEndian(System.Span{System.Byte},System.Int32@).destination,
        Id: M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TryWriteLittleEndian(System.Span{System.Byte},System.Int32@).destination,
        Kind: Parameter,
        Name: destination,
        ParentId: M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TryWriteLittleEndian(System.Span{System.Byte},System.Int32@),
        Type: {
          Id: T:System.Span`1[[System.Byte]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TryWriteLittleEndian(System.Span{System.Byte},System.Int32@).bytesWritten,
        Id: M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TryWriteLittleEndian(System.Span{System.Byte},System.Int32@).bytesWritten,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: bytesWritten,
        ParentId: M:System.Char.System#Numerics#IBinaryInteger{System#Char}#TryWriteLittleEndian(System.Span{System.Byte},System.Int32@),
        Type: {
          Id: T:System.Int32&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryNumber{System#Char}#IsPow2(System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryNumber{System#Char}#IsPow2(System.Char),
    Id: M:System.Char.System#Numerics#IBinaryNumber{System#Char}#IsPow2(System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IBinaryNumber<System.Char>.IsPow2,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryNumber{System#Char}#IsPow2(System.Char).value,
        Id: M:System.Char.System#Numerics#IBinaryNumber{System#Char}#IsPow2(System.Char).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#Numerics#IBinaryNumber{System#Char}#IsPow2(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryNumber{System#Char}#Log2(System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryNumber{System#Char}#Log2(System.Char),
    Id: M:System.Char.System#Numerics#IBinaryNumber{System#Char}#Log2(System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IBinaryNumber<System.Char>.Log2,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryNumber{System#Char}#Log2(System.Char).value,
        Id: M:System.Char.System#Numerics#IBinaryNumber{System#Char}#Log2(System.Char).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#Numerics#IBinaryNumber{System#Char}#Log2(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBitwiseOperators{System#Char,System#Char,System#Char}#op_BitwiseAnd(System.Char,System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBitwiseOperators{System#Char,System#Char,System#Char}#op_BitwiseAnd(System.Char,System.Char),
    Id: M:System.Char.System#Numerics#IBitwiseOperators{System#Char,System#Char,System#Char}#op_BitwiseAnd(System.Char,System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IBitwiseOperators<System.Char,System.Char,System.Char>.op_BitwiseAnd,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBitwiseOperators{System#Char,System#Char,System#Char}#op_BitwiseAnd(System.Char,System.Char).left,
        Id: M:System.Char.System#Numerics#IBitwiseOperators{System#Char,System#Char,System#Char}#op_BitwiseAnd(System.Char,System.Char).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Char.System#Numerics#IBitwiseOperators{System#Char,System#Char,System#Char}#op_BitwiseAnd(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBitwiseOperators{System#Char,System#Char,System#Char}#op_BitwiseAnd(System.Char,System.Char).right,
        Id: M:System.Char.System#Numerics#IBitwiseOperators{System#Char,System#Char,System#Char}#op_BitwiseAnd(System.Char,System.Char).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Char.System#Numerics#IBitwiseOperators{System#Char,System#Char,System#Char}#op_BitwiseAnd(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBitwiseOperators{System#Char,System#Char,System#Char}#op_BitwiseOr(System.Char,System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBitwiseOperators{System#Char,System#Char,System#Char}#op_BitwiseOr(System.Char,System.Char),
    Id: M:System.Char.System#Numerics#IBitwiseOperators{System#Char,System#Char,System#Char}#op_BitwiseOr(System.Char,System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IBitwiseOperators<System.Char,System.Char,System.Char>.op_BitwiseOr,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBitwiseOperators{System#Char,System#Char,System#Char}#op_BitwiseOr(System.Char,System.Char).left,
        Id: M:System.Char.System#Numerics#IBitwiseOperators{System#Char,System#Char,System#Char}#op_BitwiseOr(System.Char,System.Char).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Char.System#Numerics#IBitwiseOperators{System#Char,System#Char,System#Char}#op_BitwiseOr(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBitwiseOperators{System#Char,System#Char,System#Char}#op_BitwiseOr(System.Char,System.Char).right,
        Id: M:System.Char.System#Numerics#IBitwiseOperators{System#Char,System#Char,System#Char}#op_BitwiseOr(System.Char,System.Char).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Char.System#Numerics#IBitwiseOperators{System#Char,System#Char,System#Char}#op_BitwiseOr(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBitwiseOperators{System#Char,System#Char,System#Char}#op_ExclusiveOr(System.Char,System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBitwiseOperators{System#Char,System#Char,System#Char}#op_ExclusiveOr(System.Char,System.Char),
    Id: M:System.Char.System#Numerics#IBitwiseOperators{System#Char,System#Char,System#Char}#op_ExclusiveOr(System.Char,System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IBitwiseOperators<System.Char,System.Char,System.Char>.op_ExclusiveOr,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBitwiseOperators{System#Char,System#Char,System#Char}#op_ExclusiveOr(System.Char,System.Char).left,
        Id: M:System.Char.System#Numerics#IBitwiseOperators{System#Char,System#Char,System#Char}#op_ExclusiveOr(System.Char,System.Char).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Char.System#Numerics#IBitwiseOperators{System#Char,System#Char,System#Char}#op_ExclusiveOr(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBitwiseOperators{System#Char,System#Char,System#Char}#op_ExclusiveOr(System.Char,System.Char).right,
        Id: M:System.Char.System#Numerics#IBitwiseOperators{System#Char,System#Char,System#Char}#op_ExclusiveOr(System.Char,System.Char).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Char.System#Numerics#IBitwiseOperators{System#Char,System#Char,System#Char}#op_ExclusiveOr(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBitwiseOperators{System#Char,System#Char,System#Char}#op_OnesComplement(System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBitwiseOperators{System#Char,System#Char,System#Char}#op_OnesComplement(System.Char),
    Id: M:System.Char.System#Numerics#IBitwiseOperators{System#Char,System#Char,System#Char}#op_OnesComplement(System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IBitwiseOperators<System.Char,System.Char,System.Char>.op_OnesComplement,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBitwiseOperators{System#Char,System#Char,System#Char}#op_OnesComplement(System.Char).value,
        Id: M:System.Char.System#Numerics#IBitwiseOperators{System#Char,System#Char,System#Char}#op_OnesComplement(System.Char).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#Numerics#IBitwiseOperators{System#Char,System#Char,System#Char}#op_OnesComplement(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IComparisonOperators{System#Char,System#Char,System#Boolean}#op_GreaterThan(System.Char,System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IComparisonOperators{System#Char,System#Char,System#Boolean}#op_GreaterThan(System.Char,System.Char),
    Id: M:System.Char.System#Numerics#IComparisonOperators{System#Char,System#Char,System#Boolean}#op_GreaterThan(System.Char,System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IComparisonOperators<System.Char,System.Char,System.Boolean>.op_GreaterThan,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IComparisonOperators{System#Char,System#Char,System#Boolean}#op_GreaterThan(System.Char,System.Char).left,
        Id: M:System.Char.System#Numerics#IComparisonOperators{System#Char,System#Char,System#Boolean}#op_GreaterThan(System.Char,System.Char).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Char.System#Numerics#IComparisonOperators{System#Char,System#Char,System#Boolean}#op_GreaterThan(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IComparisonOperators{System#Char,System#Char,System#Boolean}#op_GreaterThan(System.Char,System.Char).right,
        Id: M:System.Char.System#Numerics#IComparisonOperators{System#Char,System#Char,System#Boolean}#op_GreaterThan(System.Char,System.Char).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Char.System#Numerics#IComparisonOperators{System#Char,System#Char,System#Boolean}#op_GreaterThan(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IComparisonOperators{System#Char,System#Char,System#Boolean}#op_GreaterThanOrEqual(System.Char,System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IComparisonOperators{System#Char,System#Char,System#Boolean}#op_GreaterThanOrEqual(System.Char,System.Char),
    Id: M:System.Char.System#Numerics#IComparisonOperators{System#Char,System#Char,System#Boolean}#op_GreaterThanOrEqual(System.Char,System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IComparisonOperators<System.Char,System.Char,System.Boolean>.op_GreaterThanOrEqual,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IComparisonOperators{System#Char,System#Char,System#Boolean}#op_GreaterThanOrEqual(System.Char,System.Char).left,
        Id: M:System.Char.System#Numerics#IComparisonOperators{System#Char,System#Char,System#Boolean}#op_GreaterThanOrEqual(System.Char,System.Char).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Char.System#Numerics#IComparisonOperators{System#Char,System#Char,System#Boolean}#op_GreaterThanOrEqual(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IComparisonOperators{System#Char,System#Char,System#Boolean}#op_GreaterThanOrEqual(System.Char,System.Char).right,
        Id: M:System.Char.System#Numerics#IComparisonOperators{System#Char,System#Char,System#Boolean}#op_GreaterThanOrEqual(System.Char,System.Char).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Char.System#Numerics#IComparisonOperators{System#Char,System#Char,System#Boolean}#op_GreaterThanOrEqual(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IComparisonOperators{System#Char,System#Char,System#Boolean}#op_LessThan(System.Char,System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IComparisonOperators{System#Char,System#Char,System#Boolean}#op_LessThan(System.Char,System.Char),
    Id: M:System.Char.System#Numerics#IComparisonOperators{System#Char,System#Char,System#Boolean}#op_LessThan(System.Char,System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IComparisonOperators<System.Char,System.Char,System.Boolean>.op_LessThan,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IComparisonOperators{System#Char,System#Char,System#Boolean}#op_LessThan(System.Char,System.Char).left,
        Id: M:System.Char.System#Numerics#IComparisonOperators{System#Char,System#Char,System#Boolean}#op_LessThan(System.Char,System.Char).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Char.System#Numerics#IComparisonOperators{System#Char,System#Char,System#Boolean}#op_LessThan(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IComparisonOperators{System#Char,System#Char,System#Boolean}#op_LessThan(System.Char,System.Char).right,
        Id: M:System.Char.System#Numerics#IComparisonOperators{System#Char,System#Char,System#Boolean}#op_LessThan(System.Char,System.Char).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Char.System#Numerics#IComparisonOperators{System#Char,System#Char,System#Boolean}#op_LessThan(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IComparisonOperators{System#Char,System#Char,System#Boolean}#op_LessThanOrEqual(System.Char,System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IComparisonOperators{System#Char,System#Char,System#Boolean}#op_LessThanOrEqual(System.Char,System.Char),
    Id: M:System.Char.System#Numerics#IComparisonOperators{System#Char,System#Char,System#Boolean}#op_LessThanOrEqual(System.Char,System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IComparisonOperators<System.Char,System.Char,System.Boolean>.op_LessThanOrEqual,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IComparisonOperators{System#Char,System#Char,System#Boolean}#op_LessThanOrEqual(System.Char,System.Char).left,
        Id: M:System.Char.System#Numerics#IComparisonOperators{System#Char,System#Char,System#Boolean}#op_LessThanOrEqual(System.Char,System.Char).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Char.System#Numerics#IComparisonOperators{System#Char,System#Char,System#Boolean}#op_LessThanOrEqual(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IComparisonOperators{System#Char,System#Char,System#Boolean}#op_LessThanOrEqual(System.Char,System.Char).right,
        Id: M:System.Char.System#Numerics#IComparisonOperators{System#Char,System#Char,System#Boolean}#op_LessThanOrEqual(System.Char,System.Char).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Char.System#Numerics#IComparisonOperators{System#Char,System#Char,System#Boolean}#op_LessThanOrEqual(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IDecrementOperators{System#Char}#op_CheckedDecrement(System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IDecrementOperators{System#Char}#op_CheckedDecrement(System.Char),
    Id: M:System.Char.System#Numerics#IDecrementOperators{System#Char}#op_CheckedDecrement(System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IDecrementOperators<System.Char>.op_CheckedDecrement,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IDecrementOperators{System#Char}#op_CheckedDecrement(System.Char).value,
        Id: M:System.Char.System#Numerics#IDecrementOperators{System#Char}#op_CheckedDecrement(System.Char).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#Numerics#IDecrementOperators{System#Char}#op_CheckedDecrement(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IDecrementOperators{System#Char}#op_Decrement(System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IDecrementOperators{System#Char}#op_Decrement(System.Char),
    Id: M:System.Char.System#Numerics#IDecrementOperators{System#Char}#op_Decrement(System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IDecrementOperators<System.Char>.op_Decrement,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IDecrementOperators{System#Char}#op_Decrement(System.Char).value,
        Id: M:System.Char.System#Numerics#IDecrementOperators{System#Char}#op_Decrement(System.Char).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#Numerics#IDecrementOperators{System#Char}#op_Decrement(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IDivisionOperators{System#Char,System#Char,System#Char}#op_Division(System.Char,System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IDivisionOperators{System#Char,System#Char,System#Char}#op_Division(System.Char,System.Char),
    Id: M:System.Char.System#Numerics#IDivisionOperators{System#Char,System#Char,System#Char}#op_Division(System.Char,System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IDivisionOperators<System.Char,System.Char,System.Char>.op_Division,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IDivisionOperators{System#Char,System#Char,System#Char}#op_Division(System.Char,System.Char).left,
        Id: M:System.Char.System#Numerics#IDivisionOperators{System#Char,System#Char,System#Char}#op_Division(System.Char,System.Char).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Char.System#Numerics#IDivisionOperators{System#Char,System#Char,System#Char}#op_Division(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IDivisionOperators{System#Char,System#Char,System#Char}#op_Division(System.Char,System.Char).right,
        Id: M:System.Char.System#Numerics#IDivisionOperators{System#Char,System#Char,System#Char}#op_Division(System.Char,System.Char).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Char.System#Numerics#IDivisionOperators{System#Char,System#Char,System#Char}#op_Division(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IEqualityOperators{System#Char,System#Char,System#Boolean}#op_Equality(System.Char,System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IEqualityOperators{System#Char,System#Char,System#Boolean}#op_Equality(System.Char,System.Char),
    Id: M:System.Char.System#Numerics#IEqualityOperators{System#Char,System#Char,System#Boolean}#op_Equality(System.Char,System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IEqualityOperators<System.Char,System.Char,System.Boolean>.op_Equality,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IEqualityOperators{System#Char,System#Char,System#Boolean}#op_Equality(System.Char,System.Char).left,
        Id: M:System.Char.System#Numerics#IEqualityOperators{System#Char,System#Char,System#Boolean}#op_Equality(System.Char,System.Char).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Char.System#Numerics#IEqualityOperators{System#Char,System#Char,System#Boolean}#op_Equality(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IEqualityOperators{System#Char,System#Char,System#Boolean}#op_Equality(System.Char,System.Char).right,
        Id: M:System.Char.System#Numerics#IEqualityOperators{System#Char,System#Char,System#Boolean}#op_Equality(System.Char,System.Char).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Char.System#Numerics#IEqualityOperators{System#Char,System#Char,System#Boolean}#op_Equality(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IEqualityOperators{System#Char,System#Char,System#Boolean}#op_Inequality(System.Char,System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IEqualityOperators{System#Char,System#Char,System#Boolean}#op_Inequality(System.Char,System.Char),
    Id: M:System.Char.System#Numerics#IEqualityOperators{System#Char,System#Char,System#Boolean}#op_Inequality(System.Char,System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IEqualityOperators<System.Char,System.Char,System.Boolean>.op_Inequality,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IEqualityOperators{System#Char,System#Char,System#Boolean}#op_Inequality(System.Char,System.Char).left,
        Id: M:System.Char.System#Numerics#IEqualityOperators{System#Char,System#Char,System#Boolean}#op_Inequality(System.Char,System.Char).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Char.System#Numerics#IEqualityOperators{System#Char,System#Char,System#Boolean}#op_Inequality(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IEqualityOperators{System#Char,System#Char,System#Boolean}#op_Inequality(System.Char,System.Char).right,
        Id: M:System.Char.System#Numerics#IEqualityOperators{System#Char,System#Char,System#Boolean}#op_Inequality(System.Char,System.Char).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Char.System#Numerics#IEqualityOperators{System#Char,System#Char,System#Boolean}#op_Inequality(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IIncrementOperators{System#Char}#op_CheckedIncrement(System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IIncrementOperators{System#Char}#op_CheckedIncrement(System.Char),
    Id: M:System.Char.System#Numerics#IIncrementOperators{System#Char}#op_CheckedIncrement(System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IIncrementOperators<System.Char>.op_CheckedIncrement,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IIncrementOperators{System#Char}#op_CheckedIncrement(System.Char).value,
        Id: M:System.Char.System#Numerics#IIncrementOperators{System#Char}#op_CheckedIncrement(System.Char).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#Numerics#IIncrementOperators{System#Char}#op_CheckedIncrement(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IIncrementOperators{System#Char}#op_Increment(System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IIncrementOperators{System#Char}#op_Increment(System.Char),
    Id: M:System.Char.System#Numerics#IIncrementOperators{System#Char}#op_Increment(System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IIncrementOperators<System.Char>.op_Increment,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IIncrementOperators{System#Char}#op_Increment(System.Char).value,
        Id: M:System.Char.System#Numerics#IIncrementOperators{System#Char}#op_Increment(System.Char).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#Numerics#IIncrementOperators{System#Char}#op_Increment(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IModulusOperators{System#Char,System#Char,System#Char}#op_Modulus(System.Char,System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IModulusOperators{System#Char,System#Char,System#Char}#op_Modulus(System.Char,System.Char),
    Id: M:System.Char.System#Numerics#IModulusOperators{System#Char,System#Char,System#Char}#op_Modulus(System.Char,System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IModulusOperators<System.Char,System.Char,System.Char>.op_Modulus,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IModulusOperators{System#Char,System#Char,System#Char}#op_Modulus(System.Char,System.Char).left,
        Id: M:System.Char.System#Numerics#IModulusOperators{System#Char,System#Char,System#Char}#op_Modulus(System.Char,System.Char).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Char.System#Numerics#IModulusOperators{System#Char,System#Char,System#Char}#op_Modulus(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IModulusOperators{System#Char,System#Char,System#Char}#op_Modulus(System.Char,System.Char).right,
        Id: M:System.Char.System#Numerics#IModulusOperators{System#Char,System#Char,System#Char}#op_Modulus(System.Char,System.Char).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Char.System#Numerics#IModulusOperators{System#Char,System#Char,System#Char}#op_Modulus(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IMultiplyOperators{System#Char,System#Char,System#Char}#op_CheckedMultiply(System.Char,System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IMultiplyOperators{System#Char,System#Char,System#Char}#op_CheckedMultiply(System.Char,System.Char),
    Id: M:System.Char.System#Numerics#IMultiplyOperators{System#Char,System#Char,System#Char}#op_CheckedMultiply(System.Char,System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IMultiplyOperators<System.Char,System.Char,System.Char>.op_CheckedMultiply,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IMultiplyOperators{System#Char,System#Char,System#Char}#op_CheckedMultiply(System.Char,System.Char).left,
        Id: M:System.Char.System#Numerics#IMultiplyOperators{System#Char,System#Char,System#Char}#op_CheckedMultiply(System.Char,System.Char).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Char.System#Numerics#IMultiplyOperators{System#Char,System#Char,System#Char}#op_CheckedMultiply(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IMultiplyOperators{System#Char,System#Char,System#Char}#op_CheckedMultiply(System.Char,System.Char).right,
        Id: M:System.Char.System#Numerics#IMultiplyOperators{System#Char,System#Char,System#Char}#op_CheckedMultiply(System.Char,System.Char).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Char.System#Numerics#IMultiplyOperators{System#Char,System#Char,System#Char}#op_CheckedMultiply(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IMultiplyOperators{System#Char,System#Char,System#Char}#op_Multiply(System.Char,System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IMultiplyOperators{System#Char,System#Char,System#Char}#op_Multiply(System.Char,System.Char),
    Id: M:System.Char.System#Numerics#IMultiplyOperators{System#Char,System#Char,System#Char}#op_Multiply(System.Char,System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IMultiplyOperators<System.Char,System.Char,System.Char>.op_Multiply,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IMultiplyOperators{System#Char,System#Char,System#Char}#op_Multiply(System.Char,System.Char).left,
        Id: M:System.Char.System#Numerics#IMultiplyOperators{System#Char,System#Char,System#Char}#op_Multiply(System.Char,System.Char).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Char.System#Numerics#IMultiplyOperators{System#Char,System#Char,System#Char}#op_Multiply(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IMultiplyOperators{System#Char,System#Char,System#Char}#op_Multiply(System.Char,System.Char).right,
        Id: M:System.Char.System#Numerics#IMultiplyOperators{System#Char,System#Char,System#Char}#op_Multiply(System.Char,System.Char).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Char.System#Numerics#IMultiplyOperators{System#Char,System#Char,System#Char}#op_Multiply(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#Abs(System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#Abs(System.Char),
    Id: M:System.Char.System#Numerics#INumberBase{System#Char}#Abs(System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Char>.Abs,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#Abs(System.Char).value,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#Abs(System.Char).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#Abs(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsCanonical(System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsCanonical(System.Char),
    Id: M:System.Char.System#Numerics#INumberBase{System#Char}#IsCanonical(System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Char>.IsCanonical,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsCanonical(System.Char).value,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#IsCanonical(System.Char).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#IsCanonical(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsComplexNumber(System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsComplexNumber(System.Char),
    Id: M:System.Char.System#Numerics#INumberBase{System#Char}#IsComplexNumber(System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Char>.IsComplexNumber,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsComplexNumber(System.Char).value,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#IsComplexNumber(System.Char).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#IsComplexNumber(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsEvenInteger(System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsEvenInteger(System.Char),
    Id: M:System.Char.System#Numerics#INumberBase{System#Char}#IsEvenInteger(System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Char>.IsEvenInteger,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsEvenInteger(System.Char).value,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#IsEvenInteger(System.Char).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#IsEvenInteger(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsFinite(System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsFinite(System.Char),
    Id: M:System.Char.System#Numerics#INumberBase{System#Char}#IsFinite(System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Char>.IsFinite,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsFinite(System.Char).value,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#IsFinite(System.Char).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#IsFinite(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsImaginaryNumber(System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsImaginaryNumber(System.Char),
    Id: M:System.Char.System#Numerics#INumberBase{System#Char}#IsImaginaryNumber(System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Char>.IsImaginaryNumber,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsImaginaryNumber(System.Char).value,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#IsImaginaryNumber(System.Char).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#IsImaginaryNumber(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsInfinity(System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsInfinity(System.Char),
    Id: M:System.Char.System#Numerics#INumberBase{System#Char}#IsInfinity(System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Char>.IsInfinity,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsInfinity(System.Char).value,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#IsInfinity(System.Char).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#IsInfinity(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsInteger(System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsInteger(System.Char),
    Id: M:System.Char.System#Numerics#INumberBase{System#Char}#IsInteger(System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Char>.IsInteger,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsInteger(System.Char).value,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#IsInteger(System.Char).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#IsInteger(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsNaN(System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsNaN(System.Char),
    Id: M:System.Char.System#Numerics#INumberBase{System#Char}#IsNaN(System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Char>.IsNaN,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsNaN(System.Char).value,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#IsNaN(System.Char).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#IsNaN(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsNegative(System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsNegative(System.Char),
    Id: M:System.Char.System#Numerics#INumberBase{System#Char}#IsNegative(System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Char>.IsNegative,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsNegative(System.Char).value,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#IsNegative(System.Char).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#IsNegative(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsNegativeInfinity(System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsNegativeInfinity(System.Char),
    Id: M:System.Char.System#Numerics#INumberBase{System#Char}#IsNegativeInfinity(System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Char>.IsNegativeInfinity,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsNegativeInfinity(System.Char).value,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#IsNegativeInfinity(System.Char).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#IsNegativeInfinity(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsNormal(System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsNormal(System.Char),
    Id: M:System.Char.System#Numerics#INumberBase{System#Char}#IsNormal(System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Char>.IsNormal,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsNormal(System.Char).value,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#IsNormal(System.Char).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#IsNormal(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsOddInteger(System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsOddInteger(System.Char),
    Id: M:System.Char.System#Numerics#INumberBase{System#Char}#IsOddInteger(System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Char>.IsOddInteger,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsOddInteger(System.Char).value,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#IsOddInteger(System.Char).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#IsOddInteger(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsPositive(System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsPositive(System.Char),
    Id: M:System.Char.System#Numerics#INumberBase{System#Char}#IsPositive(System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Char>.IsPositive,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsPositive(System.Char).value,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#IsPositive(System.Char).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#IsPositive(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsPositiveInfinity(System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsPositiveInfinity(System.Char),
    Id: M:System.Char.System#Numerics#INumberBase{System#Char}#IsPositiveInfinity(System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Char>.IsPositiveInfinity,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsPositiveInfinity(System.Char).value,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#IsPositiveInfinity(System.Char).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#IsPositiveInfinity(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsRealNumber(System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsRealNumber(System.Char),
    Id: M:System.Char.System#Numerics#INumberBase{System#Char}#IsRealNumber(System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Char>.IsRealNumber,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsRealNumber(System.Char).value,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#IsRealNumber(System.Char).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#IsRealNumber(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsSubnormal(System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsSubnormal(System.Char),
    Id: M:System.Char.System#Numerics#INumberBase{System#Char}#IsSubnormal(System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Char>.IsSubnormal,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsSubnormal(System.Char).value,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#IsSubnormal(System.Char).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#IsSubnormal(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsZero(System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsZero(System.Char),
    Id: M:System.Char.System#Numerics#INumberBase{System#Char}#IsZero(System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Char>.IsZero,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#IsZero(System.Char).value,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#IsZero(System.Char).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#IsZero(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#MaxMagnitude(System.Char,System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#MaxMagnitude(System.Char,System.Char),
    Id: M:System.Char.System#Numerics#INumberBase{System#Char}#MaxMagnitude(System.Char,System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Char>.MaxMagnitude,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#MaxMagnitude(System.Char,System.Char).x,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#MaxMagnitude(System.Char,System.Char).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#MaxMagnitude(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#MaxMagnitude(System.Char,System.Char).y,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#MaxMagnitude(System.Char,System.Char).y,
        Kind: Parameter,
        Name: y,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#MaxMagnitude(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#MaxMagnitudeNumber(System.Char,System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#MaxMagnitudeNumber(System.Char,System.Char),
    Id: M:System.Char.System#Numerics#INumberBase{System#Char}#MaxMagnitudeNumber(System.Char,System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Char>.MaxMagnitudeNumber,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#MaxMagnitudeNumber(System.Char,System.Char).x,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#MaxMagnitudeNumber(System.Char,System.Char).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#MaxMagnitudeNumber(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#MaxMagnitudeNumber(System.Char,System.Char).y,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#MaxMagnitudeNumber(System.Char,System.Char).y,
        Kind: Parameter,
        Name: y,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#MaxMagnitudeNumber(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#MinMagnitude(System.Char,System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#MinMagnitude(System.Char,System.Char),
    Id: M:System.Char.System#Numerics#INumberBase{System#Char}#MinMagnitude(System.Char,System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Char>.MinMagnitude,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#MinMagnitude(System.Char,System.Char).x,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#MinMagnitude(System.Char,System.Char).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#MinMagnitude(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#MinMagnitude(System.Char,System.Char).y,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#MinMagnitude(System.Char,System.Char).y,
        Kind: Parameter,
        Name: y,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#MinMagnitude(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#MinMagnitudeNumber(System.Char,System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#MinMagnitudeNumber(System.Char,System.Char),
    Id: M:System.Char.System#Numerics#INumberBase{System#Char}#MinMagnitudeNumber(System.Char,System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Char>.MinMagnitudeNumber,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#MinMagnitudeNumber(System.Char,System.Char).x,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#MinMagnitudeNumber(System.Char,System.Char).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#MinMagnitudeNumber(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#MinMagnitudeNumber(System.Char,System.Char).y,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#MinMagnitudeNumber(System.Char,System.Char).y,
        Kind: Parameter,
        Name: y,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#MinMagnitudeNumber(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#MultiplyAddEstimate(System.Char,System.Char,System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#MultiplyAddEstimate(System.Char,System.Char,System.Char),
    Id: M:System.Char.System#Numerics#INumberBase{System#Char}#MultiplyAddEstimate(System.Char,System.Char,System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Char>.MultiplyAddEstimate,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#MultiplyAddEstimate(System.Char,System.Char,System.Char).left,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#MultiplyAddEstimate(System.Char,System.Char,System.Char).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#MultiplyAddEstimate(System.Char,System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#MultiplyAddEstimate(System.Char,System.Char,System.Char).right,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#MultiplyAddEstimate(System.Char,System.Char,System.Char).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#MultiplyAddEstimate(System.Char,System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#MultiplyAddEstimate(System.Char,System.Char,System.Char).addend,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#MultiplyAddEstimate(System.Char,System.Char,System.Char).addend,
        Kind: Parameter,
        Name: addend,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#MultiplyAddEstimate(System.Char,System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider),
    Id: M:System.Char.System#Numerics#INumberBase{System#Char}#Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Char>.Parse,
    OverloadedMembers: [
      M:System.Char.System#Numerics#INumberBase{System#Char}#Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider).s,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Char]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider).style,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider).style,
        Kind: Parameter,
        Name: style,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider),
        Type: {
          Id: T:System.Globalization.NumberStyles,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider).provider,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider),
    Id: M:System.Char.System#Numerics#INumberBase{System#Char}#Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Char>.Parse,
    OverloadedMembers: [
      M:System.Char.System#Numerics#INumberBase{System#Char}#Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider).s,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider).style,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider).style,
        Kind: Parameter,
        Name: style,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider),
        Type: {
          Id: T:System.Globalization.NumberStyles,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider).provider,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertFromChecked``1(``0,System.Char@): {
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.MethodImplAttribute,
        Id: T:System.Runtime.CompilerServices.MethodImplAttribute,
        Kind: Attribute,
        Name: MethodImplAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertFromChecked``1(``0,System.Char@),
    Id: M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertFromChecked``1(``0,System.Char@),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Char>.TryConvertFromChecked,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertFromChecked``1(``0,System.Char@).value,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertFromChecked``1(``0,System.Char@).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertFromChecked``1(``0,System.Char@),
        Type: {
          Id: T:System.Char.System.Numerics.INumberBase<System.Char>.TryConvertFromChecked.TOther,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertFromChecked``1(``0,System.Char@).result,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertFromChecked``1(``0,System.Char@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertFromChecked``1(``0,System.Char@),
        Type: {
          Id: T:System.Char&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertFromChecked``1(``0,System.Char@).TOther,
        Id: G:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertFromChecked``1(``0,System.Char@).TOther,
        Kind: TypeParameter,
        Name: TOther,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertFromChecked``1(``0,System.Char@)
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertFromSaturating``1(``0,System.Char@): {
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.MethodImplAttribute,
        Id: T:System.Runtime.CompilerServices.MethodImplAttribute,
        Kind: Attribute,
        Name: MethodImplAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertFromSaturating``1(``0,System.Char@),
    Id: M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertFromSaturating``1(``0,System.Char@),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Char>.TryConvertFromSaturating,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertFromSaturating``1(``0,System.Char@).value,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertFromSaturating``1(``0,System.Char@).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertFromSaturating``1(``0,System.Char@),
        Type: {
          Id: T:System.Char.System.Numerics.INumberBase<System.Char>.TryConvertFromSaturating.TOther,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertFromSaturating``1(``0,System.Char@).result,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertFromSaturating``1(``0,System.Char@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertFromSaturating``1(``0,System.Char@),
        Type: {
          Id: T:System.Char&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertFromSaturating``1(``0,System.Char@).TOther,
        Id: G:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertFromSaturating``1(``0,System.Char@).TOther,
        Kind: TypeParameter,
        Name: TOther,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertFromSaturating``1(``0,System.Char@)
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertFromTruncating``1(``0,System.Char@): {
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.MethodImplAttribute,
        Id: T:System.Runtime.CompilerServices.MethodImplAttribute,
        Kind: Attribute,
        Name: MethodImplAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertFromTruncating``1(``0,System.Char@),
    Id: M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertFromTruncating``1(``0,System.Char@),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Char>.TryConvertFromTruncating,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertFromTruncating``1(``0,System.Char@).value,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertFromTruncating``1(``0,System.Char@).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertFromTruncating``1(``0,System.Char@),
        Type: {
          Id: T:System.Char.System.Numerics.INumberBase<System.Char>.TryConvertFromTruncating.TOther,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertFromTruncating``1(``0,System.Char@).result,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertFromTruncating``1(``0,System.Char@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertFromTruncating``1(``0,System.Char@),
        Type: {
          Id: T:System.Char&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertFromTruncating``1(``0,System.Char@).TOther,
        Id: G:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertFromTruncating``1(``0,System.Char@).TOther,
        Kind: TypeParameter,
        Name: TOther,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertFromTruncating``1(``0,System.Char@)
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertToChecked``1(System.Char,``0@): {
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.MethodImplAttribute,
        Id: T:System.Runtime.CompilerServices.MethodImplAttribute,
        Kind: Attribute,
        Name: MethodImplAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertToChecked``1(System.Char,``0@),
    Id: M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertToChecked``1(System.Char,``0@),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Char>.TryConvertToChecked,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertToChecked``1(System.Char,``0@).value,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertToChecked``1(System.Char,``0@).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertToChecked``1(System.Char,``0@),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertToChecked``1(System.Char,``0@).result,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertToChecked``1(System.Char,``0@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertToChecked``1(System.Char,``0@),
        Type: {
          Id: T:``0&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertToChecked``1(System.Char,``0@).TOther,
        Id: G:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertToChecked``1(System.Char,``0@).TOther,
        Kind: TypeParameter,
        Name: TOther,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertToChecked``1(System.Char,``0@)
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertToSaturating``1(System.Char,``0@): {
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.MethodImplAttribute,
        Id: T:System.Runtime.CompilerServices.MethodImplAttribute,
        Kind: Attribute,
        Name: MethodImplAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertToSaturating``1(System.Char,``0@),
    Id: M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertToSaturating``1(System.Char,``0@),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Char>.TryConvertToSaturating,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertToSaturating``1(System.Char,``0@).value,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertToSaturating``1(System.Char,``0@).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertToSaturating``1(System.Char,``0@),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertToSaturating``1(System.Char,``0@).result,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertToSaturating``1(System.Char,``0@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertToSaturating``1(System.Char,``0@),
        Type: {
          Id: T:``0&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertToSaturating``1(System.Char,``0@).TOther,
        Id: G:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertToSaturating``1(System.Char,``0@).TOther,
        Kind: TypeParameter,
        Name: TOther,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertToSaturating``1(System.Char,``0@)
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertToTruncating``1(System.Char,``0@): {
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.MethodImplAttribute,
        Id: T:System.Runtime.CompilerServices.MethodImplAttribute,
        Kind: Attribute,
        Name: MethodImplAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertToTruncating``1(System.Char,``0@),
    Id: M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertToTruncating``1(System.Char,``0@),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Char>.TryConvertToTruncating,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertToTruncating``1(System.Char,``0@).value,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertToTruncating``1(System.Char,``0@).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertToTruncating``1(System.Char,``0@),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertToTruncating``1(System.Char,``0@).result,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertToTruncating``1(System.Char,``0@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertToTruncating``1(System.Char,``0@),
        Type: {
          Id: T:``0&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertToTruncating``1(System.Char,``0@).TOther,
        Id: G:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertToTruncating``1(System.Char,``0@).TOther,
        Kind: TypeParameter,
        Name: TOther,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#TryConvertToTruncating``1(System.Char,``0@)
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Char@): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Char@),
    Id: M:System.Char.System#Numerics#INumberBase{System#Char}#TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Char@),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Char>.TryParse,
    OverloadedMembers: [
      M:System.Char.System#Numerics#INumberBase{System#Char}#TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Char@)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Char@).s,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Char@).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Char@),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Char]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Char@).style,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Char@).style,
        Kind: Parameter,
        Name: style,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Char@),
        Type: {
          Id: T:System.Globalization.NumberStyles,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Char@).provider,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Char@).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Char@),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Char@).result,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Char@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Char@),
        Type: {
          Id: T:System.Char&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Char@): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Char@),
    Id: M:System.Char.System#Numerics#INumberBase{System#Char}#TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Char@),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Char>.TryParse,
    OverloadedMembers: [
      M:System.Char.System#Numerics#INumberBase{System#Char}#TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Char@)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Char@).s,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Char@).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Char@),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Char@).style,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Char@).style,
        Kind: Parameter,
        Name: style,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Char@),
        Type: {
          Id: T:System.Globalization.NumberStyles,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Char@).provider,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Char@).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Char@),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Char@).result,
        Id: M:System.Char.System#Numerics#INumberBase{System#Char}#TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Char@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Char.System#Numerics#INumberBase{System#Char}#TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Char@),
        Type: {
          Id: T:System.Char&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IShiftOperators{System#Char,System#Int32,System#Char}#op_LeftShift(System.Char,System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IShiftOperators{System#Char,System#Int32,System#Char}#op_LeftShift(System.Char,System.Int32),
    Id: M:System.Char.System#Numerics#IShiftOperators{System#Char,System#Int32,System#Char}#op_LeftShift(System.Char,System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IShiftOperators<System.Char,System.Int32,System.Char>.op_LeftShift,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IShiftOperators{System#Char,System#Int32,System#Char}#op_LeftShift(System.Char,System.Int32).value,
        Id: M:System.Char.System#Numerics#IShiftOperators{System#Char,System#Int32,System#Char}#op_LeftShift(System.Char,System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#Numerics#IShiftOperators{System#Char,System#Int32,System#Char}#op_LeftShift(System.Char,System.Int32),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IShiftOperators{System#Char,System#Int32,System#Char}#op_LeftShift(System.Char,System.Int32).shiftAmount,
        Id: M:System.Char.System#Numerics#IShiftOperators{System#Char,System#Int32,System#Char}#op_LeftShift(System.Char,System.Int32).shiftAmount,
        Kind: Parameter,
        Name: shiftAmount,
        ParentId: M:System.Char.System#Numerics#IShiftOperators{System#Char,System#Int32,System#Char}#op_LeftShift(System.Char,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IShiftOperators{System#Char,System#Int32,System#Char}#op_RightShift(System.Char,System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IShiftOperators{System#Char,System#Int32,System#Char}#op_RightShift(System.Char,System.Int32),
    Id: M:System.Char.System#Numerics#IShiftOperators{System#Char,System#Int32,System#Char}#op_RightShift(System.Char,System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IShiftOperators<System.Char,System.Int32,System.Char>.op_RightShift,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IShiftOperators{System#Char,System#Int32,System#Char}#op_RightShift(System.Char,System.Int32).value,
        Id: M:System.Char.System#Numerics#IShiftOperators{System#Char,System#Int32,System#Char}#op_RightShift(System.Char,System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#Numerics#IShiftOperators{System#Char,System#Int32,System#Char}#op_RightShift(System.Char,System.Int32),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IShiftOperators{System#Char,System#Int32,System#Char}#op_RightShift(System.Char,System.Int32).shiftAmount,
        Id: M:System.Char.System#Numerics#IShiftOperators{System#Char,System#Int32,System#Char}#op_RightShift(System.Char,System.Int32).shiftAmount,
        Kind: Parameter,
        Name: shiftAmount,
        ParentId: M:System.Char.System#Numerics#IShiftOperators{System#Char,System#Int32,System#Char}#op_RightShift(System.Char,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IShiftOperators{System#Char,System#Int32,System#Char}#op_UnsignedRightShift(System.Char,System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IShiftOperators{System#Char,System#Int32,System#Char}#op_UnsignedRightShift(System.Char,System.Int32),
    Id: M:System.Char.System#Numerics#IShiftOperators{System#Char,System#Int32,System#Char}#op_UnsignedRightShift(System.Char,System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IShiftOperators<System.Char,System.Int32,System.Char>.op_UnsignedRightShift,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IShiftOperators{System#Char,System#Int32,System#Char}#op_UnsignedRightShift(System.Char,System.Int32).value,
        Id: M:System.Char.System#Numerics#IShiftOperators{System#Char,System#Int32,System#Char}#op_UnsignedRightShift(System.Char,System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#Numerics#IShiftOperators{System#Char,System#Int32,System#Char}#op_UnsignedRightShift(System.Char,System.Int32),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IShiftOperators{System#Char,System#Int32,System#Char}#op_UnsignedRightShift(System.Char,System.Int32).shiftAmount,
        Id: M:System.Char.System#Numerics#IShiftOperators{System#Char,System#Int32,System#Char}#op_UnsignedRightShift(System.Char,System.Int32).shiftAmount,
        Kind: Parameter,
        Name: shiftAmount,
        ParentId: M:System.Char.System#Numerics#IShiftOperators{System#Char,System#Int32,System#Char}#op_UnsignedRightShift(System.Char,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#ISubtractionOperators{System#Char,System#Char,System#Char}#op_CheckedSubtraction(System.Char,System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#ISubtractionOperators{System#Char,System#Char,System#Char}#op_CheckedSubtraction(System.Char,System.Char),
    Id: M:System.Char.System#Numerics#ISubtractionOperators{System#Char,System#Char,System#Char}#op_CheckedSubtraction(System.Char,System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.ISubtractionOperators<System.Char,System.Char,System.Char>.op_CheckedSubtraction,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#ISubtractionOperators{System#Char,System#Char,System#Char}#op_CheckedSubtraction(System.Char,System.Char).left,
        Id: M:System.Char.System#Numerics#ISubtractionOperators{System#Char,System#Char,System#Char}#op_CheckedSubtraction(System.Char,System.Char).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Char.System#Numerics#ISubtractionOperators{System#Char,System#Char,System#Char}#op_CheckedSubtraction(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#ISubtractionOperators{System#Char,System#Char,System#Char}#op_CheckedSubtraction(System.Char,System.Char).right,
        Id: M:System.Char.System#Numerics#ISubtractionOperators{System#Char,System#Char,System#Char}#op_CheckedSubtraction(System.Char,System.Char).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Char.System#Numerics#ISubtractionOperators{System#Char,System#Char,System#Char}#op_CheckedSubtraction(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#ISubtractionOperators{System#Char,System#Char,System#Char}#op_Subtraction(System.Char,System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#ISubtractionOperators{System#Char,System#Char,System#Char}#op_Subtraction(System.Char,System.Char),
    Id: M:System.Char.System#Numerics#ISubtractionOperators{System#Char,System#Char,System#Char}#op_Subtraction(System.Char,System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.ISubtractionOperators<System.Char,System.Char,System.Char>.op_Subtraction,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#ISubtractionOperators{System#Char,System#Char,System#Char}#op_Subtraction(System.Char,System.Char).left,
        Id: M:System.Char.System#Numerics#ISubtractionOperators{System#Char,System#Char,System#Char}#op_Subtraction(System.Char,System.Char).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Char.System#Numerics#ISubtractionOperators{System#Char,System#Char,System#Char}#op_Subtraction(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#ISubtractionOperators{System#Char,System#Char,System#Char}#op_Subtraction(System.Char,System.Char).right,
        Id: M:System.Char.System#Numerics#ISubtractionOperators{System#Char,System#Char,System#Char}#op_Subtraction(System.Char,System.Char).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Char.System#Numerics#ISubtractionOperators{System#Char,System#Char,System#Char}#op_Subtraction(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IUnaryNegationOperators{System#Char,System#Char}#op_CheckedUnaryNegation(System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IUnaryNegationOperators{System#Char,System#Char}#op_CheckedUnaryNegation(System.Char),
    Id: M:System.Char.System#Numerics#IUnaryNegationOperators{System#Char,System#Char}#op_CheckedUnaryNegation(System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IUnaryNegationOperators<System.Char,System.Char>.op_CheckedUnaryNegation,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IUnaryNegationOperators{System#Char,System#Char}#op_CheckedUnaryNegation(System.Char).value,
        Id: M:System.Char.System#Numerics#IUnaryNegationOperators{System#Char,System#Char}#op_CheckedUnaryNegation(System.Char).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#Numerics#IUnaryNegationOperators{System#Char,System#Char}#op_CheckedUnaryNegation(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IUnaryNegationOperators{System#Char,System#Char}#op_UnaryNegation(System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IUnaryNegationOperators{System#Char,System#Char}#op_UnaryNegation(System.Char),
    Id: M:System.Char.System#Numerics#IUnaryNegationOperators{System#Char,System#Char}#op_UnaryNegation(System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IUnaryNegationOperators<System.Char,System.Char>.op_UnaryNegation,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IUnaryNegationOperators{System#Char,System#Char}#op_UnaryNegation(System.Char).value,
        Id: M:System.Char.System#Numerics#IUnaryNegationOperators{System#Char,System#Char}#op_UnaryNegation(System.Char).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#Numerics#IUnaryNegationOperators{System#Char,System#Char}#op_UnaryNegation(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IUnaryPlusOperators{System#Char,System#Char}#op_UnaryPlus(System.Char): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IUnaryPlusOperators{System#Char,System#Char}#op_UnaryPlus(System.Char),
    Id: M:System.Char.System#Numerics#IUnaryPlusOperators{System#Char,System#Char}#op_UnaryPlus(System.Char),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IUnaryPlusOperators<System.Char,System.Char>.op_UnaryPlus,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IUnaryPlusOperators{System#Char,System#Char}#op_UnaryPlus(System.Char).value,
        Id: M:System.Char.System#Numerics#IUnaryPlusOperators{System#Char,System#Char}#op_UnaryPlus(System.Char).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Char.System#Numerics#IUnaryPlusOperators{System#Char,System#Char}#op_UnaryPlus(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo),
    Id: M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: ToLower,
    OverloadedMembers: [
      M:System.Char.ToLower(System.Char)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo).c,
        Id: M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo).c,
        Kind: Parameter,
        Name: c,
        ParentId: M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo).culture,
        Id: M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo).culture,
        Kind: Parameter,
        Name: culture,
        ParentId: M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo),
        Type: {
          Id: T:System.Globalization.CultureInfo,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.ToLower(System.Char): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.ToLower(System.Char),
    Id: M:System.Char.ToLower(System.Char),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: ToLower,
    OverloadedMembers: [
      M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.ToLower(System.Char).c,
        Id: M:System.Char.ToLower(System.Char).c,
        Kind: Parameter,
        Name: c,
        ParentId: M:System.Char.ToLower(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.ToLowerInvariant(System.Char): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.ToLowerInvariant(System.Char),
    Id: M:System.Char.ToLowerInvariant(System.Char),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: ToLowerInvariant,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.ToLowerInvariant(System.Char).c,
        Id: M:System.Char.ToLowerInvariant(System.Char).c,
        Kind: Parameter,
        Name: c,
        ParentId: M:System.Char.ToLowerInvariant(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.ToString: {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.ToString,
    Id: M:System.Char.ToString,
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Override
    ],
    Name: ToString,
    OverloadedMembers: [
      M:System.Char.ToString(System.IFormatProvider),
      M:System.Char.ToString(System.Char)
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.String,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.ToString(System.Char): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.ToString(System.Char),
    Id: M:System.Char.ToString(System.Char),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: ToString,
    OverloadedMembers: [
      M:System.Char.ToString,
      M:System.Char.ToString(System.IFormatProvider)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.ToString(System.Char).c,
        Id: M:System.Char.ToString(System.Char).c,
        Kind: Parameter,
        Name: c,
        ParentId: M:System.Char.ToString(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.String,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.ToString(System.IFormatProvider): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.ToString(System.IFormatProvider),
    Id: M:System.Char.ToString(System.IFormatProvider),
    IsLocal: false,
    Kind: Method,
    Name: ToString,
    OverloadedMembers: [
      M:System.Char.ToString,
      M:System.Char.ToString(System.Char)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.ToString(System.IFormatProvider).provider,
        Id: M:System.Char.ToString(System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Char.ToString(System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.String,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo),
    Id: M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: ToUpper,
    OverloadedMembers: [
      M:System.Char.ToUpper(System.Char)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo).c,
        Id: M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo).c,
        Kind: Parameter,
        Name: c,
        ParentId: M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo).culture,
        Id: M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo).culture,
        Kind: Parameter,
        Name: culture,
        ParentId: M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo),
        Type: {
          Id: T:System.Globalization.CultureInfo,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.ToUpper(System.Char): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.ToUpper(System.Char),
    Id: M:System.Char.ToUpper(System.Char),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: ToUpper,
    OverloadedMembers: [
      M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.ToUpper(System.Char).c,
        Id: M:System.Char.ToUpper(System.Char).c,
        Kind: Parameter,
        Name: c,
        ParentId: M:System.Char.ToUpper(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.ToUpperInvariant(System.Char): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.ToUpperInvariant(System.Char),
    Id: M:System.Char.ToUpperInvariant(System.Char),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: ToUpperInvariant,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.ToUpperInvariant(System.Char).c,
        Id: M:System.Char.ToUpperInvariant(System.Char).c,
        Kind: Parameter,
        Name: c,
        ParentId: M:System.Char.ToUpperInvariant(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.TryParse(System.ReadOnlySpan{System.Char},System.Char@): {
    Accessibility: Internal,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.TryParse(System.ReadOnlySpan{System.Char},System.Char@),
    Id: M:System.Char.TryParse(System.ReadOnlySpan{System.Char},System.Char@),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: TryParse,
    OverloadedMembers: [
      M:System.Char.TryParse(System.String,System.Char@)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.TryParse(System.ReadOnlySpan{System.Char},System.Char@).s,
        Id: M:System.Char.TryParse(System.ReadOnlySpan{System.Char},System.Char@).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Char.TryParse(System.ReadOnlySpan{System.Char},System.Char@),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Char]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.TryParse(System.ReadOnlySpan{System.Char},System.Char@).result,
        Id: M:System.Char.TryParse(System.ReadOnlySpan{System.Char},System.Char@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Char.TryParse(System.ReadOnlySpan{System.Char},System.Char@),
        Type: {
          Id: T:System.Char&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Char.TryParse(System.String,System.Char@): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.TryParse(System.String,System.Char@),
    Id: M:System.Char.TryParse(System.String,System.Char@),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: TryParse,
    OverloadedMembers: [
      M:System.Char.TryParse(System.ReadOnlySpan{System.Char},System.Char@)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.TryParse(System.String,System.Char@).s,
        Id: M:System.Char.TryParse(System.String,System.Char@).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Char.TryParse(System.String,System.Char@),
        Type: {
          Id: T:System.String,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.TryParse(System.String,System.Char@).result,
        Id: M:System.Char.TryParse(System.String,System.Char@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Char.TryParse(System.String,System.Char@),
        Type: {
          Id: T:System.Char&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Char.Latin1CharInfo: {
    Accessibility: Private,
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Char.Latin1CharInfo,
    Getter: {
      Accessibility: Private,
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.get_Latin1CharInfo,
      Id: M:System.Char.get_Latin1CharInfo,
      IsLocal: false,
      Kind: Method,
      Name: get_Latin1CharInfo,
      ParentId: T:System.Char,
      Type: {
        Id: T:System.ReadOnlySpan`1[[System.Byte]],
        IsNullable: false
      }
    },
    Id: P:System.Char.Latin1CharInfo,
    Kind: Property,
    Modifiers: [
      Static
    ],
    Name: Latin1CharInfo,
    ParentId: T:System.Char,
    Type: {
      Id: T:System.ReadOnlySpan`1[[System.Byte]],
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#IsSigned: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#IsSigned,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#get_IsSigned,
      Id: M:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#get_IsSigned,
      IsLocal: false,
      Kind: Method,
      Name: System.IBinaryIntegerParseAndFormatInfo<System.Char>.get_IsSigned,
      ParentId: T:System.Char,
      Type: {
        Id: T:System.Boolean,
        IsNullable: false
      }
    },
    Id: P:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#IsSigned,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.IBinaryIntegerParseAndFormatInfo<System.Char>.IsSigned,
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#MaxDigitCount: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#MaxDigitCount,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#get_MaxDigitCount,
      Id: M:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#get_MaxDigitCount,
      IsLocal: false,
      Kind: Method,
      Name: System.IBinaryIntegerParseAndFormatInfo<System.Char>.get_MaxDigitCount,
      ParentId: T:System.Char,
      Type: {
        Id: T:System.Int32,
        IsNullable: false
      }
    },
    Id: P:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#MaxDigitCount,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.IBinaryIntegerParseAndFormatInfo<System.Char>.MaxDigitCount,
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#MaxHexDigitCount: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#MaxHexDigitCount,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#get_MaxHexDigitCount,
      Id: M:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#get_MaxHexDigitCount,
      IsLocal: false,
      Kind: Method,
      Name: System.IBinaryIntegerParseAndFormatInfo<System.Char>.get_MaxHexDigitCount,
      ParentId: T:System.Char,
      Type: {
        Id: T:System.Int32,
        IsNullable: false
      }
    },
    Id: P:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#MaxHexDigitCount,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.IBinaryIntegerParseAndFormatInfo<System.Char>.MaxHexDigitCount,
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#MaxValueDiv10: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#MaxValueDiv10,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#get_MaxValueDiv10,
      Id: M:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#get_MaxValueDiv10,
      IsLocal: false,
      Kind: Method,
      Name: System.IBinaryIntegerParseAndFormatInfo<System.Char>.get_MaxValueDiv10,
      ParentId: T:System.Char,
      Type: {
        Id: T:System.Char,
        IsNullable: false
      }
    },
    Id: P:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#MaxValueDiv10,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.IBinaryIntegerParseAndFormatInfo<System.Char>.MaxValueDiv10,
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#OverflowMessage: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#OverflowMessage,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#get_OverflowMessage,
      Id: M:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#get_OverflowMessage,
      IsLocal: false,
      Kind: Method,
      Name: System.IBinaryIntegerParseAndFormatInfo<System.Char>.get_OverflowMessage,
      ParentId: T:System.Char,
      Type: {
        Id: T:System.String,
        IsNullable: false
      }
    },
    Id: P:System.Char.System#IBinaryIntegerParseAndFormatInfo{System#Char}#OverflowMessage,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.IBinaryIntegerParseAndFormatInfo<System.Char>.OverflowMessage,
    ParentId: T:System.Char,
    Type: {
      Id: T:System.String,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Char.System#Numerics#IAdditiveIdentity{System#Char,System#Char}#AdditiveIdentity: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Char.System#Numerics#IAdditiveIdentity{System#Char,System#Char}#AdditiveIdentity,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IAdditiveIdentity{System#Char,System#Char}#get_AdditiveIdentity,
      Id: M:System.Char.System#Numerics#IAdditiveIdentity{System#Char,System#Char}#get_AdditiveIdentity,
      IsLocal: false,
      Kind: Method,
      Name: System.Numerics.IAdditiveIdentity<System.Char,System.Char>.get_AdditiveIdentity,
      ParentId: T:System.Char,
      Type: {
        Id: T:System.Char,
        IsNullable: false
      }
    },
    Id: P:System.Char.System#Numerics#IAdditiveIdentity{System#Char,System#Char}#AdditiveIdentity,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IAdditiveIdentity<System.Char,System.Char>.AdditiveIdentity,
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Char.System#Numerics#IBinaryNumber{System#Char}#AllBitsSet: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Char.System#Numerics#IBinaryNumber{System#Char}#AllBitsSet,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IBinaryNumber{System#Char}#get_AllBitsSet,
      Id: M:System.Char.System#Numerics#IBinaryNumber{System#Char}#get_AllBitsSet,
      IsLocal: false,
      Kind: Method,
      Name: System.Numerics.IBinaryNumber<System.Char>.get_AllBitsSet,
      ParentId: T:System.Char,
      Type: {
        Id: T:System.Char,
        IsNullable: false
      }
    },
    Id: P:System.Char.System#Numerics#IBinaryNumber{System#Char}#AllBitsSet,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IBinaryNumber<System.Char>.AllBitsSet,
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Char.System#Numerics#IMinMaxValue{System#Char}#MaxValue: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Char.System#Numerics#IMinMaxValue{System#Char}#MaxValue,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IMinMaxValue{System#Char}#get_MaxValue,
      Id: M:System.Char.System#Numerics#IMinMaxValue{System#Char}#get_MaxValue,
      IsLocal: false,
      Kind: Method,
      Name: System.Numerics.IMinMaxValue<System.Char>.get_MaxValue,
      ParentId: T:System.Char,
      Type: {
        Id: T:System.Char,
        IsNullable: false
      }
    },
    Id: P:System.Char.System#Numerics#IMinMaxValue{System#Char}#MaxValue,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IMinMaxValue<System.Char>.MaxValue,
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Char.System#Numerics#IMinMaxValue{System#Char}#MinValue: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Char.System#Numerics#IMinMaxValue{System#Char}#MinValue,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IMinMaxValue{System#Char}#get_MinValue,
      Id: M:System.Char.System#Numerics#IMinMaxValue{System#Char}#get_MinValue,
      IsLocal: false,
      Kind: Method,
      Name: System.Numerics.IMinMaxValue<System.Char>.get_MinValue,
      ParentId: T:System.Char,
      Type: {
        Id: T:System.Char,
        IsNullable: false
      }
    },
    Id: P:System.Char.System#Numerics#IMinMaxValue{System#Char}#MinValue,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IMinMaxValue<System.Char>.MinValue,
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Char.System#Numerics#IMultiplicativeIdentity{System#Char,System#Char}#MultiplicativeIdentity: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Char.System#Numerics#IMultiplicativeIdentity{System#Char,System#Char}#MultiplicativeIdentity,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#IMultiplicativeIdentity{System#Char,System#Char}#get_MultiplicativeIdentity,
      Id: M:System.Char.System#Numerics#IMultiplicativeIdentity{System#Char,System#Char}#get_MultiplicativeIdentity,
      IsLocal: false,
      Kind: Method,
      Name: System.Numerics.IMultiplicativeIdentity<System.Char,System.Char>.get_MultiplicativeIdentity,
      ParentId: T:System.Char,
      Type: {
        Id: T:System.Char,
        IsNullable: false
      }
    },
    Id: P:System.Char.System#Numerics#IMultiplicativeIdentity{System#Char,System#Char}#MultiplicativeIdentity,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IMultiplicativeIdentity<System.Char,System.Char>.MultiplicativeIdentity,
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Char.System#Numerics#INumberBase{System#Char}#One: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Char.System#Numerics#INumberBase{System#Char}#One,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#get_One,
      Id: M:System.Char.System#Numerics#INumberBase{System#Char}#get_One,
      IsLocal: false,
      Kind: Method,
      Name: System.Numerics.INumberBase<System.Char>.get_One,
      ParentId: T:System.Char,
      Type: {
        Id: T:System.Char,
        IsNullable: false
      }
    },
    Id: P:System.Char.System#Numerics#INumberBase{System#Char}#One,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Char>.One,
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Char.System#Numerics#INumberBase{System#Char}#Radix: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Char.System#Numerics#INumberBase{System#Char}#Radix,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#get_Radix,
      Id: M:System.Char.System#Numerics#INumberBase{System#Char}#get_Radix,
      IsLocal: false,
      Kind: Method,
      Name: System.Numerics.INumberBase<System.Char>.get_Radix,
      ParentId: T:System.Char,
      Type: {
        Id: T:System.Int32,
        IsNullable: false
      }
    },
    Id: P:System.Char.System#Numerics#INumberBase{System#Char}#Radix,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Char>.Radix,
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Char.System#Numerics#INumberBase{System#Char}#Zero: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Char.System#Numerics#INumberBase{System#Char}#Zero,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Char.System#Numerics#INumberBase{System#Char}#get_Zero,
      Id: M:System.Char.System#Numerics#INumberBase{System#Char}#get_Zero,
      IsLocal: false,
      Kind: Method,
      Name: System.Numerics.INumberBase<System.Char>.get_Zero,
      ParentId: T:System.Char,
      Type: {
        Id: T:System.Char,
        IsNullable: false
      }
    },
    Id: P:System.Char.System#Numerics#INumberBase{System#Char}#Zero,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Char>.Zero,
    ParentId: T:System.Char,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  }
}