{
  System.Private.CoreLib, Version=x.x.x.x, F:System.Int32.m_value: {
    Accessibility: Private,
    FullName: System.Private.CoreLib, Version=x.x.x.x, F:System.Int32.m_value,
    Id: F:System.Int32.m_value,
    Kind: Field,
    Modifiers: [
      ReadOnly
    ],
    Name: m_value,
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, F:System.Int32.MaxValue: {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, F:System.Int32.MaxValue,
    Id: F:System.Int32.MaxValue,
    Kind: Field,
    Modifiers: [
      Static,
      Const
    ],
    Name: MaxValue,
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, F:System.Int32.MinValue: {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, F:System.Int32.MinValue,
    Id: F:System.Int32.MinValue,
    Kind: Field,
    Modifiers: [
      Static,
      Const
    ],
    Name: MinValue,
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.#ctor: {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.#ctor,
    Id: M:System.Int32.#ctor,
    Kind: Constructor,
    Name: .ctor,
    ParentId: T:System.Int32
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Abs(System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Abs(System.Int32),
    Id: M:System.Int32.Abs(System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Abs,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Abs(System.Int32).value,
        Id: M:System.Int32.Abs(System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.Abs(System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.BigMul(System.Int32,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.BigMul(System.Int32,System.Int32),
    Id: M:System.Int32.BigMul(System.Int32,System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: BigMul,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.BigMul(System.Int32,System.Int32).left,
        Id: M:System.Int32.BigMul(System.Int32,System.Int32).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Int32.BigMul(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.BigMul(System.Int32,System.Int32).right,
        Id: M:System.Int32.BigMul(System.Int32,System.Int32).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Int32.BigMul(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int64,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Clamp(System.Int32,System.Int32,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Clamp(System.Int32,System.Int32,System.Int32),
    Id: M:System.Int32.Clamp(System.Int32,System.Int32,System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Clamp,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Clamp(System.Int32,System.Int32,System.Int32).value,
        Id: M:System.Int32.Clamp(System.Int32,System.Int32,System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.Clamp(System.Int32,System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Clamp(System.Int32,System.Int32,System.Int32).min,
        Id: M:System.Int32.Clamp(System.Int32,System.Int32,System.Int32).min,
        Kind: Parameter,
        Name: min,
        ParentId: M:System.Int32.Clamp(System.Int32,System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Clamp(System.Int32,System.Int32,System.Int32).max,
        Id: M:System.Int32.Clamp(System.Int32,System.Int32,System.Int32).max,
        Kind: Parameter,
        Name: max,
        ParentId: M:System.Int32.Clamp(System.Int32,System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.CompareTo(System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.CompareTo(System.Int32),
    Id: M:System.Int32.CompareTo(System.Int32),
    IsLocal: false,
    Kind: Method,
    Name: CompareTo,
    OverloadedMembers: [
      M:System.Int32.CompareTo(System.Object)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.CompareTo(System.Int32).value,
        Id: M:System.Int32.CompareTo(System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.CompareTo(System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.CompareTo(System.Object): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.CompareTo(System.Object),
    Id: M:System.Int32.CompareTo(System.Object),
    IsLocal: false,
    Kind: Method,
    Name: CompareTo,
    OverloadedMembers: [
      M:System.Int32.CompareTo(System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.CompareTo(System.Object).value,
        Id: M:System.Int32.CompareTo(System.Object).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.CompareTo(System.Object),
        Type: {
          Id: T:System.Object,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.CopySign(System.Int32,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.CopySign(System.Int32,System.Int32),
    Id: M:System.Int32.CopySign(System.Int32,System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: CopySign,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.CopySign(System.Int32,System.Int32).value,
        Id: M:System.Int32.CopySign(System.Int32,System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.CopySign(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.CopySign(System.Int32,System.Int32).sign,
        Id: M:System.Int32.CopySign(System.Int32,System.Int32).sign,
        Kind: Parameter,
        Name: sign,
        ParentId: M:System.Int32.CopySign(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.CreateChecked``1(``0): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.MethodImplAttribute,
        Id: T:System.Runtime.CompilerServices.MethodImplAttribute,
        Kind: Attribute,
        Name: MethodImplAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.CreateChecked``1(``0),
    Id: M:System.Int32.CreateChecked``1(``0),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: CreateChecked,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.CreateChecked``1(``0).value,
        Id: M:System.Int32.CreateChecked``1(``0).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.CreateChecked``1(``0),
        Type: {
          Id: T:System.Int32.CreateChecked.TOther,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.CreateChecked``1(``0).TOther,
        Id: G:System.Int32.CreateChecked``1(``0).TOther,
        Kind: TypeParameter,
        Name: TOther,
        ParentId: M:System.Int32.CreateChecked``1(``0)
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.CreateSaturating``1(``0): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.MethodImplAttribute,
        Id: T:System.Runtime.CompilerServices.MethodImplAttribute,
        Kind: Attribute,
        Name: MethodImplAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.CreateSaturating``1(``0),
    Id: M:System.Int32.CreateSaturating``1(``0),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: CreateSaturating,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.CreateSaturating``1(``0).value,
        Id: M:System.Int32.CreateSaturating``1(``0).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.CreateSaturating``1(``0),
        Type: {
          Id: T:System.Int32.CreateSaturating.TOther,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.CreateSaturating``1(``0).TOther,
        Id: G:System.Int32.CreateSaturating``1(``0).TOther,
        Kind: TypeParameter,
        Name: TOther,
        ParentId: M:System.Int32.CreateSaturating``1(``0)
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.CreateTruncating``1(``0): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.MethodImplAttribute,
        Id: T:System.Runtime.CompilerServices.MethodImplAttribute,
        Kind: Attribute,
        Name: MethodImplAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.CreateTruncating``1(``0),
    Id: M:System.Int32.CreateTruncating``1(``0),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: CreateTruncating,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.CreateTruncating``1(``0).value,
        Id: M:System.Int32.CreateTruncating``1(``0).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.CreateTruncating``1(``0),
        Type: {
          Id: T:System.Int32.CreateTruncating.TOther,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.CreateTruncating``1(``0).TOther,
        Id: G:System.Int32.CreateTruncating``1(``0).TOther,
        Kind: TypeParameter,
        Name: TOther,
        ParentId: M:System.Int32.CreateTruncating``1(``0)
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.DivRem(System.Int32,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.DivRem(System.Int32,System.Int32),
    Id: M:System.Int32.DivRem(System.Int32,System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: DivRem,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.DivRem(System.Int32,System.Int32).left,
        Id: M:System.Int32.DivRem(System.Int32,System.Int32).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Int32.DivRem(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.DivRem(System.Int32,System.Int32).right,
        Id: M:System.Int32.DivRem(System.Int32,System.Int32).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Int32.DivRem(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.ValueTuple`2[[System.Int32],[System.Int32]],
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Equals(System.Int32): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.Versioning.NonVersionableAttribute,
        Id: T:System.Runtime.Versioning.NonVersionableAttribute,
        Kind: Attribute,
        Name: NonVersionableAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Equals(System.Int32),
    Id: M:System.Int32.Equals(System.Int32),
    IsLocal: false,
    Kind: Method,
    Name: Equals,
    OverloadedMembers: [
      M:System.Int32.Equals(System.Object)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Equals(System.Int32).obj,
        Id: M:System.Int32.Equals(System.Int32).obj,
        Kind: Parameter,
        Name: obj,
        ParentId: M:System.Int32.Equals(System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Equals(System.Object): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute,
        Id: T:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute,
        Kind: Attribute,
        Name: UnconditionalSuppressMessageAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Equals(System.Object),
    Id: M:System.Int32.Equals(System.Object),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Override
    ],
    Name: Equals,
    OverloadedMembers: [
      M:System.Int32.Equals(System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Equals(System.Object).obj,
        Id: M:System.Int32.Equals(System.Object).obj,
        Kind: Parameter,
        Name: obj,
        ParentId: M:System.Int32.Equals(System.Object),
        Type: {
          Id: T:System.Object,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.GetHashCode: {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.GetHashCode,
    Id: M:System.Int32.GetHashCode,
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Override
    ],
    Name: GetHashCode,
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.GetTypeCode: {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.GetTypeCode,
    Id: M:System.Int32.GetTypeCode,
    IsLocal: false,
    Kind: Method,
    Name: GetTypeCode,
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.TypeCode,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.IsEvenInteger(System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.IsEvenInteger(System.Int32),
    Id: M:System.Int32.IsEvenInteger(System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsEvenInteger,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.IsEvenInteger(System.Int32).value,
        Id: M:System.Int32.IsEvenInteger(System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.IsEvenInteger(System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.IsNegative(System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.IsNegative(System.Int32),
    Id: M:System.Int32.IsNegative(System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsNegative,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.IsNegative(System.Int32).value,
        Id: M:System.Int32.IsNegative(System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.IsNegative(System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.IsOddInteger(System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.IsOddInteger(System.Int32),
    Id: M:System.Int32.IsOddInteger(System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsOddInteger,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.IsOddInteger(System.Int32).value,
        Id: M:System.Int32.IsOddInteger(System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.IsOddInteger(System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.IsPositive(System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.IsPositive(System.Int32),
    Id: M:System.Int32.IsPositive(System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsPositive,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.IsPositive(System.Int32).value,
        Id: M:System.Int32.IsPositive(System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.IsPositive(System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.IsPow2(System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.IsPow2(System.Int32),
    Id: M:System.Int32.IsPow2(System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: IsPow2,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.IsPow2(System.Int32).value,
        Id: M:System.Int32.IsPow2(System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.IsPow2(System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.LeadingZeroCount(System.Int32): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IntrinsicAttribute,
        Id: T:System.Runtime.CompilerServices.IntrinsicAttribute,
        Kind: Attribute,
        Name: IntrinsicAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.LeadingZeroCount(System.Int32),
    Id: M:System.Int32.LeadingZeroCount(System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: LeadingZeroCount,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.LeadingZeroCount(System.Int32).value,
        Id: M:System.Int32.LeadingZeroCount(System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.LeadingZeroCount(System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Log2(System.Int32): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IntrinsicAttribute,
        Id: T:System.Runtime.CompilerServices.IntrinsicAttribute,
        Kind: Attribute,
        Name: IntrinsicAttribute
      },
      {
        FullName: System.Runtime.CompilerServices.MethodImplAttribute,
        Id: T:System.Runtime.CompilerServices.MethodImplAttribute,
        Kind: Attribute,
        Name: MethodImplAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Log2(System.Int32),
    Id: M:System.Int32.Log2(System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Log2,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Log2(System.Int32).value,
        Id: M:System.Int32.Log2(System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.Log2(System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Max(System.Int32,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Max(System.Int32,System.Int32),
    Id: M:System.Int32.Max(System.Int32,System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Max,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Max(System.Int32,System.Int32).x,
        Id: M:System.Int32.Max(System.Int32,System.Int32).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Int32.Max(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Max(System.Int32,System.Int32).y,
        Id: M:System.Int32.Max(System.Int32,System.Int32).y,
        Kind: Parameter,
        Name: y,
        ParentId: M:System.Int32.Max(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.MaxMagnitude(System.Int32,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.MaxMagnitude(System.Int32,System.Int32),
    Id: M:System.Int32.MaxMagnitude(System.Int32,System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: MaxMagnitude,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.MaxMagnitude(System.Int32,System.Int32).x,
        Id: M:System.Int32.MaxMagnitude(System.Int32,System.Int32).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Int32.MaxMagnitude(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.MaxMagnitude(System.Int32,System.Int32).y,
        Id: M:System.Int32.MaxMagnitude(System.Int32,System.Int32).y,
        Kind: Parameter,
        Name: y,
        ParentId: M:System.Int32.MaxMagnitude(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Min(System.Int32,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Min(System.Int32,System.Int32),
    Id: M:System.Int32.Min(System.Int32,System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Min,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Min(System.Int32,System.Int32).x,
        Id: M:System.Int32.Min(System.Int32,System.Int32).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Int32.Min(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Min(System.Int32,System.Int32).y,
        Id: M:System.Int32.Min(System.Int32,System.Int32).y,
        Kind: Parameter,
        Name: y,
        ParentId: M:System.Int32.Min(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.MinMagnitude(System.Int32,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.MinMagnitude(System.Int32,System.Int32),
    Id: M:System.Int32.MinMagnitude(System.Int32,System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: MinMagnitude,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.MinMagnitude(System.Int32,System.Int32).x,
        Id: M:System.Int32.MinMagnitude(System.Int32,System.Int32).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Int32.MinMagnitude(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.MinMagnitude(System.Int32,System.Int32).y,
        Id: M:System.Int32.MinMagnitude(System.Int32,System.Int32).y,
        Kind: Parameter,
        Name: y,
        ParentId: M:System.Int32.MinMagnitude(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Parse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Parse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider),
    Id: M:System.Int32.Parse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Parse,
    OverloadedMembers: [
      M:System.Int32.Parse(System.String),
      M:System.Int32.Parse(System.String,System.Globalization.NumberStyles),
      M:System.Int32.Parse(System.String,System.IFormatProvider),
      M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Int32.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Int32.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider),
      M:System.Int32.Parse(System.ReadOnlySpan{System.Byte},System.IFormatProvider)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Parse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider).utf8Text,
        Id: M:System.Int32.Parse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider).utf8Text,
        Kind: Parameter,
        Name: utf8Text,
        ParentId: M:System.Int32.Parse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Byte]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Parse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider).style,
        Id: M:System.Int32.Parse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider).style,
        Kind: Parameter,
        Name: style,
        OptionalValue: 7,
        ParentId: M:System.Int32.Parse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider),
        Type: {
          Id: T:System.Globalization.NumberStyles,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Parse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider).provider,
        Id: M:System.Int32.Parse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        OptionalValue: <null>,
        ParentId: M:System.Int32.Parse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Parse(System.ReadOnlySpan{System.Byte},System.IFormatProvider): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Parse(System.ReadOnlySpan{System.Byte},System.IFormatProvider),
    Id: M:System.Int32.Parse(System.ReadOnlySpan{System.Byte},System.IFormatProvider),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Parse,
    OverloadedMembers: [
      M:System.Int32.Parse(System.String),
      M:System.Int32.Parse(System.String,System.Globalization.NumberStyles),
      M:System.Int32.Parse(System.String,System.IFormatProvider),
      M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Int32.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Int32.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider),
      M:System.Int32.Parse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Parse(System.ReadOnlySpan{System.Byte},System.IFormatProvider).utf8Text,
        Id: M:System.Int32.Parse(System.ReadOnlySpan{System.Byte},System.IFormatProvider).utf8Text,
        Kind: Parameter,
        Name: utf8Text,
        ParentId: M:System.Int32.Parse(System.ReadOnlySpan{System.Byte},System.IFormatProvider),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Byte]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Parse(System.ReadOnlySpan{System.Byte},System.IFormatProvider).provider,
        Id: M:System.Int32.Parse(System.ReadOnlySpan{System.Byte},System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Int32.Parse(System.ReadOnlySpan{System.Byte},System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider),
    Id: M:System.Int32.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Parse,
    OverloadedMembers: [
      M:System.Int32.Parse(System.String),
      M:System.Int32.Parse(System.String,System.Globalization.NumberStyles),
      M:System.Int32.Parse(System.String,System.IFormatProvider),
      M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Int32.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider),
      M:System.Int32.Parse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Int32.Parse(System.ReadOnlySpan{System.Byte},System.IFormatProvider)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider).s,
        Id: M:System.Int32.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Int32.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Char]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider).style,
        Id: M:System.Int32.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider).style,
        Kind: Parameter,
        Name: style,
        OptionalValue: 7,
        ParentId: M:System.Int32.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider),
        Type: {
          Id: T:System.Globalization.NumberStyles,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider).provider,
        Id: M:System.Int32.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        OptionalValue: <null>,
        ParentId: M:System.Int32.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider),
    Id: M:System.Int32.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Parse,
    OverloadedMembers: [
      M:System.Int32.Parse(System.String),
      M:System.Int32.Parse(System.String,System.Globalization.NumberStyles),
      M:System.Int32.Parse(System.String,System.IFormatProvider),
      M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Int32.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Int32.Parse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Int32.Parse(System.ReadOnlySpan{System.Byte},System.IFormatProvider)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider).s,
        Id: M:System.Int32.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Int32.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Char]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider).provider,
        Id: M:System.Int32.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Int32.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider),
    Id: M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Parse,
    OverloadedMembers: [
      M:System.Int32.Parse(System.String),
      M:System.Int32.Parse(System.String,System.Globalization.NumberStyles),
      M:System.Int32.Parse(System.String,System.IFormatProvider),
      M:System.Int32.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Int32.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider),
      M:System.Int32.Parse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Int32.Parse(System.ReadOnlySpan{System.Byte},System.IFormatProvider)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider).s,
        Id: M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider).style,
        Id: M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider).style,
        Kind: Parameter,
        Name: style,
        ParentId: M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider),
        Type: {
          Id: T:System.Globalization.NumberStyles,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider).provider,
        Id: M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Parse(System.String,System.Globalization.NumberStyles): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Parse(System.String,System.Globalization.NumberStyles),
    Id: M:System.Int32.Parse(System.String,System.Globalization.NumberStyles),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Parse,
    OverloadedMembers: [
      M:System.Int32.Parse(System.String),
      M:System.Int32.Parse(System.String,System.IFormatProvider),
      M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Int32.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Int32.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider),
      M:System.Int32.Parse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Int32.Parse(System.ReadOnlySpan{System.Byte},System.IFormatProvider)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Parse(System.String,System.Globalization.NumberStyles).s,
        Id: M:System.Int32.Parse(System.String,System.Globalization.NumberStyles).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Int32.Parse(System.String,System.Globalization.NumberStyles),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Parse(System.String,System.Globalization.NumberStyles).style,
        Id: M:System.Int32.Parse(System.String,System.Globalization.NumberStyles).style,
        Kind: Parameter,
        Name: style,
        ParentId: M:System.Int32.Parse(System.String,System.Globalization.NumberStyles),
        Type: {
          Id: T:System.Globalization.NumberStyles,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Parse(System.String,System.IFormatProvider): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Parse(System.String,System.IFormatProvider),
    Id: M:System.Int32.Parse(System.String,System.IFormatProvider),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Parse,
    OverloadedMembers: [
      M:System.Int32.Parse(System.String),
      M:System.Int32.Parse(System.String,System.Globalization.NumberStyles),
      M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Int32.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Int32.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider),
      M:System.Int32.Parse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Int32.Parse(System.ReadOnlySpan{System.Byte},System.IFormatProvider)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Parse(System.String,System.IFormatProvider).s,
        Id: M:System.Int32.Parse(System.String,System.IFormatProvider).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Int32.Parse(System.String,System.IFormatProvider),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Parse(System.String,System.IFormatProvider).provider,
        Id: M:System.Int32.Parse(System.String,System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Int32.Parse(System.String,System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Parse(System.String): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Parse(System.String),
    Id: M:System.Int32.Parse(System.String),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Parse,
    OverloadedMembers: [
      M:System.Int32.Parse(System.String,System.Globalization.NumberStyles),
      M:System.Int32.Parse(System.String,System.IFormatProvider),
      M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Int32.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Int32.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider),
      M:System.Int32.Parse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Int32.Parse(System.ReadOnlySpan{System.Byte},System.IFormatProvider)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Parse(System.String).s,
        Id: M:System.Int32.Parse(System.String).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Int32.Parse(System.String),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.PopCount(System.Int32): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IntrinsicAttribute,
        Id: T:System.Runtime.CompilerServices.IntrinsicAttribute,
        Kind: Attribute,
        Name: IntrinsicAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.PopCount(System.Int32),
    Id: M:System.Int32.PopCount(System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: PopCount,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.PopCount(System.Int32).value,
        Id: M:System.Int32.PopCount(System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.PopCount(System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.RotateLeft(System.Int32,System.Int32): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IntrinsicAttribute,
        Id: T:System.Runtime.CompilerServices.IntrinsicAttribute,
        Kind: Attribute,
        Name: IntrinsicAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.RotateLeft(System.Int32,System.Int32),
    Id: M:System.Int32.RotateLeft(System.Int32,System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: RotateLeft,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.RotateLeft(System.Int32,System.Int32).value,
        Id: M:System.Int32.RotateLeft(System.Int32,System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.RotateLeft(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.RotateLeft(System.Int32,System.Int32).rotateAmount,
        Id: M:System.Int32.RotateLeft(System.Int32,System.Int32).rotateAmount,
        Kind: Parameter,
        Name: rotateAmount,
        ParentId: M:System.Int32.RotateLeft(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.RotateRight(System.Int32,System.Int32): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IntrinsicAttribute,
        Id: T:System.Runtime.CompilerServices.IntrinsicAttribute,
        Kind: Attribute,
        Name: IntrinsicAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.RotateRight(System.Int32,System.Int32),
    Id: M:System.Int32.RotateRight(System.Int32,System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: RotateRight,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.RotateRight(System.Int32,System.Int32).value,
        Id: M:System.Int32.RotateRight(System.Int32,System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.RotateRight(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.RotateRight(System.Int32,System.Int32).rotateAmount,
        Id: M:System.Int32.RotateRight(System.Int32,System.Int32).rotateAmount,
        Kind: Parameter,
        Name: rotateAmount,
        ParentId: M:System.Int32.RotateRight(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Sign(System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Sign(System.Int32),
    Id: M:System.Int32.Sign(System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: Sign,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.Sign(System.Int32).value,
        Id: M:System.Int32.Sign(System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.Sign(System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#IsGreaterThanAsUnsigned(System.Int32,System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#IsGreaterThanAsUnsigned(System.Int32,System.Int32),
    Id: M:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#IsGreaterThanAsUnsigned(System.Int32,System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.IBinaryIntegerParseAndFormatInfo<System.Int32>.IsGreaterThanAsUnsigned,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#IsGreaterThanAsUnsigned(System.Int32,System.Int32).left,
        Id: M:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#IsGreaterThanAsUnsigned(System.Int32,System.Int32).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#IsGreaterThanAsUnsigned(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#IsGreaterThanAsUnsigned(System.Int32,System.Int32).right,
        Id: M:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#IsGreaterThanAsUnsigned(System.Int32,System.Int32).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#IsGreaterThanAsUnsigned(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#MultiplyBy10(System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#MultiplyBy10(System.Int32),
    Id: M:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#MultiplyBy10(System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.IBinaryIntegerParseAndFormatInfo<System.Int32>.MultiplyBy10,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#MultiplyBy10(System.Int32).value,
        Id: M:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#MultiplyBy10(System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#MultiplyBy10(System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#MultiplyBy16(System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#MultiplyBy16(System.Int32),
    Id: M:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#MultiplyBy16(System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.IBinaryIntegerParseAndFormatInfo<System.Int32>.MultiplyBy16,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#MultiplyBy16(System.Int32).value,
        Id: M:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#MultiplyBy16(System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#MultiplyBy16(System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToBoolean(System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToBoolean(System.IFormatProvider),
    Id: M:System.Int32.System#IConvertible#ToBoolean(System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IConvertible.ToBoolean,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToBoolean(System.IFormatProvider).provider,
        Id: M:System.Int32.System#IConvertible#ToBoolean(System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Int32.System#IConvertible#ToBoolean(System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToByte(System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToByte(System.IFormatProvider),
    Id: M:System.Int32.System#IConvertible#ToByte(System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IConvertible.ToByte,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToByte(System.IFormatProvider).provider,
        Id: M:System.Int32.System#IConvertible#ToByte(System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Int32.System#IConvertible#ToByte(System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Byte,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToChar(System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToChar(System.IFormatProvider),
    Id: M:System.Int32.System#IConvertible#ToChar(System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IConvertible.ToChar,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToChar(System.IFormatProvider).provider,
        Id: M:System.Int32.System#IConvertible#ToChar(System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Int32.System#IConvertible#ToChar(System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Char,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToDateTime(System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToDateTime(System.IFormatProvider),
    Id: M:System.Int32.System#IConvertible#ToDateTime(System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IConvertible.ToDateTime,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToDateTime(System.IFormatProvider).provider,
        Id: M:System.Int32.System#IConvertible#ToDateTime(System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Int32.System#IConvertible#ToDateTime(System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.DateTime,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToDecimal(System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToDecimal(System.IFormatProvider),
    Id: M:System.Int32.System#IConvertible#ToDecimal(System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IConvertible.ToDecimal,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToDecimal(System.IFormatProvider).provider,
        Id: M:System.Int32.System#IConvertible#ToDecimal(System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Int32.System#IConvertible#ToDecimal(System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Decimal,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToDouble(System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToDouble(System.IFormatProvider),
    Id: M:System.Int32.System#IConvertible#ToDouble(System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IConvertible.ToDouble,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToDouble(System.IFormatProvider).provider,
        Id: M:System.Int32.System#IConvertible#ToDouble(System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Int32.System#IConvertible#ToDouble(System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Double,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToInt16(System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToInt16(System.IFormatProvider),
    Id: M:System.Int32.System#IConvertible#ToInt16(System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IConvertible.ToInt16,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToInt16(System.IFormatProvider).provider,
        Id: M:System.Int32.System#IConvertible#ToInt16(System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Int32.System#IConvertible#ToInt16(System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int16,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToInt32(System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToInt32(System.IFormatProvider),
    Id: M:System.Int32.System#IConvertible#ToInt32(System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IConvertible.ToInt32,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToInt32(System.IFormatProvider).provider,
        Id: M:System.Int32.System#IConvertible#ToInt32(System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Int32.System#IConvertible#ToInt32(System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToInt64(System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToInt64(System.IFormatProvider),
    Id: M:System.Int32.System#IConvertible#ToInt64(System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IConvertible.ToInt64,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToInt64(System.IFormatProvider).provider,
        Id: M:System.Int32.System#IConvertible#ToInt64(System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Int32.System#IConvertible#ToInt64(System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int64,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToSByte(System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToSByte(System.IFormatProvider),
    Id: M:System.Int32.System#IConvertible#ToSByte(System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IConvertible.ToSByte,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToSByte(System.IFormatProvider).provider,
        Id: M:System.Int32.System#IConvertible#ToSByte(System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Int32.System#IConvertible#ToSByte(System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.SByte,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToSingle(System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToSingle(System.IFormatProvider),
    Id: M:System.Int32.System#IConvertible#ToSingle(System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IConvertible.ToSingle,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToSingle(System.IFormatProvider).provider,
        Id: M:System.Int32.System#IConvertible#ToSingle(System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Int32.System#IConvertible#ToSingle(System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Single,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToType(System.Type,System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToType(System.Type,System.IFormatProvider),
    Id: M:System.Int32.System#IConvertible#ToType(System.Type,System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IConvertible.ToType,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToType(System.Type,System.IFormatProvider).type,
        Id: M:System.Int32.System#IConvertible#ToType(System.Type,System.IFormatProvider).type,
        Kind: Parameter,
        Name: type,
        ParentId: M:System.Int32.System#IConvertible#ToType(System.Type,System.IFormatProvider),
        Type: {
          Id: T:System.Type,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToType(System.Type,System.IFormatProvider).provider,
        Id: M:System.Int32.System#IConvertible#ToType(System.Type,System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Int32.System#IConvertible#ToType(System.Type,System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Object,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToUInt16(System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToUInt16(System.IFormatProvider),
    Id: M:System.Int32.System#IConvertible#ToUInt16(System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IConvertible.ToUInt16,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToUInt16(System.IFormatProvider).provider,
        Id: M:System.Int32.System#IConvertible#ToUInt16(System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Int32.System#IConvertible#ToUInt16(System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.UInt16,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToUInt32(System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToUInt32(System.IFormatProvider),
    Id: M:System.Int32.System#IConvertible#ToUInt32(System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IConvertible.ToUInt32,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToUInt32(System.IFormatProvider).provider,
        Id: M:System.Int32.System#IConvertible#ToUInt32(System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Int32.System#IConvertible#ToUInt32(System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.UInt32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToUInt64(System.IFormatProvider): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToUInt64(System.IFormatProvider),
    Id: M:System.Int32.System#IConvertible#ToUInt64(System.IFormatProvider),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.IConvertible.ToUInt64,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IConvertible#ToUInt64(System.IFormatProvider).provider,
        Id: M:System.Int32.System#IConvertible#ToUInt64(System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Int32.System#IConvertible#ToUInt64(System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.UInt64,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IAdditionOperators{System#Int32,System#Int32,System#Int32}#op_Addition(System.Int32,System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IAdditionOperators{System#Int32,System#Int32,System#Int32}#op_Addition(System.Int32,System.Int32),
    Id: M:System.Int32.System#Numerics#IAdditionOperators{System#Int32,System#Int32,System#Int32}#op_Addition(System.Int32,System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IAdditionOperators<System.Int32,System.Int32,System.Int32>.op_Addition,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IAdditionOperators{System#Int32,System#Int32,System#Int32}#op_Addition(System.Int32,System.Int32).left,
        Id: M:System.Int32.System#Numerics#IAdditionOperators{System#Int32,System#Int32,System#Int32}#op_Addition(System.Int32,System.Int32).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Int32.System#Numerics#IAdditionOperators{System#Int32,System#Int32,System#Int32}#op_Addition(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IAdditionOperators{System#Int32,System#Int32,System#Int32}#op_Addition(System.Int32,System.Int32).right,
        Id: M:System.Int32.System#Numerics#IAdditionOperators{System#Int32,System#Int32,System#Int32}#op_Addition(System.Int32,System.Int32).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Int32.System#Numerics#IAdditionOperators{System#Int32,System#Int32,System#Int32}#op_Addition(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IAdditionOperators{System#Int32,System#Int32,System#Int32}#op_CheckedAddition(System.Int32,System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IAdditionOperators{System#Int32,System#Int32,System#Int32}#op_CheckedAddition(System.Int32,System.Int32),
    Id: M:System.Int32.System#Numerics#IAdditionOperators{System#Int32,System#Int32,System#Int32}#op_CheckedAddition(System.Int32,System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IAdditionOperators<System.Int32,System.Int32,System.Int32>.op_CheckedAddition,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IAdditionOperators{System#Int32,System#Int32,System#Int32}#op_CheckedAddition(System.Int32,System.Int32).left,
        Id: M:System.Int32.System#Numerics#IAdditionOperators{System#Int32,System#Int32,System#Int32}#op_CheckedAddition(System.Int32,System.Int32).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Int32.System#Numerics#IAdditionOperators{System#Int32,System#Int32,System#Int32}#op_CheckedAddition(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IAdditionOperators{System#Int32,System#Int32,System#Int32}#op_CheckedAddition(System.Int32,System.Int32).right,
        Id: M:System.Int32.System#Numerics#IAdditionOperators{System#Int32,System#Int32,System#Int32}#op_CheckedAddition(System.Int32,System.Int32).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Int32.System#Numerics#IAdditionOperators{System#Int32,System#Int32,System#Int32}#op_CheckedAddition(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#GetByteCount: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#GetByteCount,
    Id: M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#GetByteCount,
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.Numerics.IBinaryInteger<System.Int32>.GetByteCount,
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#GetShortestBitLength: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#GetShortestBitLength,
    Id: M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#GetShortestBitLength,
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.Numerics.IBinaryInteger<System.Int32>.GetShortestBitLength,
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryReadBigEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Int32@): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryReadBigEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Int32@),
    Id: M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryReadBigEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Int32@),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IBinaryInteger<System.Int32>.TryReadBigEndian,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryReadBigEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Int32@).source,
        Id: M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryReadBigEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Int32@).source,
        Kind: Parameter,
        Name: source,
        ParentId: M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryReadBigEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Int32@),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Byte]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryReadBigEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Int32@).isUnsigned,
        Id: M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryReadBigEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Int32@).isUnsigned,
        Kind: Parameter,
        Name: isUnsigned,
        ParentId: M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryReadBigEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Int32@),
        Type: {
          Id: T:System.Boolean,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryReadBigEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Int32@).value,
        Id: M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryReadBigEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Int32@).value,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: value,
        ParentId: M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryReadBigEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Int32@),
        Type: {
          Id: T:System.Int32&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryReadLittleEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Int32@): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryReadLittleEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Int32@),
    Id: M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryReadLittleEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Int32@),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IBinaryInteger<System.Int32>.TryReadLittleEndian,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryReadLittleEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Int32@).source,
        Id: M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryReadLittleEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Int32@).source,
        Kind: Parameter,
        Name: source,
        ParentId: M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryReadLittleEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Int32@),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Byte]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryReadLittleEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Int32@).isUnsigned,
        Id: M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryReadLittleEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Int32@).isUnsigned,
        Kind: Parameter,
        Name: isUnsigned,
        ParentId: M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryReadLittleEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Int32@),
        Type: {
          Id: T:System.Boolean,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryReadLittleEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Int32@).value,
        Id: M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryReadLittleEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Int32@).value,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: value,
        ParentId: M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryReadLittleEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Int32@),
        Type: {
          Id: T:System.Int32&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryWriteBigEndian(System.Span{System.Byte},System.Int32@): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryWriteBigEndian(System.Span{System.Byte},System.Int32@),
    Id: M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryWriteBigEndian(System.Span{System.Byte},System.Int32@),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.Numerics.IBinaryInteger<System.Int32>.TryWriteBigEndian,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryWriteBigEndian(System.Span{System.Byte},System.Int32@).destination,
        Id: M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryWriteBigEndian(System.Span{System.Byte},System.Int32@).destination,
        Kind: Parameter,
        Name: destination,
        ParentId: M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryWriteBigEndian(System.Span{System.Byte},System.Int32@),
        Type: {
          Id: T:System.Span`1[[System.Byte]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryWriteBigEndian(System.Span{System.Byte},System.Int32@).bytesWritten,
        Id: M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryWriteBigEndian(System.Span{System.Byte},System.Int32@).bytesWritten,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: bytesWritten,
        ParentId: M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryWriteBigEndian(System.Span{System.Byte},System.Int32@),
        Type: {
          Id: T:System.Int32&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryWriteLittleEndian(System.Span{System.Byte},System.Int32@): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryWriteLittleEndian(System.Span{System.Byte},System.Int32@),
    Id: M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryWriteLittleEndian(System.Span{System.Byte},System.Int32@),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.Numerics.IBinaryInteger<System.Int32>.TryWriteLittleEndian,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryWriteLittleEndian(System.Span{System.Byte},System.Int32@).destination,
        Id: M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryWriteLittleEndian(System.Span{System.Byte},System.Int32@).destination,
        Kind: Parameter,
        Name: destination,
        ParentId: M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryWriteLittleEndian(System.Span{System.Byte},System.Int32@),
        Type: {
          Id: T:System.Span`1[[System.Byte]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryWriteLittleEndian(System.Span{System.Byte},System.Int32@).bytesWritten,
        Id: M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryWriteLittleEndian(System.Span{System.Byte},System.Int32@).bytesWritten,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: bytesWritten,
        ParentId: M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryWriteLittleEndian(System.Span{System.Byte},System.Int32@),
        Type: {
          Id: T:System.Int32&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IBitwiseOperators{System#Int32,System#Int32,System#Int32}#op_BitwiseAnd(System.Int32,System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IBitwiseOperators{System#Int32,System#Int32,System#Int32}#op_BitwiseAnd(System.Int32,System.Int32),
    Id: M:System.Int32.System#Numerics#IBitwiseOperators{System#Int32,System#Int32,System#Int32}#op_BitwiseAnd(System.Int32,System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IBitwiseOperators<System.Int32,System.Int32,System.Int32>.op_BitwiseAnd,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IBitwiseOperators{System#Int32,System#Int32,System#Int32}#op_BitwiseAnd(System.Int32,System.Int32).left,
        Id: M:System.Int32.System#Numerics#IBitwiseOperators{System#Int32,System#Int32,System#Int32}#op_BitwiseAnd(System.Int32,System.Int32).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Int32.System#Numerics#IBitwiseOperators{System#Int32,System#Int32,System#Int32}#op_BitwiseAnd(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IBitwiseOperators{System#Int32,System#Int32,System#Int32}#op_BitwiseAnd(System.Int32,System.Int32).right,
        Id: M:System.Int32.System#Numerics#IBitwiseOperators{System#Int32,System#Int32,System#Int32}#op_BitwiseAnd(System.Int32,System.Int32).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Int32.System#Numerics#IBitwiseOperators{System#Int32,System#Int32,System#Int32}#op_BitwiseAnd(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IBitwiseOperators{System#Int32,System#Int32,System#Int32}#op_BitwiseOr(System.Int32,System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IBitwiseOperators{System#Int32,System#Int32,System#Int32}#op_BitwiseOr(System.Int32,System.Int32),
    Id: M:System.Int32.System#Numerics#IBitwiseOperators{System#Int32,System#Int32,System#Int32}#op_BitwiseOr(System.Int32,System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IBitwiseOperators<System.Int32,System.Int32,System.Int32>.op_BitwiseOr,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IBitwiseOperators{System#Int32,System#Int32,System#Int32}#op_BitwiseOr(System.Int32,System.Int32).left,
        Id: M:System.Int32.System#Numerics#IBitwiseOperators{System#Int32,System#Int32,System#Int32}#op_BitwiseOr(System.Int32,System.Int32).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Int32.System#Numerics#IBitwiseOperators{System#Int32,System#Int32,System#Int32}#op_BitwiseOr(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IBitwiseOperators{System#Int32,System#Int32,System#Int32}#op_BitwiseOr(System.Int32,System.Int32).right,
        Id: M:System.Int32.System#Numerics#IBitwiseOperators{System#Int32,System#Int32,System#Int32}#op_BitwiseOr(System.Int32,System.Int32).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Int32.System#Numerics#IBitwiseOperators{System#Int32,System#Int32,System#Int32}#op_BitwiseOr(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IBitwiseOperators{System#Int32,System#Int32,System#Int32}#op_ExclusiveOr(System.Int32,System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IBitwiseOperators{System#Int32,System#Int32,System#Int32}#op_ExclusiveOr(System.Int32,System.Int32),
    Id: M:System.Int32.System#Numerics#IBitwiseOperators{System#Int32,System#Int32,System#Int32}#op_ExclusiveOr(System.Int32,System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IBitwiseOperators<System.Int32,System.Int32,System.Int32>.op_ExclusiveOr,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IBitwiseOperators{System#Int32,System#Int32,System#Int32}#op_ExclusiveOr(System.Int32,System.Int32).left,
        Id: M:System.Int32.System#Numerics#IBitwiseOperators{System#Int32,System#Int32,System#Int32}#op_ExclusiveOr(System.Int32,System.Int32).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Int32.System#Numerics#IBitwiseOperators{System#Int32,System#Int32,System#Int32}#op_ExclusiveOr(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IBitwiseOperators{System#Int32,System#Int32,System#Int32}#op_ExclusiveOr(System.Int32,System.Int32).right,
        Id: M:System.Int32.System#Numerics#IBitwiseOperators{System#Int32,System#Int32,System#Int32}#op_ExclusiveOr(System.Int32,System.Int32).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Int32.System#Numerics#IBitwiseOperators{System#Int32,System#Int32,System#Int32}#op_ExclusiveOr(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IBitwiseOperators{System#Int32,System#Int32,System#Int32}#op_OnesComplement(System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IBitwiseOperators{System#Int32,System#Int32,System#Int32}#op_OnesComplement(System.Int32),
    Id: M:System.Int32.System#Numerics#IBitwiseOperators{System#Int32,System#Int32,System#Int32}#op_OnesComplement(System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IBitwiseOperators<System.Int32,System.Int32,System.Int32>.op_OnesComplement,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IBitwiseOperators{System#Int32,System#Int32,System#Int32}#op_OnesComplement(System.Int32).value,
        Id: M:System.Int32.System#Numerics#IBitwiseOperators{System#Int32,System#Int32,System#Int32}#op_OnesComplement(System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.System#Numerics#IBitwiseOperators{System#Int32,System#Int32,System#Int32}#op_OnesComplement(System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IComparisonOperators{System#Int32,System#Int32,System#Boolean}#op_GreaterThan(System.Int32,System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IComparisonOperators{System#Int32,System#Int32,System#Boolean}#op_GreaterThan(System.Int32,System.Int32),
    Id: M:System.Int32.System#Numerics#IComparisonOperators{System#Int32,System#Int32,System#Boolean}#op_GreaterThan(System.Int32,System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IComparisonOperators<System.Int32,System.Int32,System.Boolean>.op_GreaterThan,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IComparisonOperators{System#Int32,System#Int32,System#Boolean}#op_GreaterThan(System.Int32,System.Int32).left,
        Id: M:System.Int32.System#Numerics#IComparisonOperators{System#Int32,System#Int32,System#Boolean}#op_GreaterThan(System.Int32,System.Int32).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Int32.System#Numerics#IComparisonOperators{System#Int32,System#Int32,System#Boolean}#op_GreaterThan(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IComparisonOperators{System#Int32,System#Int32,System#Boolean}#op_GreaterThan(System.Int32,System.Int32).right,
        Id: M:System.Int32.System#Numerics#IComparisonOperators{System#Int32,System#Int32,System#Boolean}#op_GreaterThan(System.Int32,System.Int32).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Int32.System#Numerics#IComparisonOperators{System#Int32,System#Int32,System#Boolean}#op_GreaterThan(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IComparisonOperators{System#Int32,System#Int32,System#Boolean}#op_GreaterThanOrEqual(System.Int32,System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IComparisonOperators{System#Int32,System#Int32,System#Boolean}#op_GreaterThanOrEqual(System.Int32,System.Int32),
    Id: M:System.Int32.System#Numerics#IComparisonOperators{System#Int32,System#Int32,System#Boolean}#op_GreaterThanOrEqual(System.Int32,System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IComparisonOperators<System.Int32,System.Int32,System.Boolean>.op_GreaterThanOrEqual,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IComparisonOperators{System#Int32,System#Int32,System#Boolean}#op_GreaterThanOrEqual(System.Int32,System.Int32).left,
        Id: M:System.Int32.System#Numerics#IComparisonOperators{System#Int32,System#Int32,System#Boolean}#op_GreaterThanOrEqual(System.Int32,System.Int32).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Int32.System#Numerics#IComparisonOperators{System#Int32,System#Int32,System#Boolean}#op_GreaterThanOrEqual(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IComparisonOperators{System#Int32,System#Int32,System#Boolean}#op_GreaterThanOrEqual(System.Int32,System.Int32).right,
        Id: M:System.Int32.System#Numerics#IComparisonOperators{System#Int32,System#Int32,System#Boolean}#op_GreaterThanOrEqual(System.Int32,System.Int32).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Int32.System#Numerics#IComparisonOperators{System#Int32,System#Int32,System#Boolean}#op_GreaterThanOrEqual(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IComparisonOperators{System#Int32,System#Int32,System#Boolean}#op_LessThan(System.Int32,System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IComparisonOperators{System#Int32,System#Int32,System#Boolean}#op_LessThan(System.Int32,System.Int32),
    Id: M:System.Int32.System#Numerics#IComparisonOperators{System#Int32,System#Int32,System#Boolean}#op_LessThan(System.Int32,System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IComparisonOperators<System.Int32,System.Int32,System.Boolean>.op_LessThan,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IComparisonOperators{System#Int32,System#Int32,System#Boolean}#op_LessThan(System.Int32,System.Int32).left,
        Id: M:System.Int32.System#Numerics#IComparisonOperators{System#Int32,System#Int32,System#Boolean}#op_LessThan(System.Int32,System.Int32).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Int32.System#Numerics#IComparisonOperators{System#Int32,System#Int32,System#Boolean}#op_LessThan(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IComparisonOperators{System#Int32,System#Int32,System#Boolean}#op_LessThan(System.Int32,System.Int32).right,
        Id: M:System.Int32.System#Numerics#IComparisonOperators{System#Int32,System#Int32,System#Boolean}#op_LessThan(System.Int32,System.Int32).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Int32.System#Numerics#IComparisonOperators{System#Int32,System#Int32,System#Boolean}#op_LessThan(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IComparisonOperators{System#Int32,System#Int32,System#Boolean}#op_LessThanOrEqual(System.Int32,System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IComparisonOperators{System#Int32,System#Int32,System#Boolean}#op_LessThanOrEqual(System.Int32,System.Int32),
    Id: M:System.Int32.System#Numerics#IComparisonOperators{System#Int32,System#Int32,System#Boolean}#op_LessThanOrEqual(System.Int32,System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IComparisonOperators<System.Int32,System.Int32,System.Boolean>.op_LessThanOrEqual,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IComparisonOperators{System#Int32,System#Int32,System#Boolean}#op_LessThanOrEqual(System.Int32,System.Int32).left,
        Id: M:System.Int32.System#Numerics#IComparisonOperators{System#Int32,System#Int32,System#Boolean}#op_LessThanOrEqual(System.Int32,System.Int32).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Int32.System#Numerics#IComparisonOperators{System#Int32,System#Int32,System#Boolean}#op_LessThanOrEqual(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IComparisonOperators{System#Int32,System#Int32,System#Boolean}#op_LessThanOrEqual(System.Int32,System.Int32).right,
        Id: M:System.Int32.System#Numerics#IComparisonOperators{System#Int32,System#Int32,System#Boolean}#op_LessThanOrEqual(System.Int32,System.Int32).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Int32.System#Numerics#IComparisonOperators{System#Int32,System#Int32,System#Boolean}#op_LessThanOrEqual(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IDecrementOperators{System#Int32}#op_CheckedDecrement(System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IDecrementOperators{System#Int32}#op_CheckedDecrement(System.Int32),
    Id: M:System.Int32.System#Numerics#IDecrementOperators{System#Int32}#op_CheckedDecrement(System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IDecrementOperators<System.Int32>.op_CheckedDecrement,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IDecrementOperators{System#Int32}#op_CheckedDecrement(System.Int32).value,
        Id: M:System.Int32.System#Numerics#IDecrementOperators{System#Int32}#op_CheckedDecrement(System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.System#Numerics#IDecrementOperators{System#Int32}#op_CheckedDecrement(System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IDecrementOperators{System#Int32}#op_Decrement(System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IDecrementOperators{System#Int32}#op_Decrement(System.Int32),
    Id: M:System.Int32.System#Numerics#IDecrementOperators{System#Int32}#op_Decrement(System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IDecrementOperators<System.Int32>.op_Decrement,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IDecrementOperators{System#Int32}#op_Decrement(System.Int32).value,
        Id: M:System.Int32.System#Numerics#IDecrementOperators{System#Int32}#op_Decrement(System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.System#Numerics#IDecrementOperators{System#Int32}#op_Decrement(System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IDivisionOperators{System#Int32,System#Int32,System#Int32}#op_Division(System.Int32,System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IDivisionOperators{System#Int32,System#Int32,System#Int32}#op_Division(System.Int32,System.Int32),
    Id: M:System.Int32.System#Numerics#IDivisionOperators{System#Int32,System#Int32,System#Int32}#op_Division(System.Int32,System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IDivisionOperators<System.Int32,System.Int32,System.Int32>.op_Division,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IDivisionOperators{System#Int32,System#Int32,System#Int32}#op_Division(System.Int32,System.Int32).left,
        Id: M:System.Int32.System#Numerics#IDivisionOperators{System#Int32,System#Int32,System#Int32}#op_Division(System.Int32,System.Int32).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Int32.System#Numerics#IDivisionOperators{System#Int32,System#Int32,System#Int32}#op_Division(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IDivisionOperators{System#Int32,System#Int32,System#Int32}#op_Division(System.Int32,System.Int32).right,
        Id: M:System.Int32.System#Numerics#IDivisionOperators{System#Int32,System#Int32,System#Int32}#op_Division(System.Int32,System.Int32).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Int32.System#Numerics#IDivisionOperators{System#Int32,System#Int32,System#Int32}#op_Division(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IEqualityOperators{System#Int32,System#Int32,System#Boolean}#op_Equality(System.Int32,System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IEqualityOperators{System#Int32,System#Int32,System#Boolean}#op_Equality(System.Int32,System.Int32),
    Id: M:System.Int32.System#Numerics#IEqualityOperators{System#Int32,System#Int32,System#Boolean}#op_Equality(System.Int32,System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IEqualityOperators<System.Int32,System.Int32,System.Boolean>.op_Equality,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IEqualityOperators{System#Int32,System#Int32,System#Boolean}#op_Equality(System.Int32,System.Int32).left,
        Id: M:System.Int32.System#Numerics#IEqualityOperators{System#Int32,System#Int32,System#Boolean}#op_Equality(System.Int32,System.Int32).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Int32.System#Numerics#IEqualityOperators{System#Int32,System#Int32,System#Boolean}#op_Equality(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IEqualityOperators{System#Int32,System#Int32,System#Boolean}#op_Equality(System.Int32,System.Int32).right,
        Id: M:System.Int32.System#Numerics#IEqualityOperators{System#Int32,System#Int32,System#Boolean}#op_Equality(System.Int32,System.Int32).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Int32.System#Numerics#IEqualityOperators{System#Int32,System#Int32,System#Boolean}#op_Equality(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IEqualityOperators{System#Int32,System#Int32,System#Boolean}#op_Inequality(System.Int32,System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IEqualityOperators{System#Int32,System#Int32,System#Boolean}#op_Inequality(System.Int32,System.Int32),
    Id: M:System.Int32.System#Numerics#IEqualityOperators{System#Int32,System#Int32,System#Boolean}#op_Inequality(System.Int32,System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IEqualityOperators<System.Int32,System.Int32,System.Boolean>.op_Inequality,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IEqualityOperators{System#Int32,System#Int32,System#Boolean}#op_Inequality(System.Int32,System.Int32).left,
        Id: M:System.Int32.System#Numerics#IEqualityOperators{System#Int32,System#Int32,System#Boolean}#op_Inequality(System.Int32,System.Int32).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Int32.System#Numerics#IEqualityOperators{System#Int32,System#Int32,System#Boolean}#op_Inequality(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IEqualityOperators{System#Int32,System#Int32,System#Boolean}#op_Inequality(System.Int32,System.Int32).right,
        Id: M:System.Int32.System#Numerics#IEqualityOperators{System#Int32,System#Int32,System#Boolean}#op_Inequality(System.Int32,System.Int32).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Int32.System#Numerics#IEqualityOperators{System#Int32,System#Int32,System#Boolean}#op_Inequality(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IIncrementOperators{System#Int32}#op_CheckedIncrement(System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IIncrementOperators{System#Int32}#op_CheckedIncrement(System.Int32),
    Id: M:System.Int32.System#Numerics#IIncrementOperators{System#Int32}#op_CheckedIncrement(System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IIncrementOperators<System.Int32>.op_CheckedIncrement,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IIncrementOperators{System#Int32}#op_CheckedIncrement(System.Int32).value,
        Id: M:System.Int32.System#Numerics#IIncrementOperators{System#Int32}#op_CheckedIncrement(System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.System#Numerics#IIncrementOperators{System#Int32}#op_CheckedIncrement(System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IIncrementOperators{System#Int32}#op_Increment(System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IIncrementOperators{System#Int32}#op_Increment(System.Int32),
    Id: M:System.Int32.System#Numerics#IIncrementOperators{System#Int32}#op_Increment(System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IIncrementOperators<System.Int32>.op_Increment,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IIncrementOperators{System#Int32}#op_Increment(System.Int32).value,
        Id: M:System.Int32.System#Numerics#IIncrementOperators{System#Int32}#op_Increment(System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.System#Numerics#IIncrementOperators{System#Int32}#op_Increment(System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IModulusOperators{System#Int32,System#Int32,System#Int32}#op_Modulus(System.Int32,System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IModulusOperators{System#Int32,System#Int32,System#Int32}#op_Modulus(System.Int32,System.Int32),
    Id: M:System.Int32.System#Numerics#IModulusOperators{System#Int32,System#Int32,System#Int32}#op_Modulus(System.Int32,System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IModulusOperators<System.Int32,System.Int32,System.Int32>.op_Modulus,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IModulusOperators{System#Int32,System#Int32,System#Int32}#op_Modulus(System.Int32,System.Int32).left,
        Id: M:System.Int32.System#Numerics#IModulusOperators{System#Int32,System#Int32,System#Int32}#op_Modulus(System.Int32,System.Int32).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Int32.System#Numerics#IModulusOperators{System#Int32,System#Int32,System#Int32}#op_Modulus(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IModulusOperators{System#Int32,System#Int32,System#Int32}#op_Modulus(System.Int32,System.Int32).right,
        Id: M:System.Int32.System#Numerics#IModulusOperators{System#Int32,System#Int32,System#Int32}#op_Modulus(System.Int32,System.Int32).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Int32.System#Numerics#IModulusOperators{System#Int32,System#Int32,System#Int32}#op_Modulus(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IMultiplyOperators{System#Int32,System#Int32,System#Int32}#op_CheckedMultiply(System.Int32,System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IMultiplyOperators{System#Int32,System#Int32,System#Int32}#op_CheckedMultiply(System.Int32,System.Int32),
    Id: M:System.Int32.System#Numerics#IMultiplyOperators{System#Int32,System#Int32,System#Int32}#op_CheckedMultiply(System.Int32,System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IMultiplyOperators<System.Int32,System.Int32,System.Int32>.op_CheckedMultiply,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IMultiplyOperators{System#Int32,System#Int32,System#Int32}#op_CheckedMultiply(System.Int32,System.Int32).left,
        Id: M:System.Int32.System#Numerics#IMultiplyOperators{System#Int32,System#Int32,System#Int32}#op_CheckedMultiply(System.Int32,System.Int32).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Int32.System#Numerics#IMultiplyOperators{System#Int32,System#Int32,System#Int32}#op_CheckedMultiply(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IMultiplyOperators{System#Int32,System#Int32,System#Int32}#op_CheckedMultiply(System.Int32,System.Int32).right,
        Id: M:System.Int32.System#Numerics#IMultiplyOperators{System#Int32,System#Int32,System#Int32}#op_CheckedMultiply(System.Int32,System.Int32).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Int32.System#Numerics#IMultiplyOperators{System#Int32,System#Int32,System#Int32}#op_CheckedMultiply(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IMultiplyOperators{System#Int32,System#Int32,System#Int32}#op_Multiply(System.Int32,System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IMultiplyOperators{System#Int32,System#Int32,System#Int32}#op_Multiply(System.Int32,System.Int32),
    Id: M:System.Int32.System#Numerics#IMultiplyOperators{System#Int32,System#Int32,System#Int32}#op_Multiply(System.Int32,System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IMultiplyOperators<System.Int32,System.Int32,System.Int32>.op_Multiply,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IMultiplyOperators{System#Int32,System#Int32,System#Int32}#op_Multiply(System.Int32,System.Int32).left,
        Id: M:System.Int32.System#Numerics#IMultiplyOperators{System#Int32,System#Int32,System#Int32}#op_Multiply(System.Int32,System.Int32).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Int32.System#Numerics#IMultiplyOperators{System#Int32,System#Int32,System#Int32}#op_Multiply(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IMultiplyOperators{System#Int32,System#Int32,System#Int32}#op_Multiply(System.Int32,System.Int32).right,
        Id: M:System.Int32.System#Numerics#IMultiplyOperators{System#Int32,System#Int32,System#Int32}#op_Multiply(System.Int32,System.Int32).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Int32.System#Numerics#IMultiplyOperators{System#Int32,System#Int32,System#Int32}#op_Multiply(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumber{System#Int32}#MaxNumber(System.Int32,System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumber{System#Int32}#MaxNumber(System.Int32,System.Int32),
    Id: M:System.Int32.System#Numerics#INumber{System#Int32}#MaxNumber(System.Int32,System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumber<System.Int32>.MaxNumber,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumber{System#Int32}#MaxNumber(System.Int32,System.Int32).x,
        Id: M:System.Int32.System#Numerics#INumber{System#Int32}#MaxNumber(System.Int32,System.Int32).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Int32.System#Numerics#INumber{System#Int32}#MaxNumber(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumber{System#Int32}#MaxNumber(System.Int32,System.Int32).y,
        Id: M:System.Int32.System#Numerics#INumber{System#Int32}#MaxNumber(System.Int32,System.Int32).y,
        Kind: Parameter,
        Name: y,
        ParentId: M:System.Int32.System#Numerics#INumber{System#Int32}#MaxNumber(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumber{System#Int32}#MinNumber(System.Int32,System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumber{System#Int32}#MinNumber(System.Int32,System.Int32),
    Id: M:System.Int32.System#Numerics#INumber{System#Int32}#MinNumber(System.Int32,System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumber<System.Int32>.MinNumber,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumber{System#Int32}#MinNumber(System.Int32,System.Int32).x,
        Id: M:System.Int32.System#Numerics#INumber{System#Int32}#MinNumber(System.Int32,System.Int32).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Int32.System#Numerics#INumber{System#Int32}#MinNumber(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumber{System#Int32}#MinNumber(System.Int32,System.Int32).y,
        Id: M:System.Int32.System#Numerics#INumber{System#Int32}#MinNumber(System.Int32,System.Int32).y,
        Kind: Parameter,
        Name: y,
        ParentId: M:System.Int32.System#Numerics#INumber{System#Int32}#MinNumber(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsCanonical(System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsCanonical(System.Int32),
    Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsCanonical(System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Int32>.IsCanonical,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsCanonical(System.Int32).value,
        Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsCanonical(System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsCanonical(System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsComplexNumber(System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsComplexNumber(System.Int32),
    Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsComplexNumber(System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Int32>.IsComplexNumber,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsComplexNumber(System.Int32).value,
        Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsComplexNumber(System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsComplexNumber(System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsFinite(System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsFinite(System.Int32),
    Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsFinite(System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Int32>.IsFinite,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsFinite(System.Int32).value,
        Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsFinite(System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsFinite(System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsImaginaryNumber(System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsImaginaryNumber(System.Int32),
    Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsImaginaryNumber(System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Int32>.IsImaginaryNumber,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsImaginaryNumber(System.Int32).value,
        Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsImaginaryNumber(System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsImaginaryNumber(System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsInfinity(System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsInfinity(System.Int32),
    Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsInfinity(System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Int32>.IsInfinity,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsInfinity(System.Int32).value,
        Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsInfinity(System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsInfinity(System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsInteger(System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsInteger(System.Int32),
    Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsInteger(System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Int32>.IsInteger,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsInteger(System.Int32).value,
        Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsInteger(System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsInteger(System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsNaN(System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsNaN(System.Int32),
    Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsNaN(System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Int32>.IsNaN,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsNaN(System.Int32).value,
        Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsNaN(System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsNaN(System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsNegativeInfinity(System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsNegativeInfinity(System.Int32),
    Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsNegativeInfinity(System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Int32>.IsNegativeInfinity,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsNegativeInfinity(System.Int32).value,
        Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsNegativeInfinity(System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsNegativeInfinity(System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsNormal(System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsNormal(System.Int32),
    Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsNormal(System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Int32>.IsNormal,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsNormal(System.Int32).value,
        Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsNormal(System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsNormal(System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsPositiveInfinity(System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsPositiveInfinity(System.Int32),
    Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsPositiveInfinity(System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Int32>.IsPositiveInfinity,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsPositiveInfinity(System.Int32).value,
        Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsPositiveInfinity(System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsPositiveInfinity(System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsRealNumber(System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsRealNumber(System.Int32),
    Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsRealNumber(System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Int32>.IsRealNumber,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsRealNumber(System.Int32).value,
        Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsRealNumber(System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsRealNumber(System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsSubnormal(System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsSubnormal(System.Int32),
    Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsSubnormal(System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Int32>.IsSubnormal,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsSubnormal(System.Int32).value,
        Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsSubnormal(System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsSubnormal(System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsZero(System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsZero(System.Int32),
    Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsZero(System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Int32>.IsZero,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsZero(System.Int32).value,
        Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsZero(System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsZero(System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#MaxMagnitudeNumber(System.Int32,System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#MaxMagnitudeNumber(System.Int32,System.Int32),
    Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#MaxMagnitudeNumber(System.Int32,System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Int32>.MaxMagnitudeNumber,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#MaxMagnitudeNumber(System.Int32,System.Int32).x,
        Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#MaxMagnitudeNumber(System.Int32,System.Int32).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Int32.System#Numerics#INumberBase{System#Int32}#MaxMagnitudeNumber(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#MaxMagnitudeNumber(System.Int32,System.Int32).y,
        Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#MaxMagnitudeNumber(System.Int32,System.Int32).y,
        Kind: Parameter,
        Name: y,
        ParentId: M:System.Int32.System#Numerics#INumberBase{System#Int32}#MaxMagnitudeNumber(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#MinMagnitudeNumber(System.Int32,System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#MinMagnitudeNumber(System.Int32,System.Int32),
    Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#MinMagnitudeNumber(System.Int32,System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Int32>.MinMagnitudeNumber,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#MinMagnitudeNumber(System.Int32,System.Int32).x,
        Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#MinMagnitudeNumber(System.Int32,System.Int32).x,
        Kind: Parameter,
        Name: x,
        ParentId: M:System.Int32.System#Numerics#INumberBase{System#Int32}#MinMagnitudeNumber(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#MinMagnitudeNumber(System.Int32,System.Int32).y,
        Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#MinMagnitudeNumber(System.Int32,System.Int32).y,
        Kind: Parameter,
        Name: y,
        ParentId: M:System.Int32.System#Numerics#INumberBase{System#Int32}#MinMagnitudeNumber(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#MultiplyAddEstimate(System.Int32,System.Int32,System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#MultiplyAddEstimate(System.Int32,System.Int32,System.Int32),
    Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#MultiplyAddEstimate(System.Int32,System.Int32,System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Int32>.MultiplyAddEstimate,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#MultiplyAddEstimate(System.Int32,System.Int32,System.Int32).left,
        Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#MultiplyAddEstimate(System.Int32,System.Int32,System.Int32).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Int32.System#Numerics#INumberBase{System#Int32}#MultiplyAddEstimate(System.Int32,System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#MultiplyAddEstimate(System.Int32,System.Int32,System.Int32).right,
        Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#MultiplyAddEstimate(System.Int32,System.Int32,System.Int32).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Int32.System#Numerics#INumberBase{System#Int32}#MultiplyAddEstimate(System.Int32,System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#MultiplyAddEstimate(System.Int32,System.Int32,System.Int32).addend,
        Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#MultiplyAddEstimate(System.Int32,System.Int32,System.Int32).addend,
        Kind: Parameter,
        Name: addend,
        ParentId: M:System.Int32.System#Numerics#INumberBase{System#Int32}#MultiplyAddEstimate(System.Int32,System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertFromChecked``1(``0,System.Int32@): {
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.MethodImplAttribute,
        Id: T:System.Runtime.CompilerServices.MethodImplAttribute,
        Kind: Attribute,
        Name: MethodImplAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertFromChecked``1(``0,System.Int32@),
    Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertFromChecked``1(``0,System.Int32@),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Int32>.TryConvertFromChecked,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertFromChecked``1(``0,System.Int32@).value,
        Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertFromChecked``1(``0,System.Int32@).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertFromChecked``1(``0,System.Int32@),
        Type: {
          Id: T:System.Int32.System.Numerics.INumberBase<System.Int32>.TryConvertFromChecked.TOther,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertFromChecked``1(``0,System.Int32@).result,
        Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertFromChecked``1(``0,System.Int32@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertFromChecked``1(``0,System.Int32@),
        Type: {
          Id: T:System.Int32&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertFromChecked``1(``0,System.Int32@).TOther,
        Id: G:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertFromChecked``1(``0,System.Int32@).TOther,
        Kind: TypeParameter,
        Name: TOther,
        ParentId: M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertFromChecked``1(``0,System.Int32@)
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertFromSaturating``1(``0,System.Int32@): {
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.MethodImplAttribute,
        Id: T:System.Runtime.CompilerServices.MethodImplAttribute,
        Kind: Attribute,
        Name: MethodImplAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertFromSaturating``1(``0,System.Int32@),
    Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertFromSaturating``1(``0,System.Int32@),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Int32>.TryConvertFromSaturating,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertFromSaturating``1(``0,System.Int32@).value,
        Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertFromSaturating``1(``0,System.Int32@).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertFromSaturating``1(``0,System.Int32@),
        Type: {
          Id: T:System.Int32.System.Numerics.INumberBase<System.Int32>.TryConvertFromSaturating.TOther,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertFromSaturating``1(``0,System.Int32@).result,
        Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertFromSaturating``1(``0,System.Int32@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertFromSaturating``1(``0,System.Int32@),
        Type: {
          Id: T:System.Int32&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertFromSaturating``1(``0,System.Int32@).TOther,
        Id: G:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertFromSaturating``1(``0,System.Int32@).TOther,
        Kind: TypeParameter,
        Name: TOther,
        ParentId: M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertFromSaturating``1(``0,System.Int32@)
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertFromTruncating``1(``0,System.Int32@): {
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.MethodImplAttribute,
        Id: T:System.Runtime.CompilerServices.MethodImplAttribute,
        Kind: Attribute,
        Name: MethodImplAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertFromTruncating``1(``0,System.Int32@),
    Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertFromTruncating``1(``0,System.Int32@),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Int32>.TryConvertFromTruncating,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertFromTruncating``1(``0,System.Int32@).value,
        Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertFromTruncating``1(``0,System.Int32@).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertFromTruncating``1(``0,System.Int32@),
        Type: {
          Id: T:System.Int32.System.Numerics.INumberBase<System.Int32>.TryConvertFromTruncating.TOther,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertFromTruncating``1(``0,System.Int32@).result,
        Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertFromTruncating``1(``0,System.Int32@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertFromTruncating``1(``0,System.Int32@),
        Type: {
          Id: T:System.Int32&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertFromTruncating``1(``0,System.Int32@).TOther,
        Id: G:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertFromTruncating``1(``0,System.Int32@).TOther,
        Kind: TypeParameter,
        Name: TOther,
        ParentId: M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertFromTruncating``1(``0,System.Int32@)
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertToChecked``1(System.Int32,``0@): {
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.MethodImplAttribute,
        Id: T:System.Runtime.CompilerServices.MethodImplAttribute,
        Kind: Attribute,
        Name: MethodImplAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertToChecked``1(System.Int32,``0@),
    Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertToChecked``1(System.Int32,``0@),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Int32>.TryConvertToChecked,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertToChecked``1(System.Int32,``0@).value,
        Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertToChecked``1(System.Int32,``0@).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertToChecked``1(System.Int32,``0@),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertToChecked``1(System.Int32,``0@).result,
        Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertToChecked``1(System.Int32,``0@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertToChecked``1(System.Int32,``0@),
        Type: {
          Id: T:``0&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertToChecked``1(System.Int32,``0@).TOther,
        Id: G:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertToChecked``1(System.Int32,``0@).TOther,
        Kind: TypeParameter,
        Name: TOther,
        ParentId: M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertToChecked``1(System.Int32,``0@)
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertToSaturating``1(System.Int32,``0@): {
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.MethodImplAttribute,
        Id: T:System.Runtime.CompilerServices.MethodImplAttribute,
        Kind: Attribute,
        Name: MethodImplAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertToSaturating``1(System.Int32,``0@),
    Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertToSaturating``1(System.Int32,``0@),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Int32>.TryConvertToSaturating,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertToSaturating``1(System.Int32,``0@).value,
        Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertToSaturating``1(System.Int32,``0@).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertToSaturating``1(System.Int32,``0@),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertToSaturating``1(System.Int32,``0@).result,
        Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertToSaturating``1(System.Int32,``0@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertToSaturating``1(System.Int32,``0@),
        Type: {
          Id: T:``0&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertToSaturating``1(System.Int32,``0@).TOther,
        Id: G:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertToSaturating``1(System.Int32,``0@).TOther,
        Kind: TypeParameter,
        Name: TOther,
        ParentId: M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertToSaturating``1(System.Int32,``0@)
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertToTruncating``1(System.Int32,``0@): {
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.MethodImplAttribute,
        Id: T:System.Runtime.CompilerServices.MethodImplAttribute,
        Kind: Attribute,
        Name: MethodImplAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertToTruncating``1(System.Int32,``0@),
    Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertToTruncating``1(System.Int32,``0@),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Int32>.TryConvertToTruncating,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertToTruncating``1(System.Int32,``0@).value,
        Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertToTruncating``1(System.Int32,``0@).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertToTruncating``1(System.Int32,``0@),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertToTruncating``1(System.Int32,``0@).result,
        Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertToTruncating``1(System.Int32,``0@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertToTruncating``1(System.Int32,``0@),
        Type: {
          Id: T:``0&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertToTruncating``1(System.Int32,``0@).TOther,
        Id: G:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertToTruncating``1(System.Int32,``0@).TOther,
        Kind: TypeParameter,
        Name: TOther,
        ParentId: M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertToTruncating``1(System.Int32,``0@)
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IShiftOperators{System#Int32,System#Int32,System#Int32}#op_LeftShift(System.Int32,System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IShiftOperators{System#Int32,System#Int32,System#Int32}#op_LeftShift(System.Int32,System.Int32),
    Id: M:System.Int32.System#Numerics#IShiftOperators{System#Int32,System#Int32,System#Int32}#op_LeftShift(System.Int32,System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IShiftOperators<System.Int32,System.Int32,System.Int32>.op_LeftShift,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IShiftOperators{System#Int32,System#Int32,System#Int32}#op_LeftShift(System.Int32,System.Int32).value,
        Id: M:System.Int32.System#Numerics#IShiftOperators{System#Int32,System#Int32,System#Int32}#op_LeftShift(System.Int32,System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.System#Numerics#IShiftOperators{System#Int32,System#Int32,System#Int32}#op_LeftShift(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IShiftOperators{System#Int32,System#Int32,System#Int32}#op_LeftShift(System.Int32,System.Int32).shiftAmount,
        Id: M:System.Int32.System#Numerics#IShiftOperators{System#Int32,System#Int32,System#Int32}#op_LeftShift(System.Int32,System.Int32).shiftAmount,
        Kind: Parameter,
        Name: shiftAmount,
        ParentId: M:System.Int32.System#Numerics#IShiftOperators{System#Int32,System#Int32,System#Int32}#op_LeftShift(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IShiftOperators{System#Int32,System#Int32,System#Int32}#op_RightShift(System.Int32,System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IShiftOperators{System#Int32,System#Int32,System#Int32}#op_RightShift(System.Int32,System.Int32),
    Id: M:System.Int32.System#Numerics#IShiftOperators{System#Int32,System#Int32,System#Int32}#op_RightShift(System.Int32,System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IShiftOperators<System.Int32,System.Int32,System.Int32>.op_RightShift,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IShiftOperators{System#Int32,System#Int32,System#Int32}#op_RightShift(System.Int32,System.Int32).value,
        Id: M:System.Int32.System#Numerics#IShiftOperators{System#Int32,System#Int32,System#Int32}#op_RightShift(System.Int32,System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.System#Numerics#IShiftOperators{System#Int32,System#Int32,System#Int32}#op_RightShift(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IShiftOperators{System#Int32,System#Int32,System#Int32}#op_RightShift(System.Int32,System.Int32).shiftAmount,
        Id: M:System.Int32.System#Numerics#IShiftOperators{System#Int32,System#Int32,System#Int32}#op_RightShift(System.Int32,System.Int32).shiftAmount,
        Kind: Parameter,
        Name: shiftAmount,
        ParentId: M:System.Int32.System#Numerics#IShiftOperators{System#Int32,System#Int32,System#Int32}#op_RightShift(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IShiftOperators{System#Int32,System#Int32,System#Int32}#op_UnsignedRightShift(System.Int32,System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IShiftOperators{System#Int32,System#Int32,System#Int32}#op_UnsignedRightShift(System.Int32,System.Int32),
    Id: M:System.Int32.System#Numerics#IShiftOperators{System#Int32,System#Int32,System#Int32}#op_UnsignedRightShift(System.Int32,System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IShiftOperators<System.Int32,System.Int32,System.Int32>.op_UnsignedRightShift,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IShiftOperators{System#Int32,System#Int32,System#Int32}#op_UnsignedRightShift(System.Int32,System.Int32).value,
        Id: M:System.Int32.System#Numerics#IShiftOperators{System#Int32,System#Int32,System#Int32}#op_UnsignedRightShift(System.Int32,System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.System#Numerics#IShiftOperators{System#Int32,System#Int32,System#Int32}#op_UnsignedRightShift(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IShiftOperators{System#Int32,System#Int32,System#Int32}#op_UnsignedRightShift(System.Int32,System.Int32).shiftAmount,
        Id: M:System.Int32.System#Numerics#IShiftOperators{System#Int32,System#Int32,System#Int32}#op_UnsignedRightShift(System.Int32,System.Int32).shiftAmount,
        Kind: Parameter,
        Name: shiftAmount,
        ParentId: M:System.Int32.System#Numerics#IShiftOperators{System#Int32,System#Int32,System#Int32}#op_UnsignedRightShift(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#ISubtractionOperators{System#Int32,System#Int32,System#Int32}#op_CheckedSubtraction(System.Int32,System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#ISubtractionOperators{System#Int32,System#Int32,System#Int32}#op_CheckedSubtraction(System.Int32,System.Int32),
    Id: M:System.Int32.System#Numerics#ISubtractionOperators{System#Int32,System#Int32,System#Int32}#op_CheckedSubtraction(System.Int32,System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.ISubtractionOperators<System.Int32,System.Int32,System.Int32>.op_CheckedSubtraction,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#ISubtractionOperators{System#Int32,System#Int32,System#Int32}#op_CheckedSubtraction(System.Int32,System.Int32).left,
        Id: M:System.Int32.System#Numerics#ISubtractionOperators{System#Int32,System#Int32,System#Int32}#op_CheckedSubtraction(System.Int32,System.Int32).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Int32.System#Numerics#ISubtractionOperators{System#Int32,System#Int32,System#Int32}#op_CheckedSubtraction(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#ISubtractionOperators{System#Int32,System#Int32,System#Int32}#op_CheckedSubtraction(System.Int32,System.Int32).right,
        Id: M:System.Int32.System#Numerics#ISubtractionOperators{System#Int32,System#Int32,System#Int32}#op_CheckedSubtraction(System.Int32,System.Int32).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Int32.System#Numerics#ISubtractionOperators{System#Int32,System#Int32,System#Int32}#op_CheckedSubtraction(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#ISubtractionOperators{System#Int32,System#Int32,System#Int32}#op_Subtraction(System.Int32,System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#ISubtractionOperators{System#Int32,System#Int32,System#Int32}#op_Subtraction(System.Int32,System.Int32),
    Id: M:System.Int32.System#Numerics#ISubtractionOperators{System#Int32,System#Int32,System#Int32}#op_Subtraction(System.Int32,System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.ISubtractionOperators<System.Int32,System.Int32,System.Int32>.op_Subtraction,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#ISubtractionOperators{System#Int32,System#Int32,System#Int32}#op_Subtraction(System.Int32,System.Int32).left,
        Id: M:System.Int32.System#Numerics#ISubtractionOperators{System#Int32,System#Int32,System#Int32}#op_Subtraction(System.Int32,System.Int32).left,
        Kind: Parameter,
        Name: left,
        ParentId: M:System.Int32.System#Numerics#ISubtractionOperators{System#Int32,System#Int32,System#Int32}#op_Subtraction(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#ISubtractionOperators{System#Int32,System#Int32,System#Int32}#op_Subtraction(System.Int32,System.Int32).right,
        Id: M:System.Int32.System#Numerics#ISubtractionOperators{System#Int32,System#Int32,System#Int32}#op_Subtraction(System.Int32,System.Int32).right,
        Kind: Parameter,
        Name: right,
        ParentId: M:System.Int32.System#Numerics#ISubtractionOperators{System#Int32,System#Int32,System#Int32}#op_Subtraction(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IUnaryNegationOperators{System#Int32,System#Int32}#op_CheckedUnaryNegation(System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IUnaryNegationOperators{System#Int32,System#Int32}#op_CheckedUnaryNegation(System.Int32),
    Id: M:System.Int32.System#Numerics#IUnaryNegationOperators{System#Int32,System#Int32}#op_CheckedUnaryNegation(System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IUnaryNegationOperators<System.Int32,System.Int32>.op_CheckedUnaryNegation,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IUnaryNegationOperators{System#Int32,System#Int32}#op_CheckedUnaryNegation(System.Int32).value,
        Id: M:System.Int32.System#Numerics#IUnaryNegationOperators{System#Int32,System#Int32}#op_CheckedUnaryNegation(System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.System#Numerics#IUnaryNegationOperators{System#Int32,System#Int32}#op_CheckedUnaryNegation(System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IUnaryNegationOperators{System#Int32,System#Int32}#op_UnaryNegation(System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IUnaryNegationOperators{System#Int32,System#Int32}#op_UnaryNegation(System.Int32),
    Id: M:System.Int32.System#Numerics#IUnaryNegationOperators{System#Int32,System#Int32}#op_UnaryNegation(System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IUnaryNegationOperators<System.Int32,System.Int32>.op_UnaryNegation,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IUnaryNegationOperators{System#Int32,System#Int32}#op_UnaryNegation(System.Int32).value,
        Id: M:System.Int32.System#Numerics#IUnaryNegationOperators{System#Int32,System#Int32}#op_UnaryNegation(System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.System#Numerics#IUnaryNegationOperators{System#Int32,System#Int32}#op_UnaryNegation(System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IUnaryPlusOperators{System#Int32,System#Int32}#op_UnaryPlus(System.Int32): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IUnaryPlusOperators{System#Int32,System#Int32}#op_UnaryPlus(System.Int32),
    Id: M:System.Int32.System#Numerics#IUnaryPlusOperators{System#Int32,System#Int32}#op_UnaryPlus(System.Int32),
    IsLocal: false,
    Kind: ExplicitMethod,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IUnaryPlusOperators<System.Int32,System.Int32>.op_UnaryPlus,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IUnaryPlusOperators{System#Int32,System#Int32}#op_UnaryPlus(System.Int32).value,
        Id: M:System.Int32.System#Numerics#IUnaryPlusOperators{System#Int32,System#Int32}#op_UnaryPlus(System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.System#Numerics#IUnaryPlusOperators{System#Int32,System#Int32}#op_UnaryPlus(System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.ToString: {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.ToString,
    Id: M:System.Int32.ToString,
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Override
    ],
    Name: ToString,
    OverloadedMembers: [
      M:System.Int32.ToString(System.String),
      M:System.Int32.ToString(System.IFormatProvider),
      M:System.Int32.ToString(System.String,System.IFormatProvider)
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.String,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.ToString(System.IFormatProvider): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.ToString(System.IFormatProvider),
    Id: M:System.Int32.ToString(System.IFormatProvider),
    IsLocal: false,
    Kind: Method,
    Name: ToString,
    OverloadedMembers: [
      M:System.Int32.ToString,
      M:System.Int32.ToString(System.String),
      M:System.Int32.ToString(System.String,System.IFormatProvider)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.ToString(System.IFormatProvider).provider,
        Id: M:System.Int32.ToString(System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Int32.ToString(System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.String,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.ToString(System.String,System.IFormatProvider): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.ToString(System.String,System.IFormatProvider),
    Id: M:System.Int32.ToString(System.String,System.IFormatProvider),
    IsLocal: false,
    Kind: Method,
    Name: ToString,
    OverloadedMembers: [
      M:System.Int32.ToString,
      M:System.Int32.ToString(System.String),
      M:System.Int32.ToString(System.IFormatProvider)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.ToString(System.String,System.IFormatProvider).format,
        Id: M:System.Int32.ToString(System.String,System.IFormatProvider).format,
        Kind: Parameter,
        Name: format,
        ParentId: M:System.Int32.ToString(System.String,System.IFormatProvider),
        Type: {
          Id: T:System.String,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.ToString(System.String,System.IFormatProvider).provider,
        Id: M:System.Int32.ToString(System.String,System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Int32.ToString(System.String,System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.String,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.ToString(System.String): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.ToString(System.String),
    Id: M:System.Int32.ToString(System.String),
    IsLocal: false,
    Kind: Method,
    Name: ToString,
    OverloadedMembers: [
      M:System.Int32.ToString,
      M:System.Int32.ToString(System.IFormatProvider),
      M:System.Int32.ToString(System.String,System.IFormatProvider)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.ToString(System.String).format,
        Id: M:System.Int32.ToString(System.String).format,
        Kind: Parameter,
        Name: format,
        ParentId: M:System.Int32.ToString(System.String),
        Type: {
          Id: T:System.String,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.String,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TrailingZeroCount(System.Int32): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IntrinsicAttribute,
        Id: T:System.Runtime.CompilerServices.IntrinsicAttribute,
        Kind: Attribute,
        Name: IntrinsicAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TrailingZeroCount(System.Int32),
    Id: M:System.Int32.TrailingZeroCount(System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: TrailingZeroCount,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TrailingZeroCount(System.Int32).value,
        Id: M:System.Int32.TrailingZeroCount(System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.TrailingZeroCount(System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryConvertFromChecked``1(``0,System.Int32@): {
    Accessibility: Private,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.MethodImplAttribute,
        Id: T:System.Runtime.CompilerServices.MethodImplAttribute,
        Kind: Attribute,
        Name: MethodImplAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryConvertFromChecked``1(``0,System.Int32@),
    Id: M:System.Int32.TryConvertFromChecked``1(``0,System.Int32@),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: TryConvertFromChecked,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryConvertFromChecked``1(``0,System.Int32@).value,
        Id: M:System.Int32.TryConvertFromChecked``1(``0,System.Int32@).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.TryConvertFromChecked``1(``0,System.Int32@),
        Type: {
          Id: T:System.Int32.TryConvertFromChecked.TOther,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryConvertFromChecked``1(``0,System.Int32@).result,
        Id: M:System.Int32.TryConvertFromChecked``1(``0,System.Int32@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Int32.TryConvertFromChecked``1(``0,System.Int32@),
        Type: {
          Id: T:System.Int32&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryConvertFromChecked``1(``0,System.Int32@).TOther,
        Id: G:System.Int32.TryConvertFromChecked``1(``0,System.Int32@).TOther,
        Kind: TypeParameter,
        Name: TOther,
        ParentId: M:System.Int32.TryConvertFromChecked``1(``0,System.Int32@)
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryConvertFromSaturating``1(``0,System.Int32@): {
    Accessibility: Private,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.MethodImplAttribute,
        Id: T:System.Runtime.CompilerServices.MethodImplAttribute,
        Kind: Attribute,
        Name: MethodImplAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryConvertFromSaturating``1(``0,System.Int32@),
    Id: M:System.Int32.TryConvertFromSaturating``1(``0,System.Int32@),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: TryConvertFromSaturating,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryConvertFromSaturating``1(``0,System.Int32@).value,
        Id: M:System.Int32.TryConvertFromSaturating``1(``0,System.Int32@).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.TryConvertFromSaturating``1(``0,System.Int32@),
        Type: {
          Id: T:System.Int32.TryConvertFromSaturating.TOther,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryConvertFromSaturating``1(``0,System.Int32@).result,
        Id: M:System.Int32.TryConvertFromSaturating``1(``0,System.Int32@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Int32.TryConvertFromSaturating``1(``0,System.Int32@),
        Type: {
          Id: T:System.Int32&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryConvertFromSaturating``1(``0,System.Int32@).TOther,
        Id: G:System.Int32.TryConvertFromSaturating``1(``0,System.Int32@).TOther,
        Kind: TypeParameter,
        Name: TOther,
        ParentId: M:System.Int32.TryConvertFromSaturating``1(``0,System.Int32@)
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryConvertFromTruncating``1(``0,System.Int32@): {
    Accessibility: Private,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.MethodImplAttribute,
        Id: T:System.Runtime.CompilerServices.MethodImplAttribute,
        Kind: Attribute,
        Name: MethodImplAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryConvertFromTruncating``1(``0,System.Int32@),
    Id: M:System.Int32.TryConvertFromTruncating``1(``0,System.Int32@),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: TryConvertFromTruncating,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryConvertFromTruncating``1(``0,System.Int32@).value,
        Id: M:System.Int32.TryConvertFromTruncating``1(``0,System.Int32@).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Int32.TryConvertFromTruncating``1(``0,System.Int32@),
        Type: {
          Id: T:System.Int32.TryConvertFromTruncating.TOther,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryConvertFromTruncating``1(``0,System.Int32@).result,
        Id: M:System.Int32.TryConvertFromTruncating``1(``0,System.Int32@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Int32.TryConvertFromTruncating``1(``0,System.Int32@),
        Type: {
          Id: T:System.Int32&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryConvertFromTruncating``1(``0,System.Int32@).TOther,
        Id: G:System.Int32.TryConvertFromTruncating``1(``0,System.Int32@).TOther,
        Kind: TypeParameter,
        Name: TOther,
        ParentId: M:System.Int32.TryConvertFromTruncating``1(``0,System.Int32@)
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider),
    Id: M:System.Int32.TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider),
    IsLocal: false,
    Kind: Method,
    Name: TryFormat,
    OverloadedMembers: [
      M:System.Int32.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).utf8Destination,
        Id: M:System.Int32.TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).utf8Destination,
        Kind: Parameter,
        Name: utf8Destination,
        ParentId: M:System.Int32.TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider),
        Type: {
          Id: T:System.Span`1[[System.Byte]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).bytesWritten,
        Id: M:System.Int32.TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).bytesWritten,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: bytesWritten,
        ParentId: M:System.Int32.TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider),
        Type: {
          Id: T:System.Int32&,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).format,
        Id: M:System.Int32.TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).format,
        Kind: Parameter,
        Name: format,
        OptionalValue: <null>,
        ParentId: M:System.Int32.TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Char]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).provider,
        Id: M:System.Int32.TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        OptionalValue: <null>,
        ParentId: M:System.Int32.TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider),
    Id: M:System.Int32.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider),
    IsLocal: false,
    Kind: Method,
    Name: TryFormat,
    OverloadedMembers: [
      M:System.Int32.TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).destination,
        Id: M:System.Int32.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).destination,
        Kind: Parameter,
        Name: destination,
        ParentId: M:System.Int32.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider),
        Type: {
          Id: T:System.Span`1[[System.Char]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).charsWritten,
        Id: M:System.Int32.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).charsWritten,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: charsWritten,
        ParentId: M:System.Int32.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider),
        Type: {
          Id: T:System.Int32&,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).format,
        Id: M:System.Int32.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).format,
        Kind: Parameter,
        Name: format,
        OptionalValue: <null>,
        ParentId: M:System.Int32.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Char]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).provider,
        Id: M:System.Int32.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        OptionalValue: <null>,
        ParentId: M:System.Int32.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@),
    Id: M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: TryParse,
    OverloadedMembers: [
      M:System.Int32.TryParse(System.String,System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.Int32@),
      M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@),
      M:System.Int32.TryParse(System.String,System.IFormatProvider,System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Int32@)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@).utf8Text,
        Id: M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@).utf8Text,
        Kind: Parameter,
        Name: utf8Text,
        ParentId: M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Byte]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@).style,
        Id: M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@).style,
        Kind: Parameter,
        Name: style,
        ParentId: M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@),
        Type: {
          Id: T:System.Globalization.NumberStyles,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@).provider,
        Id: M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@).result,
        Id: M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@),
        Type: {
          Id: T:System.Int32&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Int32@): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Int32@),
    Id: M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Int32@),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: TryParse,
    OverloadedMembers: [
      M:System.Int32.TryParse(System.String,System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.Int32@),
      M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@),
      M:System.Int32.TryParse(System.String,System.IFormatProvider,System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Int32@).utf8Text,
        Id: M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Int32@).utf8Text,
        Kind: Parameter,
        Name: utf8Text,
        ParentId: M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Int32@),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Byte]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Int32@).provider,
        Id: M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Int32@).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Int32@),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Int32@).result,
        Id: M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Int32@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Int32@),
        Type: {
          Id: T:System.Int32&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.Int32@): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.Int32@),
    Id: M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.Int32@),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: TryParse,
    OverloadedMembers: [
      M:System.Int32.TryParse(System.String,System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Int32@),
      M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@),
      M:System.Int32.TryParse(System.String,System.IFormatProvider,System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Int32@)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.Int32@).utf8Text,
        Id: M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.Int32@).utf8Text,
        Kind: Parameter,
        Name: utf8Text,
        ParentId: M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.Int32@),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Byte]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.Int32@).result,
        Id: M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.Int32@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.Int32@),
        Type: {
          Id: T:System.Int32&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@),
    Id: M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: TryParse,
    OverloadedMembers: [
      M:System.Int32.TryParse(System.String,System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.Int32@),
      M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@),
      M:System.Int32.TryParse(System.String,System.IFormatProvider,System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Int32@)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@).s,
        Id: M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Char]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@).style,
        Id: M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@).style,
        Kind: Parameter,
        Name: style,
        ParentId: M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@),
        Type: {
          Id: T:System.Globalization.NumberStyles,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@).provider,
        Id: M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@).result,
        Id: M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@),
        Type: {
          Id: T:System.Int32&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Int32@): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Int32@),
    Id: M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Int32@),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: TryParse,
    OverloadedMembers: [
      M:System.Int32.TryParse(System.String,System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.Int32@),
      M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@),
      M:System.Int32.TryParse(System.String,System.IFormatProvider,System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Int32@)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Int32@).s,
        Id: M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Int32@).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Int32@),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Char]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Int32@).provider,
        Id: M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Int32@).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Int32@),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Int32@).result,
        Id: M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Int32@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Int32@),
        Type: {
          Id: T:System.Int32&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Int32@): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Int32@),
    Id: M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Int32@),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: TryParse,
    OverloadedMembers: [
      M:System.Int32.TryParse(System.String,System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.Int32@),
      M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@),
      M:System.Int32.TryParse(System.String,System.IFormatProvider,System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Int32@)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Int32@).s,
        Id: M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Int32@).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Int32@),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Char]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Int32@).result,
        Id: M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Int32@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Int32@),
        Type: {
          Id: T:System.Int32&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@),
    Id: M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: TryParse,
    OverloadedMembers: [
      M:System.Int32.TryParse(System.String,System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@),
      M:System.Int32.TryParse(System.String,System.IFormatProvider,System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Int32@)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@).s,
        Id: M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@),
        Type: {
          Id: T:System.String,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@).style,
        Id: M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@).style,
        Kind: Parameter,
        Name: style,
        ParentId: M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@),
        Type: {
          Id: T:System.Globalization.NumberStyles,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@).provider,
        Id: M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@).result,
        Id: M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@),
        Type: {
          Id: T:System.Int32&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryParse(System.String,System.IFormatProvider,System.Int32@): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryParse(System.String,System.IFormatProvider,System.Int32@),
    Id: M:System.Int32.TryParse(System.String,System.IFormatProvider,System.Int32@),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: TryParse,
    OverloadedMembers: [
      M:System.Int32.TryParse(System.String,System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.Int32@),
      M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Int32@)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryParse(System.String,System.IFormatProvider,System.Int32@).s,
        Id: M:System.Int32.TryParse(System.String,System.IFormatProvider,System.Int32@).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Int32.TryParse(System.String,System.IFormatProvider,System.Int32@),
        Type: {
          Id: T:System.String,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryParse(System.String,System.IFormatProvider,System.Int32@).provider,
        Id: M:System.Int32.TryParse(System.String,System.IFormatProvider,System.Int32@).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Int32.TryParse(System.String,System.IFormatProvider,System.Int32@),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryParse(System.String,System.IFormatProvider,System.Int32@).result,
        Id: M:System.Int32.TryParse(System.String,System.IFormatProvider,System.Int32@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Int32.TryParse(System.String,System.IFormatProvider,System.Int32@),
        Type: {
          Id: T:System.Int32&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryParse(System.String,System.Int32@): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryParse(System.String,System.Int32@),
    Id: M:System.Int32.TryParse(System.String,System.Int32@),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: TryParse,
    OverloadedMembers: [
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.Int32@),
      M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@),
      M:System.Int32.TryParse(System.String,System.IFormatProvider,System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Int32@)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryParse(System.String,System.Int32@).s,
        Id: M:System.Int32.TryParse(System.String,System.Int32@).s,
        Kind: Parameter,
        Name: s,
        ParentId: M:System.Int32.TryParse(System.String,System.Int32@),
        Type: {
          Id: T:System.String,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.TryParse(System.String,System.Int32@).result,
        Id: M:System.Int32.TryParse(System.String,System.Int32@).result,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: result,
        ParentId: M:System.Int32.TryParse(System.String,System.Int32@),
        Type: {
          Id: T:System.Int32&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#IsSigned: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#IsSigned,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#get_IsSigned,
      Id: M:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#get_IsSigned,
      IsLocal: false,
      Kind: Method,
      Name: System.IBinaryIntegerParseAndFormatInfo<System.Int32>.get_IsSigned,
      ParentId: T:System.Int32,
      Type: {
        Id: T:System.Boolean,
        IsNullable: false
      }
    },
    Id: P:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#IsSigned,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.IBinaryIntegerParseAndFormatInfo<System.Int32>.IsSigned,
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#MaxDigitCount: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#MaxDigitCount,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#get_MaxDigitCount,
      Id: M:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#get_MaxDigitCount,
      IsLocal: false,
      Kind: Method,
      Name: System.IBinaryIntegerParseAndFormatInfo<System.Int32>.get_MaxDigitCount,
      ParentId: T:System.Int32,
      Type: {
        Id: T:System.Int32,
        IsNullable: false
      }
    },
    Id: P:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#MaxDigitCount,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.IBinaryIntegerParseAndFormatInfo<System.Int32>.MaxDigitCount,
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#MaxHexDigitCount: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#MaxHexDigitCount,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#get_MaxHexDigitCount,
      Id: M:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#get_MaxHexDigitCount,
      IsLocal: false,
      Kind: Method,
      Name: System.IBinaryIntegerParseAndFormatInfo<System.Int32>.get_MaxHexDigitCount,
      ParentId: T:System.Int32,
      Type: {
        Id: T:System.Int32,
        IsNullable: false
      }
    },
    Id: P:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#MaxHexDigitCount,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.IBinaryIntegerParseAndFormatInfo<System.Int32>.MaxHexDigitCount,
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#MaxValueDiv10: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#MaxValueDiv10,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#get_MaxValueDiv10,
      Id: M:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#get_MaxValueDiv10,
      IsLocal: false,
      Kind: Method,
      Name: System.IBinaryIntegerParseAndFormatInfo<System.Int32>.get_MaxValueDiv10,
      ParentId: T:System.Int32,
      Type: {
        Id: T:System.Int32,
        IsNullable: false
      }
    },
    Id: P:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#MaxValueDiv10,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.IBinaryIntegerParseAndFormatInfo<System.Int32>.MaxValueDiv10,
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#OverflowMessage: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#OverflowMessage,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#get_OverflowMessage,
      Id: M:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#get_OverflowMessage,
      IsLocal: false,
      Kind: Method,
      Name: System.IBinaryIntegerParseAndFormatInfo<System.Int32>.get_OverflowMessage,
      ParentId: T:System.Int32,
      Type: {
        Id: T:System.String,
        IsNullable: false
      }
    },
    Id: P:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#OverflowMessage,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.IBinaryIntegerParseAndFormatInfo<System.Int32>.OverflowMessage,
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.String,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Int32.System#Numerics#IAdditiveIdentity{System#Int32,System#Int32}#AdditiveIdentity: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Int32.System#Numerics#IAdditiveIdentity{System#Int32,System#Int32}#AdditiveIdentity,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IAdditiveIdentity{System#Int32,System#Int32}#get_AdditiveIdentity,
      Id: M:System.Int32.System#Numerics#IAdditiveIdentity{System#Int32,System#Int32}#get_AdditiveIdentity,
      IsLocal: false,
      Kind: Method,
      Name: System.Numerics.IAdditiveIdentity<System.Int32,System.Int32>.get_AdditiveIdentity,
      ParentId: T:System.Int32,
      Type: {
        Id: T:System.Int32,
        IsNullable: false
      }
    },
    Id: P:System.Int32.System#Numerics#IAdditiveIdentity{System#Int32,System#Int32}#AdditiveIdentity,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IAdditiveIdentity<System.Int32,System.Int32>.AdditiveIdentity,
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Int32.System#Numerics#IBinaryNumber{System#Int32}#AllBitsSet: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Int32.System#Numerics#IBinaryNumber{System#Int32}#AllBitsSet,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IBinaryNumber{System#Int32}#get_AllBitsSet,
      Id: M:System.Int32.System#Numerics#IBinaryNumber{System#Int32}#get_AllBitsSet,
      IsLocal: false,
      Kind: Method,
      Name: System.Numerics.IBinaryNumber<System.Int32>.get_AllBitsSet,
      ParentId: T:System.Int32,
      Type: {
        Id: T:System.Int32,
        IsNullable: false
      }
    },
    Id: P:System.Int32.System#Numerics#IBinaryNumber{System#Int32}#AllBitsSet,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IBinaryNumber<System.Int32>.AllBitsSet,
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Int32.System#Numerics#IMinMaxValue{System#Int32}#MaxValue: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Int32.System#Numerics#IMinMaxValue{System#Int32}#MaxValue,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IMinMaxValue{System#Int32}#get_MaxValue,
      Id: M:System.Int32.System#Numerics#IMinMaxValue{System#Int32}#get_MaxValue,
      IsLocal: false,
      Kind: Method,
      Name: System.Numerics.IMinMaxValue<System.Int32>.get_MaxValue,
      ParentId: T:System.Int32,
      Type: {
        Id: T:System.Int32,
        IsNullable: false
      }
    },
    Id: P:System.Int32.System#Numerics#IMinMaxValue{System#Int32}#MaxValue,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IMinMaxValue<System.Int32>.MaxValue,
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Int32.System#Numerics#IMinMaxValue{System#Int32}#MinValue: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Int32.System#Numerics#IMinMaxValue{System#Int32}#MinValue,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IMinMaxValue{System#Int32}#get_MinValue,
      Id: M:System.Int32.System#Numerics#IMinMaxValue{System#Int32}#get_MinValue,
      IsLocal: false,
      Kind: Method,
      Name: System.Numerics.IMinMaxValue<System.Int32>.get_MinValue,
      ParentId: T:System.Int32,
      Type: {
        Id: T:System.Int32,
        IsNullable: false
      }
    },
    Id: P:System.Int32.System#Numerics#IMinMaxValue{System#Int32}#MinValue,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IMinMaxValue<System.Int32>.MinValue,
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Int32.System#Numerics#IMultiplicativeIdentity{System#Int32,System#Int32}#MultiplicativeIdentity: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Int32.System#Numerics#IMultiplicativeIdentity{System#Int32,System#Int32}#MultiplicativeIdentity,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#IMultiplicativeIdentity{System#Int32,System#Int32}#get_MultiplicativeIdentity,
      Id: M:System.Int32.System#Numerics#IMultiplicativeIdentity{System#Int32,System#Int32}#get_MultiplicativeIdentity,
      IsLocal: false,
      Kind: Method,
      Name: System.Numerics.IMultiplicativeIdentity<System.Int32,System.Int32>.get_MultiplicativeIdentity,
      ParentId: T:System.Int32,
      Type: {
        Id: T:System.Int32,
        IsNullable: false
      }
    },
    Id: P:System.Int32.System#Numerics#IMultiplicativeIdentity{System#Int32,System#Int32}#MultiplicativeIdentity,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.IMultiplicativeIdentity<System.Int32,System.Int32>.MultiplicativeIdentity,
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Int32.System#Numerics#INumberBase{System#Int32}#One: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Int32.System#Numerics#INumberBase{System#Int32}#One,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#get_One,
      Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#get_One,
      IsLocal: false,
      Kind: Method,
      Name: System.Numerics.INumberBase<System.Int32>.get_One,
      ParentId: T:System.Int32,
      Type: {
        Id: T:System.Int32,
        IsNullable: false
      }
    },
    Id: P:System.Int32.System#Numerics#INumberBase{System#Int32}#One,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Int32>.One,
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Int32.System#Numerics#INumberBase{System#Int32}#Radix: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Int32.System#Numerics#INumberBase{System#Int32}#Radix,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#get_Radix,
      Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#get_Radix,
      IsLocal: false,
      Kind: Method,
      Name: System.Numerics.INumberBase<System.Int32>.get_Radix,
      ParentId: T:System.Int32,
      Type: {
        Id: T:System.Int32,
        IsNullable: false
      }
    },
    Id: P:System.Int32.System#Numerics#INumberBase{System#Int32}#Radix,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Int32>.Radix,
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Int32.System#Numerics#INumberBase{System#Int32}#Zero: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Int32.System#Numerics#INumberBase{System#Int32}#Zero,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#INumberBase{System#Int32}#get_Zero,
      Id: M:System.Int32.System#Numerics#INumberBase{System#Int32}#get_Zero,
      IsLocal: false,
      Kind: Method,
      Name: System.Numerics.INumberBase<System.Int32>.get_Zero,
      ParentId: T:System.Int32,
      Type: {
        Id: T:System.Int32,
        IsNullable: false
      }
    },
    Id: P:System.Int32.System#Numerics#INumberBase{System#Int32}#Zero,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.INumberBase<System.Int32>.Zero,
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Int32.System#Numerics#ISignedNumber{System#Int32}#NegativeOne: {
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Int32.System#Numerics#ISignedNumber{System#Int32}#NegativeOne,
    Getter: {
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Int32.System#Numerics#ISignedNumber{System#Int32}#get_NegativeOne,
      Id: M:System.Int32.System#Numerics#ISignedNumber{System#Int32}#get_NegativeOne,
      IsLocal: false,
      Kind: Method,
      Name: System.Numerics.ISignedNumber<System.Int32>.get_NegativeOne,
      ParentId: T:System.Int32,
      Type: {
        Id: T:System.Int32,
        IsNullable: false
      }
    },
    Id: P:System.Int32.System#Numerics#ISignedNumber{System#Int32}#NegativeOne,
    Kind: ExplicitProperty,
    Modifiers: [
      Static
    ],
    Name: System.Numerics.ISignedNumber<System.Int32>.NegativeOne,
    ParentId: T:System.Int32,
    Type: {
      Id: T:System.Int32,
      IsNullable: false
    }
  }
}