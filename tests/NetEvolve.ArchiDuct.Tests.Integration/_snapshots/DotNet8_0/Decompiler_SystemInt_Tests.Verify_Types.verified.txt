{
  System.Private.CoreLib, Version=8.0.0.0, T:System.Int32: {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.TypeForwardedFromAttribute,
        Id: T:System.Runtime.CompilerServices.TypeForwardedFromAttribute,
        Kind: Attribute,
        Name: TypeForwardedFromAttribute
      },
      {
        FullName: System.Runtime.CompilerServices.TypeForwardedFromAttribute,
        Id: T:System.Runtime.CompilerServices.TypeForwardedFromAttribute,
        Kind: Attribute,
        Name: TypeForwardedFromAttribute
      },
      {
        FullName: System.Runtime.CompilerServices.TypeForwardedFromAttribute,
        Id: T:System.Runtime.CompilerServices.TypeForwardedFromAttribute,
        Kind: Attribute,
        Name: TypeForwardedFromAttribute
      },
      {
        FullName: System.Runtime.InteropServices.ClassInterfaceAttribute,
        Id: T:System.Runtime.InteropServices.ClassInterfaceAttribute,
        Kind: Attribute,
        Name: ClassInterfaceAttribute
      },
      {
        FullName: System.Runtime.InteropServices.ComVisibleAttribute,
        Id: T:System.Runtime.InteropServices.ComVisibleAttribute,
        Kind: Attribute,
        Name: ComVisibleAttribute
      },
      {
        FullName: System.SerializableAttribute,
        Id: T:System.SerializableAttribute,
        Kind: Attribute,
        Name: SerializableAttribute
      },
      {
        FullName: System.SerializableAttribute,
        Id: T:System.SerializableAttribute,
        Kind: Attribute,
        Name: SerializableAttribute
      },
      {
        FullName: System.SerializableAttribute,
        Id: T:System.SerializableAttribute,
        Kind: Attribute,
        Name: SerializableAttribute
      }
    ],
    BaseTypes: [
      T:System.ValueType,
      T:System.Object
    ],
    FullName: System.Private.CoreLib, Version=8.0.0.0, T:System.Int32,
    Id: T:System.Int32,
    Implementations: [
      T:System.IBinaryIntegerParseAndFormatInfo`1,
      T:System.Numerics.ISignedNumber`1,
      T:System.Numerics.IMinMaxValue`1,
      T:System.Numerics.IBinaryInteger`1,
      T:System.Numerics.IShiftOperators`3,
      T:System.Numerics.IBinaryNumber`1,
      T:System.Numerics.INumber`1,
      T:System.Numerics.INumberBase`1,
      T:System.IUtf8SpanParsable`1,
      T:System.IUtf8SpanFormattable,
      T:System.Numerics.IUnaryNegationOperators`2,
      T:System.Numerics.IUnaryPlusOperators`2,
      T:System.Numerics.ISubtractionOperators`3,
      T:System.ISpanParsable`1,
      T:System.IParsable`1,
      T:System.Numerics.IMultiplyOperators`3,
      T:System.Numerics.IMultiplicativeIdentity`2,
      T:System.Numerics.IIncrementOperators`1,
      T:System.Numerics.IDivisionOperators`3,
      T:System.Numerics.IDecrementOperators`1,
      T:System.Numerics.IAdditiveIdentity`2,
      T:System.Numerics.IAdditionOperators`3,
      T:System.Numerics.IModulusOperators`3,
      T:System.Numerics.IComparisonOperators`3,
      T:System.Numerics.IEqualityOperators`3,
      T:System.Numerics.IBitwiseOperators`3,
      T:System.IEquatable`1,
      T:System.IComparable`1,
      T:System.ISpanFormattable,
      T:System.IFormattable,
      T:System.IConvertible,
      T:System.IComparable
    ],
    InheritedMembers: [
      M:System.ValueType.Equals(System.Object),
      M:System.ValueType.CanCompareBits(System.Object),
      M:System.ValueType.GetHashCode,
      M:System.ValueType.ToString,
      M:System.Object.GetType,
      M:System.Object.MemberwiseClone,
      M:System.Object.Finalize,
      M:System.Object.ToString,
      M:System.Object.Equals(System.Object),
      M:System.Object.Equals(System.Object,System.Object),
      M:System.Object.ReferenceEquals(System.Object,System.Object),
      M:System.Object.GetHashCode
    ],
    IsNested: false,
    IsRecord: false,
    Kind: Struct,
    Members: [
      F:System.Int32.m_value,
      F:System.Int32.MaxValue,
      F:System.Int32.MinValue,
      M:System.Int32.CompareTo(System.Object),
      M:System.Int32.CompareTo(System.Int32),
      M:System.Int32.Equals(System.Object),
      M:System.Int32.Equals(System.Int32),
      M:System.Int32.GetHashCode,
      M:System.Int32.ToString,
      M:System.Int32.ToString(System.String),
      M:System.Int32.ToString(System.IFormatProvider),
      M:System.Int32.ToString(System.String,System.IFormatProvider),
      M:System.Int32.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider),
      M:System.Int32.TryFormat(System.Span{System.Byte},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider),
      M:System.Int32.Parse(System.String),
      M:System.Int32.Parse(System.String,System.Globalization.NumberStyles),
      M:System.Int32.Parse(System.String,System.IFormatProvider),
      M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Int32.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Int32.TryParse(System.String,System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.Int32@),
      M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@),
      M:System.Int32.GetTypeCode,
      M:System.Int32.System#IConvertible#ToBoolean(System.IFormatProvider),
      M:System.Int32.System#IConvertible#ToChar(System.IFormatProvider),
      M:System.Int32.System#IConvertible#ToSByte(System.IFormatProvider),
      M:System.Int32.System#IConvertible#ToByte(System.IFormatProvider),
      M:System.Int32.System#IConvertible#ToInt16(System.IFormatProvider),
      M:System.Int32.System#IConvertible#ToUInt16(System.IFormatProvider),
      M:System.Int32.System#IConvertible#ToInt32(System.IFormatProvider),
      M:System.Int32.System#IConvertible#ToUInt32(System.IFormatProvider),
      M:System.Int32.System#IConvertible#ToInt64(System.IFormatProvider),
      M:System.Int32.System#IConvertible#ToUInt64(System.IFormatProvider),
      M:System.Int32.System#IConvertible#ToSingle(System.IFormatProvider),
      M:System.Int32.System#IConvertible#ToDouble(System.IFormatProvider),
      M:System.Int32.System#IConvertible#ToDecimal(System.IFormatProvider),
      M:System.Int32.System#IConvertible#ToDateTime(System.IFormatProvider),
      M:System.Int32.System#IConvertible#ToType(System.Type,System.IFormatProvider),
      M:System.Int32.System#Numerics#IAdditionOperators{System#Int32,System#Int32,System#Int32}#op_Addition(System.Int32,System.Int32),
      M:System.Int32.System#Numerics#IAdditionOperators{System#Int32,System#Int32,System#Int32}#op_CheckedAddition(System.Int32,System.Int32),
      M:System.Int32.DivRem(System.Int32,System.Int32),
      M:System.Int32.LeadingZeroCount(System.Int32),
      M:System.Int32.PopCount(System.Int32),
      M:System.Int32.RotateLeft(System.Int32,System.Int32),
      M:System.Int32.RotateRight(System.Int32,System.Int32),
      M:System.Int32.TrailingZeroCount(System.Int32),
      M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryReadBigEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Int32@),
      M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryReadLittleEndian(System.ReadOnlySpan{System.Byte},System.Boolean,System.Int32@),
      M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#GetShortestBitLength,
      M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#GetByteCount,
      M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryWriteBigEndian(System.Span{System.Byte},System.Int32@),
      M:System.Int32.System#Numerics#IBinaryInteger{System#Int32}#TryWriteLittleEndian(System.Span{System.Byte},System.Int32@),
      M:System.Int32.IsPow2(System.Int32),
      M:System.Int32.Log2(System.Int32),
      M:System.Int32.System#Numerics#IBitwiseOperators{System#Int32,System#Int32,System#Int32}#op_BitwiseAnd(System.Int32,System.Int32),
      M:System.Int32.System#Numerics#IBitwiseOperators{System#Int32,System#Int32,System#Int32}#op_BitwiseOr(System.Int32,System.Int32),
      M:System.Int32.System#Numerics#IBitwiseOperators{System#Int32,System#Int32,System#Int32}#op_ExclusiveOr(System.Int32,System.Int32),
      M:System.Int32.System#Numerics#IBitwiseOperators{System#Int32,System#Int32,System#Int32}#op_OnesComplement(System.Int32),
      M:System.Int32.System#Numerics#IComparisonOperators{System#Int32,System#Int32,System#Boolean}#op_LessThan(System.Int32,System.Int32),
      M:System.Int32.System#Numerics#IComparisonOperators{System#Int32,System#Int32,System#Boolean}#op_LessThanOrEqual(System.Int32,System.Int32),
      M:System.Int32.System#Numerics#IComparisonOperators{System#Int32,System#Int32,System#Boolean}#op_GreaterThan(System.Int32,System.Int32),
      M:System.Int32.System#Numerics#IComparisonOperators{System#Int32,System#Int32,System#Boolean}#op_GreaterThanOrEqual(System.Int32,System.Int32),
      M:System.Int32.System#Numerics#IDecrementOperators{System#Int32}#op_Decrement(System.Int32),
      M:System.Int32.System#Numerics#IDecrementOperators{System#Int32}#op_CheckedDecrement(System.Int32),
      M:System.Int32.System#Numerics#IDivisionOperators{System#Int32,System#Int32,System#Int32}#op_Division(System.Int32,System.Int32),
      M:System.Int32.System#Numerics#IEqualityOperators{System#Int32,System#Int32,System#Boolean}#op_Equality(System.Int32,System.Int32),
      M:System.Int32.System#Numerics#IEqualityOperators{System#Int32,System#Int32,System#Boolean}#op_Inequality(System.Int32,System.Int32),
      M:System.Int32.System#Numerics#IIncrementOperators{System#Int32}#op_Increment(System.Int32),
      M:System.Int32.System#Numerics#IIncrementOperators{System#Int32}#op_CheckedIncrement(System.Int32),
      M:System.Int32.System#Numerics#IModulusOperators{System#Int32,System#Int32,System#Int32}#op_Modulus(System.Int32,System.Int32),
      M:System.Int32.System#Numerics#IMultiplyOperators{System#Int32,System#Int32,System#Int32}#op_Multiply(System.Int32,System.Int32),
      M:System.Int32.System#Numerics#IMultiplyOperators{System#Int32,System#Int32,System#Int32}#op_CheckedMultiply(System.Int32,System.Int32),
      M:System.Int32.Clamp(System.Int32,System.Int32,System.Int32),
      M:System.Int32.CopySign(System.Int32,System.Int32),
      M:System.Int32.Max(System.Int32,System.Int32),
      M:System.Int32.System#Numerics#INumber{System#Int32}#MaxNumber(System.Int32,System.Int32),
      M:System.Int32.Min(System.Int32,System.Int32),
      M:System.Int32.System#Numerics#INumber{System#Int32}#MinNumber(System.Int32,System.Int32),
      M:System.Int32.Sign(System.Int32),
      M:System.Int32.Abs(System.Int32),
      M:System.Int32.CreateChecked``1(``0),
      M:System.Int32.CreateSaturating``1(``0),
      M:System.Int32.CreateTruncating``1(``0),
      M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsCanonical(System.Int32),
      M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsComplexNumber(System.Int32),
      M:System.Int32.IsEvenInteger(System.Int32),
      M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsFinite(System.Int32),
      M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsImaginaryNumber(System.Int32),
      M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsInfinity(System.Int32),
      M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsInteger(System.Int32),
      M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsNaN(System.Int32),
      M:System.Int32.IsNegative(System.Int32),
      M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsNegativeInfinity(System.Int32),
      M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsNormal(System.Int32),
      M:System.Int32.IsOddInteger(System.Int32),
      M:System.Int32.IsPositive(System.Int32),
      M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsPositiveInfinity(System.Int32),
      M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsRealNumber(System.Int32),
      M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsSubnormal(System.Int32),
      M:System.Int32.System#Numerics#INumberBase{System#Int32}#IsZero(System.Int32),
      M:System.Int32.MaxMagnitude(System.Int32,System.Int32),
      M:System.Int32.System#Numerics#INumberBase{System#Int32}#MaxMagnitudeNumber(System.Int32,System.Int32),
      M:System.Int32.MinMagnitude(System.Int32,System.Int32),
      M:System.Int32.System#Numerics#INumberBase{System#Int32}#MinMagnitudeNumber(System.Int32,System.Int32),
      M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertFromChecked``1(``0,System.Int32@),
      M:System.Int32.TryConvertFromChecked``1(``0,System.Int32@),
      M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertFromSaturating``1(``0,System.Int32@),
      M:System.Int32.TryConvertFromSaturating``1(``0,System.Int32@),
      M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertFromTruncating``1(``0,System.Int32@),
      M:System.Int32.TryConvertFromTruncating``1(``0,System.Int32@),
      M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertToChecked``1(System.Int32,``0@),
      M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertToSaturating``1(System.Int32,``0@),
      M:System.Int32.System#Numerics#INumberBase{System#Int32}#TryConvertToTruncating``1(System.Int32,``0@),
      M:System.Int32.TryParse(System.String,System.IFormatProvider,System.Int32@),
      M:System.Int32.System#Numerics#IShiftOperators{System#Int32,System#Int32,System#Int32}#op_LeftShift(System.Int32,System.Int32),
      M:System.Int32.System#Numerics#IShiftOperators{System#Int32,System#Int32,System#Int32}#op_RightShift(System.Int32,System.Int32),
      M:System.Int32.System#Numerics#IShiftOperators{System#Int32,System#Int32,System#Int32}#op_UnsignedRightShift(System.Int32,System.Int32),
      M:System.Int32.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Int32@),
      M:System.Int32.System#Numerics#ISubtractionOperators{System#Int32,System#Int32,System#Int32}#op_Subtraction(System.Int32,System.Int32),
      M:System.Int32.System#Numerics#ISubtractionOperators{System#Int32,System#Int32,System#Int32}#op_CheckedSubtraction(System.Int32,System.Int32),
      M:System.Int32.System#Numerics#IUnaryNegationOperators{System#Int32,System#Int32}#op_UnaryNegation(System.Int32),
      M:System.Int32.System#Numerics#IUnaryNegationOperators{System#Int32,System#Int32}#op_CheckedUnaryNegation(System.Int32),
      M:System.Int32.System#Numerics#IUnaryPlusOperators{System#Int32,System#Int32}#op_UnaryPlus(System.Int32),
      M:System.Int32.Parse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@),
      M:System.Int32.Parse(System.ReadOnlySpan{System.Byte},System.IFormatProvider),
      M:System.Int32.TryParse(System.ReadOnlySpan{System.Byte},System.IFormatProvider,System.Int32@),
      M:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#IsGreaterThanAsUnsigned(System.Int32,System.Int32),
      M:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#MultiplyBy10(System.Int32),
      M:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#MultiplyBy16(System.Int32),
      M:System.Int32.#ctor,
      P:System.Int32.System#Numerics#IAdditiveIdentity{System#Int32,System#Int32}#AdditiveIdentity,
      P:System.Int32.System#Numerics#IBinaryNumber{System#Int32}#AllBitsSet,
      P:System.Int32.System#Numerics#IMinMaxValue{System#Int32}#MinValue,
      P:System.Int32.System#Numerics#IMinMaxValue{System#Int32}#MaxValue,
      P:System.Int32.System#Numerics#IMultiplicativeIdentity{System#Int32,System#Int32}#MultiplicativeIdentity,
      P:System.Int32.System#Numerics#INumberBase{System#Int32}#One,
      P:System.Int32.System#Numerics#INumberBase{System#Int32}#Radix,
      P:System.Int32.System#Numerics#INumberBase{System#Int32}#Zero,
      P:System.Int32.System#Numerics#ISignedNumber{System#Int32}#NegativeOne,
      P:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#IsSigned,
      P:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#MaxDigitCount,
      P:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#MaxHexDigitCount,
      P:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#MaxValueDiv10,
      P:System.Int32.System#IBinaryIntegerParseAndFormatInfo{System#Int32}#OverflowMessage
    ],
    Modifiers: [
      ReadOnly
    ],
    Name: Int32,
    NamespaceId: N:System,
    ParentId: N:System
  }
}