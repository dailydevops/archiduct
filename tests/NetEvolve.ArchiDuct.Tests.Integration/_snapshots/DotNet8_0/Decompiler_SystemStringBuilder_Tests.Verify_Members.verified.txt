{
  System.Private.CoreLib, Version=x.x.x.x, F:System.Text.StringBuilder.AppendInterpolatedStringHandler._hasCustomFormatter: {
    Accessibility: Private,
    FullName: System.Private.CoreLib, Version=x.x.x.x, F:System.Text.StringBuilder.AppendInterpolatedStringHandler._hasCustomFormatter,
    Id: F:System.Text.StringBuilder.AppendInterpolatedStringHandler._hasCustomFormatter,
    Kind: Field,
    Modifiers: [
      ReadOnly
    ],
    Name: _hasCustomFormatter,
    ParentId: T:System.Text.StringBuilder.AppendInterpolatedStringHandler,
    ReturnType: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, F:System.Text.StringBuilder.AppendInterpolatedStringHandler._provider: {
    Accessibility: Private,
    FullName: System.Private.CoreLib, Version=x.x.x.x, F:System.Text.StringBuilder.AppendInterpolatedStringHandler._provider,
    Id: F:System.Text.StringBuilder.AppendInterpolatedStringHandler._provider,
    Kind: Field,
    Modifiers: [
      ReadOnly
    ],
    Name: _provider,
    ParentId: T:System.Text.StringBuilder.AppendInterpolatedStringHandler,
    ReturnType: {
      Id: T:System.IFormatProvider,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, F:System.Text.StringBuilder.AppendInterpolatedStringHandler._stringBuilder: {
    Accessibility: Internal,
    FullName: System.Private.CoreLib, Version=x.x.x.x, F:System.Text.StringBuilder.AppendInterpolatedStringHandler._stringBuilder,
    Id: F:System.Text.StringBuilder.AppendInterpolatedStringHandler._stringBuilder,
    Kind: Field,
    Modifiers: [
      ReadOnly
    ],
    Name: _stringBuilder,
    ParentId: T:System.Text.StringBuilder.AppendInterpolatedStringHandler,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, F:System.Text.StringBuilder.ChunkEnumerator._currentChunk: {
    Accessibility: Private,
    FullName: System.Private.CoreLib, Version=x.x.x.x, F:System.Text.StringBuilder.ChunkEnumerator._currentChunk,
    Id: F:System.Text.StringBuilder.ChunkEnumerator._currentChunk,
    Kind: Field,
    Name: _currentChunk,
    ParentId: T:System.Text.StringBuilder.ChunkEnumerator,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, F:System.Text.StringBuilder.ChunkEnumerator._firstChunk: {
    Accessibility: Private,
    FullName: System.Private.CoreLib, Version=x.x.x.x, F:System.Text.StringBuilder.ChunkEnumerator._firstChunk,
    Id: F:System.Text.StringBuilder.ChunkEnumerator._firstChunk,
    Kind: Field,
    Modifiers: [
      ReadOnly
    ],
    Name: _firstChunk,
    ParentId: T:System.Text.StringBuilder.ChunkEnumerator,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, F:System.Text.StringBuilder.ChunkEnumerator._manyChunks: {
    Accessibility: Private,
    FullName: System.Private.CoreLib, Version=x.x.x.x, F:System.Text.StringBuilder.ChunkEnumerator._manyChunks,
    Id: F:System.Text.StringBuilder.ChunkEnumerator._manyChunks,
    Kind: Field,
    Modifiers: [
      ReadOnly
    ],
    Name: _manyChunks,
    ParentId: T:System.Text.StringBuilder.ChunkEnumerator,
    ReturnType: {
      Id: T:System.Text.StringBuilder+ChunkEnumerator+ManyChunkInfo,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, F:System.Text.StringBuilder.ChunkEnumerator.ManyChunkInfo._chunkPos: {
    Accessibility: Private,
    FullName: System.Private.CoreLib, Version=x.x.x.x, F:System.Text.StringBuilder.ChunkEnumerator.ManyChunkInfo._chunkPos,
    Id: F:System.Text.StringBuilder.ChunkEnumerator.ManyChunkInfo._chunkPos,
    Kind: Field,
    Name: _chunkPos,
    ParentId: T:System.Text.StringBuilder.ChunkEnumerator.ManyChunkInfo,
    ReturnType: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, F:System.Text.StringBuilder.ChunkEnumerator.ManyChunkInfo._chunks: {
    Accessibility: Private,
    FullName: System.Private.CoreLib, Version=x.x.x.x, F:System.Text.StringBuilder.ChunkEnumerator.ManyChunkInfo._chunks,
    Id: F:System.Text.StringBuilder.ChunkEnumerator.ManyChunkInfo._chunks,
    Kind: Field,
    Modifiers: [
      ReadOnly
    ],
    Name: _chunks,
    ParentId: T:System.Text.StringBuilder.ChunkEnumerator.ManyChunkInfo,
    ReturnType: {
      Id: T:System.Text.StringBuilder[],
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, F:System.Text.StringBuilder.m_ChunkChars: {
    Accessibility: Internal,
    FullName: System.Private.CoreLib, Version=x.x.x.x, F:System.Text.StringBuilder.m_ChunkChars,
    Id: F:System.Text.StringBuilder.m_ChunkChars,
    Kind: Field,
    Name: m_ChunkChars,
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Char[],
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, F:System.Text.StringBuilder.m_ChunkLength: {
    Accessibility: Internal,
    FullName: System.Private.CoreLib, Version=x.x.x.x, F:System.Text.StringBuilder.m_ChunkLength,
    Id: F:System.Text.StringBuilder.m_ChunkLength,
    Kind: Field,
    Name: m_ChunkLength,
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, F:System.Text.StringBuilder.m_ChunkOffset: {
    Accessibility: Internal,
    FullName: System.Private.CoreLib, Version=x.x.x.x, F:System.Text.StringBuilder.m_ChunkOffset,
    Id: F:System.Text.StringBuilder.m_ChunkOffset,
    Kind: Field,
    Name: m_ChunkOffset,
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, F:System.Text.StringBuilder.m_ChunkPrevious: {
    Accessibility: Internal,
    FullName: System.Private.CoreLib, Version=x.x.x.x, F:System.Text.StringBuilder.m_ChunkPrevious,
    Id: F:System.Text.StringBuilder.m_ChunkPrevious,
    Kind: Field,
    Name: m_ChunkPrevious,
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, F:System.Text.StringBuilder.m_MaxCapacity: {
    Accessibility: Internal,
    FullName: System.Private.CoreLib, Version=x.x.x.x, F:System.Text.StringBuilder.m_MaxCapacity,
    Id: F:System.Text.StringBuilder.m_MaxCapacity,
    Kind: Field,
    Name: m_MaxCapacity,
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.#ctor: {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.#ctor,
    Id: M:System.Text.StringBuilder.#ctor,
    Kind: Constructor,
    Name: .ctor,
    OverloadedMembers: [
      M:System.Text.StringBuilder.#ctor(System.Int32),
      M:System.Text.StringBuilder.#ctor(System.String),
      M:System.Text.StringBuilder.#ctor(System.String,System.Int32),
      M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32),
      M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32),
      M:System.Text.StringBuilder.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext),
      M:System.Text.StringBuilder.#ctor(System.Text.StringBuilder),
      M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32,System.Text.StringBuilder)
    ],
    ParentId: T:System.Text.StringBuilder
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32,System.Text.StringBuilder): {
    Accessibility: Private,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32,System.Text.StringBuilder),
    Id: M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32,System.Text.StringBuilder),
    Kind: Constructor,
    Name: .ctor,
    OverloadedMembers: [
      M:System.Text.StringBuilder.#ctor,
      M:System.Text.StringBuilder.#ctor(System.Int32),
      M:System.Text.StringBuilder.#ctor(System.String),
      M:System.Text.StringBuilder.#ctor(System.String,System.Int32),
      M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32),
      M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32),
      M:System.Text.StringBuilder.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext),
      M:System.Text.StringBuilder.#ctor(System.Text.StringBuilder)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32,System.Text.StringBuilder).size,
        Id: M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32,System.Text.StringBuilder).size,
        Kind: Parameter,
        Name: size,
        ParentId: M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32,System.Text.StringBuilder),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32,System.Text.StringBuilder).maxCapacity,
        Id: M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32,System.Text.StringBuilder).maxCapacity,
        Kind: Parameter,
        Name: maxCapacity,
        ParentId: M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32,System.Text.StringBuilder),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32,System.Text.StringBuilder).previousBlock,
        Id: M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32,System.Text.StringBuilder).previousBlock,
        Kind: Parameter,
        Name: previousBlock,
        ParentId: M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32,System.Text.StringBuilder),
        Type: {
          Id: T:System.Text.StringBuilder,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32),
    Id: M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32),
    Kind: Constructor,
    Name: .ctor,
    OverloadedMembers: [
      M:System.Text.StringBuilder.#ctor,
      M:System.Text.StringBuilder.#ctor(System.Int32),
      M:System.Text.StringBuilder.#ctor(System.String),
      M:System.Text.StringBuilder.#ctor(System.String,System.Int32),
      M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32),
      M:System.Text.StringBuilder.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext),
      M:System.Text.StringBuilder.#ctor(System.Text.StringBuilder),
      M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32,System.Text.StringBuilder)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32).capacity,
        Id: M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32).capacity,
        Kind: Parameter,
        Name: capacity,
        ParentId: M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32).maxCapacity,
        Id: M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32).maxCapacity,
        Kind: Parameter,
        Name: maxCapacity,
        ParentId: M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.#ctor(System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.#ctor(System.Int32),
    Id: M:System.Text.StringBuilder.#ctor(System.Int32),
    Kind: Constructor,
    Name: .ctor,
    OverloadedMembers: [
      M:System.Text.StringBuilder.#ctor,
      M:System.Text.StringBuilder.#ctor(System.String),
      M:System.Text.StringBuilder.#ctor(System.String,System.Int32),
      M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32),
      M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32),
      M:System.Text.StringBuilder.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext),
      M:System.Text.StringBuilder.#ctor(System.Text.StringBuilder),
      M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32,System.Text.StringBuilder)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.#ctor(System.Int32).capacity,
        Id: M:System.Text.StringBuilder.#ctor(System.Int32).capacity,
        Kind: Parameter,
        Name: capacity,
        ParentId: M:System.Text.StringBuilder.#ctor(System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext): {
    Accessibility: Private,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext),
    Id: M:System.Text.StringBuilder.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext),
    Kind: Constructor,
    Name: .ctor,
    OverloadedMembers: [
      M:System.Text.StringBuilder.#ctor,
      M:System.Text.StringBuilder.#ctor(System.Int32),
      M:System.Text.StringBuilder.#ctor(System.String),
      M:System.Text.StringBuilder.#ctor(System.String,System.Int32),
      M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32),
      M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32),
      M:System.Text.StringBuilder.#ctor(System.Text.StringBuilder),
      M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32,System.Text.StringBuilder)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext).info,
        Id: M:System.Text.StringBuilder.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext).info,
        Kind: Parameter,
        Name: info,
        ParentId: M:System.Text.StringBuilder.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext),
        Type: {
          Id: T:System.Runtime.Serialization.SerializationInfo,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext).context,
        Id: M:System.Text.StringBuilder.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext).context,
        Kind: Parameter,
        Name: context,
        ParentId: M:System.Text.StringBuilder.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext),
        Type: {
          Id: T:System.Runtime.Serialization.StreamingContext,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32),
    Id: M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32),
    Kind: Constructor,
    Name: .ctor,
    OverloadedMembers: [
      M:System.Text.StringBuilder.#ctor,
      M:System.Text.StringBuilder.#ctor(System.Int32),
      M:System.Text.StringBuilder.#ctor(System.String),
      M:System.Text.StringBuilder.#ctor(System.String,System.Int32),
      M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32),
      M:System.Text.StringBuilder.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext),
      M:System.Text.StringBuilder.#ctor(System.Text.StringBuilder),
      M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32,System.Text.StringBuilder)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32).value,
        Id: M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32),
        Type: {
          Id: T:System.String,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32).startIndex,
        Id: M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32).startIndex,
        Kind: Parameter,
        Name: startIndex,
        ParentId: M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32).length,
        Id: M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32).length,
        Kind: Parameter,
        Name: length,
        ParentId: M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32).capacity,
        Id: M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32).capacity,
        Kind: Parameter,
        Name: capacity,
        ParentId: M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.#ctor(System.String,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.#ctor(System.String,System.Int32),
    Id: M:System.Text.StringBuilder.#ctor(System.String,System.Int32),
    Kind: Constructor,
    Name: .ctor,
    OverloadedMembers: [
      M:System.Text.StringBuilder.#ctor,
      M:System.Text.StringBuilder.#ctor(System.Int32),
      M:System.Text.StringBuilder.#ctor(System.String),
      M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32),
      M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32),
      M:System.Text.StringBuilder.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext),
      M:System.Text.StringBuilder.#ctor(System.Text.StringBuilder),
      M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32,System.Text.StringBuilder)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.#ctor(System.String,System.Int32).value,
        Id: M:System.Text.StringBuilder.#ctor(System.String,System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.#ctor(System.String,System.Int32),
        Type: {
          Id: T:System.String,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.#ctor(System.String,System.Int32).capacity,
        Id: M:System.Text.StringBuilder.#ctor(System.String,System.Int32).capacity,
        Kind: Parameter,
        Name: capacity,
        ParentId: M:System.Text.StringBuilder.#ctor(System.String,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.#ctor(System.String): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.#ctor(System.String),
    Id: M:System.Text.StringBuilder.#ctor(System.String),
    Kind: Constructor,
    Name: .ctor,
    OverloadedMembers: [
      M:System.Text.StringBuilder.#ctor,
      M:System.Text.StringBuilder.#ctor(System.Int32),
      M:System.Text.StringBuilder.#ctor(System.String,System.Int32),
      M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32),
      M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32),
      M:System.Text.StringBuilder.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext),
      M:System.Text.StringBuilder.#ctor(System.Text.StringBuilder),
      M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32,System.Text.StringBuilder)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.#ctor(System.String).value,
        Id: M:System.Text.StringBuilder.#ctor(System.String).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.#ctor(System.String),
        Type: {
          Id: T:System.String,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.#ctor(System.Text.StringBuilder): {
    Accessibility: Private,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.#ctor(System.Text.StringBuilder),
    Id: M:System.Text.StringBuilder.#ctor(System.Text.StringBuilder),
    Kind: Constructor,
    Name: .ctor,
    OverloadedMembers: [
      M:System.Text.StringBuilder.#ctor,
      M:System.Text.StringBuilder.#ctor(System.Int32),
      M:System.Text.StringBuilder.#ctor(System.String),
      M:System.Text.StringBuilder.#ctor(System.String,System.Int32),
      M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32),
      M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32),
      M:System.Text.StringBuilder.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext),
      M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32,System.Text.StringBuilder)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.#ctor(System.Text.StringBuilder).from,
        Id: M:System.Text.StringBuilder.#ctor(System.Text.StringBuilder).from,
        Kind: Parameter,
        Name: from,
        ParentId: M:System.Text.StringBuilder.#ctor(System.Text.StringBuilder),
        Type: {
          Id: T:System.Text.StringBuilder,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Boolean): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Boolean),
    Id: M:System.Text.StringBuilder.Append(System.Boolean),
    IsLocal: false,
    Kind: Method,
    Name: Append,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Append(System.Char,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.String),
      M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char),
      M:System.Text.StringBuilder.Append(System.SByte),
      M:System.Text.StringBuilder.Append(System.Byte),
      M:System.Text.StringBuilder.Append(System.Int16),
      M:System.Text.StringBuilder.Append(System.Int32),
      M:System.Text.StringBuilder.Append(System.Int64),
      M:System.Text.StringBuilder.Append(System.Single),
      M:System.Text.StringBuilder.Append(System.Double),
      M:System.Text.StringBuilder.Append(System.Decimal),
      M:System.Text.StringBuilder.Append(System.UInt16),
      M:System.Text.StringBuilder.Append(System.UInt32),
      M:System.Text.StringBuilder.Append(System.UInt64),
      M:System.Text.StringBuilder.Append(System.Object),
      M:System.Text.StringBuilder.Append(System.Char[]),
      M:System.Text.StringBuilder.Append(System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.Append(System.ReadOnlyMemory{System.Char}),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.Char*,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Boolean).value,
        Id: M:System.Text.StringBuilder.Append(System.Boolean).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.Append(System.Boolean),
        Type: {
          Id: T:System.Boolean,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Byte): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Byte),
    Id: M:System.Text.StringBuilder.Append(System.Byte),
    IsLocal: false,
    Kind: Method,
    Name: Append,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Append(System.Char,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.String),
      M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Boolean),
      M:System.Text.StringBuilder.Append(System.Char),
      M:System.Text.StringBuilder.Append(System.SByte),
      M:System.Text.StringBuilder.Append(System.Int16),
      M:System.Text.StringBuilder.Append(System.Int32),
      M:System.Text.StringBuilder.Append(System.Int64),
      M:System.Text.StringBuilder.Append(System.Single),
      M:System.Text.StringBuilder.Append(System.Double),
      M:System.Text.StringBuilder.Append(System.Decimal),
      M:System.Text.StringBuilder.Append(System.UInt16),
      M:System.Text.StringBuilder.Append(System.UInt32),
      M:System.Text.StringBuilder.Append(System.UInt64),
      M:System.Text.StringBuilder.Append(System.Object),
      M:System.Text.StringBuilder.Append(System.Char[]),
      M:System.Text.StringBuilder.Append(System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.Append(System.ReadOnlyMemory{System.Char}),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.Char*,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Byte).value,
        Id: M:System.Text.StringBuilder.Append(System.Byte).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.Append(System.Byte),
        Type: {
          Id: T:System.Byte,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Char,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Char,System.Int32),
    Id: M:System.Text.StringBuilder.Append(System.Char,System.Int32),
    IsLocal: false,
    Kind: Method,
    Name: Append,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.String),
      M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Boolean),
      M:System.Text.StringBuilder.Append(System.Char),
      M:System.Text.StringBuilder.Append(System.SByte),
      M:System.Text.StringBuilder.Append(System.Byte),
      M:System.Text.StringBuilder.Append(System.Int16),
      M:System.Text.StringBuilder.Append(System.Int32),
      M:System.Text.StringBuilder.Append(System.Int64),
      M:System.Text.StringBuilder.Append(System.Single),
      M:System.Text.StringBuilder.Append(System.Double),
      M:System.Text.StringBuilder.Append(System.Decimal),
      M:System.Text.StringBuilder.Append(System.UInt16),
      M:System.Text.StringBuilder.Append(System.UInt32),
      M:System.Text.StringBuilder.Append(System.UInt64),
      M:System.Text.StringBuilder.Append(System.Object),
      M:System.Text.StringBuilder.Append(System.Char[]),
      M:System.Text.StringBuilder.Append(System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.Append(System.ReadOnlyMemory{System.Char}),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.Char*,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Char,System.Int32).value,
        Id: M:System.Text.StringBuilder.Append(System.Char,System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.Append(System.Char,System.Int32),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Char,System.Int32).repeatCount,
        Id: M:System.Text.StringBuilder.Append(System.Char,System.Int32).repeatCount,
        Kind: Parameter,
        Name: repeatCount,
        ParentId: M:System.Text.StringBuilder.Append(System.Char,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Char): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Char),
    Id: M:System.Text.StringBuilder.Append(System.Char),
    IsLocal: false,
    Kind: Method,
    Name: Append,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Append(System.Char,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.String),
      M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Boolean),
      M:System.Text.StringBuilder.Append(System.SByte),
      M:System.Text.StringBuilder.Append(System.Byte),
      M:System.Text.StringBuilder.Append(System.Int16),
      M:System.Text.StringBuilder.Append(System.Int32),
      M:System.Text.StringBuilder.Append(System.Int64),
      M:System.Text.StringBuilder.Append(System.Single),
      M:System.Text.StringBuilder.Append(System.Double),
      M:System.Text.StringBuilder.Append(System.Decimal),
      M:System.Text.StringBuilder.Append(System.UInt16),
      M:System.Text.StringBuilder.Append(System.UInt32),
      M:System.Text.StringBuilder.Append(System.UInt64),
      M:System.Text.StringBuilder.Append(System.Object),
      M:System.Text.StringBuilder.Append(System.Char[]),
      M:System.Text.StringBuilder.Append(System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.Append(System.ReadOnlyMemory{System.Char}),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.Char*,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Char).value,
        Id: M:System.Text.StringBuilder.Append(System.Char).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.Append(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32),
    Id: M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32),
    IsLocal: false,
    Kind: Method,
    Name: Append,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Append(System.Char,System.Int32),
      M:System.Text.StringBuilder.Append(System.String),
      M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Boolean),
      M:System.Text.StringBuilder.Append(System.Char),
      M:System.Text.StringBuilder.Append(System.SByte),
      M:System.Text.StringBuilder.Append(System.Byte),
      M:System.Text.StringBuilder.Append(System.Int16),
      M:System.Text.StringBuilder.Append(System.Int32),
      M:System.Text.StringBuilder.Append(System.Int64),
      M:System.Text.StringBuilder.Append(System.Single),
      M:System.Text.StringBuilder.Append(System.Double),
      M:System.Text.StringBuilder.Append(System.Decimal),
      M:System.Text.StringBuilder.Append(System.UInt16),
      M:System.Text.StringBuilder.Append(System.UInt32),
      M:System.Text.StringBuilder.Append(System.UInt64),
      M:System.Text.StringBuilder.Append(System.Object),
      M:System.Text.StringBuilder.Append(System.Char[]),
      M:System.Text.StringBuilder.Append(System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.Append(System.ReadOnlyMemory{System.Char}),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.Char*,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32).value,
        Id: M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32),
        Type: {
          Id: T:System.Char[],
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32).startIndex,
        Id: M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32).startIndex,
        Kind: Parameter,
        Name: startIndex,
        ParentId: M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32).charCount,
        Id: M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32).charCount,
        Kind: Parameter,
        Name: charCount,
        ParentId: M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Char[]): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Char[]),
    Id: M:System.Text.StringBuilder.Append(System.Char[]),
    IsLocal: false,
    Kind: Method,
    Name: Append,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Append(System.Char,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.String),
      M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Boolean),
      M:System.Text.StringBuilder.Append(System.Char),
      M:System.Text.StringBuilder.Append(System.SByte),
      M:System.Text.StringBuilder.Append(System.Byte),
      M:System.Text.StringBuilder.Append(System.Int16),
      M:System.Text.StringBuilder.Append(System.Int32),
      M:System.Text.StringBuilder.Append(System.Int64),
      M:System.Text.StringBuilder.Append(System.Single),
      M:System.Text.StringBuilder.Append(System.Double),
      M:System.Text.StringBuilder.Append(System.Decimal),
      M:System.Text.StringBuilder.Append(System.UInt16),
      M:System.Text.StringBuilder.Append(System.UInt32),
      M:System.Text.StringBuilder.Append(System.UInt64),
      M:System.Text.StringBuilder.Append(System.Object),
      M:System.Text.StringBuilder.Append(System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.Append(System.ReadOnlyMemory{System.Char}),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.Char*,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Char[]).value,
        Id: M:System.Text.StringBuilder.Append(System.Char[]).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.Append(System.Char[]),
        Type: {
          Id: T:System.Char[],
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Char@,System.Int32): {
    Accessibility: Private,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Char@,System.Int32),
    Id: M:System.Text.StringBuilder.Append(System.Char@,System.Int32),
    IsLocal: false,
    Kind: Method,
    Name: Append,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Append(System.Char,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.String),
      M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Boolean),
      M:System.Text.StringBuilder.Append(System.Char),
      M:System.Text.StringBuilder.Append(System.SByte),
      M:System.Text.StringBuilder.Append(System.Byte),
      M:System.Text.StringBuilder.Append(System.Int16),
      M:System.Text.StringBuilder.Append(System.Int32),
      M:System.Text.StringBuilder.Append(System.Int64),
      M:System.Text.StringBuilder.Append(System.Single),
      M:System.Text.StringBuilder.Append(System.Double),
      M:System.Text.StringBuilder.Append(System.Decimal),
      M:System.Text.StringBuilder.Append(System.UInt16),
      M:System.Text.StringBuilder.Append(System.UInt32),
      M:System.Text.StringBuilder.Append(System.UInt64),
      M:System.Text.StringBuilder.Append(System.Object),
      M:System.Text.StringBuilder.Append(System.Char[]),
      M:System.Text.StringBuilder.Append(System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.Append(System.ReadOnlyMemory{System.Char}),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.Char*,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Char@,System.Int32).value,
        Id: M:System.Text.StringBuilder.Append(System.Char@,System.Int32).value,
        Kind: Parameter,
        Modifiers: [
          Ref
        ],
        Name: value,
        ParentId: M:System.Text.StringBuilder.Append(System.Char@,System.Int32),
        Type: {
          Id: T:System.Char&,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Char@,System.Int32).valueCount,
        Id: M:System.Text.StringBuilder.Append(System.Char@,System.Int32).valueCount,
        Kind: Parameter,
        Name: valueCount,
        ParentId: M:System.Text.StringBuilder.Append(System.Char@,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Void,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Char*,System.Int32): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.CLSCompliantAttribute,
        Id: T:System.CLSCompliantAttribute,
        Kind: Attribute,
        Name: CLSCompliantAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Char*,System.Int32),
    Id: M:System.Text.StringBuilder.Append(System.Char*,System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Unsafe
    ],
    Name: Append,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Append(System.Char,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.String),
      M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Boolean),
      M:System.Text.StringBuilder.Append(System.Char),
      M:System.Text.StringBuilder.Append(System.SByte),
      M:System.Text.StringBuilder.Append(System.Byte),
      M:System.Text.StringBuilder.Append(System.Int16),
      M:System.Text.StringBuilder.Append(System.Int32),
      M:System.Text.StringBuilder.Append(System.Int64),
      M:System.Text.StringBuilder.Append(System.Single),
      M:System.Text.StringBuilder.Append(System.Double),
      M:System.Text.StringBuilder.Append(System.Decimal),
      M:System.Text.StringBuilder.Append(System.UInt16),
      M:System.Text.StringBuilder.Append(System.UInt32),
      M:System.Text.StringBuilder.Append(System.UInt64),
      M:System.Text.StringBuilder.Append(System.Object),
      M:System.Text.StringBuilder.Append(System.Char[]),
      M:System.Text.StringBuilder.Append(System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.Append(System.ReadOnlyMemory{System.Char}),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Char*,System.Int32).value,
        Id: M:System.Text.StringBuilder.Append(System.Char*,System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.Append(System.Char*,System.Int32),
        Type: {
          Id: T:System.Char*,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Char*,System.Int32).valueCount,
        Id: M:System.Text.StringBuilder.Append(System.Char*,System.Int32).valueCount,
        Kind: Parameter,
        Name: valueCount,
        ParentId: M:System.Text.StringBuilder.Append(System.Char*,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Decimal): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Decimal),
    Id: M:System.Text.StringBuilder.Append(System.Decimal),
    IsLocal: false,
    Kind: Method,
    Name: Append,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Append(System.Char,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.String),
      M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Boolean),
      M:System.Text.StringBuilder.Append(System.Char),
      M:System.Text.StringBuilder.Append(System.SByte),
      M:System.Text.StringBuilder.Append(System.Byte),
      M:System.Text.StringBuilder.Append(System.Int16),
      M:System.Text.StringBuilder.Append(System.Int32),
      M:System.Text.StringBuilder.Append(System.Int64),
      M:System.Text.StringBuilder.Append(System.Single),
      M:System.Text.StringBuilder.Append(System.Double),
      M:System.Text.StringBuilder.Append(System.UInt16),
      M:System.Text.StringBuilder.Append(System.UInt32),
      M:System.Text.StringBuilder.Append(System.UInt64),
      M:System.Text.StringBuilder.Append(System.Object),
      M:System.Text.StringBuilder.Append(System.Char[]),
      M:System.Text.StringBuilder.Append(System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.Append(System.ReadOnlyMemory{System.Char}),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.Char*,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Decimal).value,
        Id: M:System.Text.StringBuilder.Append(System.Decimal).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.Append(System.Decimal),
        Type: {
          Id: T:System.Decimal,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Double): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Double),
    Id: M:System.Text.StringBuilder.Append(System.Double),
    IsLocal: false,
    Kind: Method,
    Name: Append,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Append(System.Char,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.String),
      M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Boolean),
      M:System.Text.StringBuilder.Append(System.Char),
      M:System.Text.StringBuilder.Append(System.SByte),
      M:System.Text.StringBuilder.Append(System.Byte),
      M:System.Text.StringBuilder.Append(System.Int16),
      M:System.Text.StringBuilder.Append(System.Int32),
      M:System.Text.StringBuilder.Append(System.Int64),
      M:System.Text.StringBuilder.Append(System.Single),
      M:System.Text.StringBuilder.Append(System.Decimal),
      M:System.Text.StringBuilder.Append(System.UInt16),
      M:System.Text.StringBuilder.Append(System.UInt32),
      M:System.Text.StringBuilder.Append(System.UInt64),
      M:System.Text.StringBuilder.Append(System.Object),
      M:System.Text.StringBuilder.Append(System.Char[]),
      M:System.Text.StringBuilder.Append(System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.Append(System.ReadOnlyMemory{System.Char}),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.Char*,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Double).value,
        Id: M:System.Text.StringBuilder.Append(System.Double).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.Append(System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@),
    Id: M:System.Text.StringBuilder.Append(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@),
    IsLocal: false,
    Kind: Method,
    Name: Append,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Append(System.Char,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.String),
      M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Boolean),
      M:System.Text.StringBuilder.Append(System.Char),
      M:System.Text.StringBuilder.Append(System.SByte),
      M:System.Text.StringBuilder.Append(System.Byte),
      M:System.Text.StringBuilder.Append(System.Int16),
      M:System.Text.StringBuilder.Append(System.Int32),
      M:System.Text.StringBuilder.Append(System.Int64),
      M:System.Text.StringBuilder.Append(System.Single),
      M:System.Text.StringBuilder.Append(System.Double),
      M:System.Text.StringBuilder.Append(System.Decimal),
      M:System.Text.StringBuilder.Append(System.UInt16),
      M:System.Text.StringBuilder.Append(System.UInt32),
      M:System.Text.StringBuilder.Append(System.UInt64),
      M:System.Text.StringBuilder.Append(System.Object),
      M:System.Text.StringBuilder.Append(System.Char[]),
      M:System.Text.StringBuilder.Append(System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.Append(System.ReadOnlyMemory{System.Char}),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.Char*,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@).provider,
        Id: M:System.Text.StringBuilder.Append(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Text.StringBuilder.Append(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@).handler,
        Id: M:System.Text.StringBuilder.Append(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@).handler,
        Kind: Parameter,
        Modifiers: [
          Ref
        ],
        Name: handler,
        ParentId: M:System.Text.StringBuilder.Append(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@),
        Type: {
          Id: T:System.Text.StringBuilder+AppendInterpolatedStringHandler&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Int16): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Int16),
    Id: M:System.Text.StringBuilder.Append(System.Int16),
    IsLocal: false,
    Kind: Method,
    Name: Append,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Append(System.Char,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.String),
      M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Boolean),
      M:System.Text.StringBuilder.Append(System.Char),
      M:System.Text.StringBuilder.Append(System.SByte),
      M:System.Text.StringBuilder.Append(System.Byte),
      M:System.Text.StringBuilder.Append(System.Int32),
      M:System.Text.StringBuilder.Append(System.Int64),
      M:System.Text.StringBuilder.Append(System.Single),
      M:System.Text.StringBuilder.Append(System.Double),
      M:System.Text.StringBuilder.Append(System.Decimal),
      M:System.Text.StringBuilder.Append(System.UInt16),
      M:System.Text.StringBuilder.Append(System.UInt32),
      M:System.Text.StringBuilder.Append(System.UInt64),
      M:System.Text.StringBuilder.Append(System.Object),
      M:System.Text.StringBuilder.Append(System.Char[]),
      M:System.Text.StringBuilder.Append(System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.Append(System.ReadOnlyMemory{System.Char}),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.Char*,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Int16).value,
        Id: M:System.Text.StringBuilder.Append(System.Int16).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.Append(System.Int16),
        Type: {
          Id: T:System.Int16,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Int32),
    Id: M:System.Text.StringBuilder.Append(System.Int32),
    IsLocal: false,
    Kind: Method,
    Name: Append,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Append(System.Char,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.String),
      M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Boolean),
      M:System.Text.StringBuilder.Append(System.Char),
      M:System.Text.StringBuilder.Append(System.SByte),
      M:System.Text.StringBuilder.Append(System.Byte),
      M:System.Text.StringBuilder.Append(System.Int16),
      M:System.Text.StringBuilder.Append(System.Int64),
      M:System.Text.StringBuilder.Append(System.Single),
      M:System.Text.StringBuilder.Append(System.Double),
      M:System.Text.StringBuilder.Append(System.Decimal),
      M:System.Text.StringBuilder.Append(System.UInt16),
      M:System.Text.StringBuilder.Append(System.UInt32),
      M:System.Text.StringBuilder.Append(System.UInt64),
      M:System.Text.StringBuilder.Append(System.Object),
      M:System.Text.StringBuilder.Append(System.Char[]),
      M:System.Text.StringBuilder.Append(System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.Append(System.ReadOnlyMemory{System.Char}),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.Char*,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Int32).value,
        Id: M:System.Text.StringBuilder.Append(System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.Append(System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Int64): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Int64),
    Id: M:System.Text.StringBuilder.Append(System.Int64),
    IsLocal: false,
    Kind: Method,
    Name: Append,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Append(System.Char,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.String),
      M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Boolean),
      M:System.Text.StringBuilder.Append(System.Char),
      M:System.Text.StringBuilder.Append(System.SByte),
      M:System.Text.StringBuilder.Append(System.Byte),
      M:System.Text.StringBuilder.Append(System.Int16),
      M:System.Text.StringBuilder.Append(System.Int32),
      M:System.Text.StringBuilder.Append(System.Single),
      M:System.Text.StringBuilder.Append(System.Double),
      M:System.Text.StringBuilder.Append(System.Decimal),
      M:System.Text.StringBuilder.Append(System.UInt16),
      M:System.Text.StringBuilder.Append(System.UInt32),
      M:System.Text.StringBuilder.Append(System.UInt64),
      M:System.Text.StringBuilder.Append(System.Object),
      M:System.Text.StringBuilder.Append(System.Char[]),
      M:System.Text.StringBuilder.Append(System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.Append(System.ReadOnlyMemory{System.Char}),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.Char*,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Int64).value,
        Id: M:System.Text.StringBuilder.Append(System.Int64).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.Append(System.Int64),
        Type: {
          Id: T:System.Int64,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Object): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Object),
    Id: M:System.Text.StringBuilder.Append(System.Object),
    IsLocal: false,
    Kind: Method,
    Name: Append,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Append(System.Char,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.String),
      M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Boolean),
      M:System.Text.StringBuilder.Append(System.Char),
      M:System.Text.StringBuilder.Append(System.SByte),
      M:System.Text.StringBuilder.Append(System.Byte),
      M:System.Text.StringBuilder.Append(System.Int16),
      M:System.Text.StringBuilder.Append(System.Int32),
      M:System.Text.StringBuilder.Append(System.Int64),
      M:System.Text.StringBuilder.Append(System.Single),
      M:System.Text.StringBuilder.Append(System.Double),
      M:System.Text.StringBuilder.Append(System.Decimal),
      M:System.Text.StringBuilder.Append(System.UInt16),
      M:System.Text.StringBuilder.Append(System.UInt32),
      M:System.Text.StringBuilder.Append(System.UInt64),
      M:System.Text.StringBuilder.Append(System.Char[]),
      M:System.Text.StringBuilder.Append(System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.Append(System.ReadOnlyMemory{System.Char}),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.Char*,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Object).value,
        Id: M:System.Text.StringBuilder.Append(System.Object).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.Append(System.Object),
        Type: {
          Id: T:System.Object,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.ReadOnlyMemory{System.Char}): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.ReadOnlyMemory{System.Char}),
    Id: M:System.Text.StringBuilder.Append(System.ReadOnlyMemory{System.Char}),
    IsLocal: false,
    Kind: Method,
    Name: Append,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Append(System.Char,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.String),
      M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Boolean),
      M:System.Text.StringBuilder.Append(System.Char),
      M:System.Text.StringBuilder.Append(System.SByte),
      M:System.Text.StringBuilder.Append(System.Byte),
      M:System.Text.StringBuilder.Append(System.Int16),
      M:System.Text.StringBuilder.Append(System.Int32),
      M:System.Text.StringBuilder.Append(System.Int64),
      M:System.Text.StringBuilder.Append(System.Single),
      M:System.Text.StringBuilder.Append(System.Double),
      M:System.Text.StringBuilder.Append(System.Decimal),
      M:System.Text.StringBuilder.Append(System.UInt16),
      M:System.Text.StringBuilder.Append(System.UInt32),
      M:System.Text.StringBuilder.Append(System.UInt64),
      M:System.Text.StringBuilder.Append(System.Object),
      M:System.Text.StringBuilder.Append(System.Char[]),
      M:System.Text.StringBuilder.Append(System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.Char*,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.ReadOnlyMemory{System.Char}).value,
        Id: M:System.Text.StringBuilder.Append(System.ReadOnlyMemory{System.Char}).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.Append(System.ReadOnlyMemory{System.Char}),
        Type: {
          Id: T:System.ReadOnlyMemory`1[[System.Char]],
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.ReadOnlySpan{System.Char}): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.ReadOnlySpan{System.Char}),
    Id: M:System.Text.StringBuilder.Append(System.ReadOnlySpan{System.Char}),
    IsLocal: false,
    Kind: Method,
    Name: Append,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Append(System.Char,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.String),
      M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Boolean),
      M:System.Text.StringBuilder.Append(System.Char),
      M:System.Text.StringBuilder.Append(System.SByte),
      M:System.Text.StringBuilder.Append(System.Byte),
      M:System.Text.StringBuilder.Append(System.Int16),
      M:System.Text.StringBuilder.Append(System.Int32),
      M:System.Text.StringBuilder.Append(System.Int64),
      M:System.Text.StringBuilder.Append(System.Single),
      M:System.Text.StringBuilder.Append(System.Double),
      M:System.Text.StringBuilder.Append(System.Decimal),
      M:System.Text.StringBuilder.Append(System.UInt16),
      M:System.Text.StringBuilder.Append(System.UInt32),
      M:System.Text.StringBuilder.Append(System.UInt64),
      M:System.Text.StringBuilder.Append(System.Object),
      M:System.Text.StringBuilder.Append(System.Char[]),
      M:System.Text.StringBuilder.Append(System.ReadOnlyMemory{System.Char}),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.Char*,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.ReadOnlySpan{System.Char}).value,
        Id: M:System.Text.StringBuilder.Append(System.ReadOnlySpan{System.Char}).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.Append(System.ReadOnlySpan{System.Char}),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Char]],
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.SByte): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.CLSCompliantAttribute,
        Id: T:System.CLSCompliantAttribute,
        Kind: Attribute,
        Name: CLSCompliantAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.SByte),
    Id: M:System.Text.StringBuilder.Append(System.SByte),
    IsLocal: false,
    Kind: Method,
    Name: Append,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Append(System.Char,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.String),
      M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Boolean),
      M:System.Text.StringBuilder.Append(System.Char),
      M:System.Text.StringBuilder.Append(System.Byte),
      M:System.Text.StringBuilder.Append(System.Int16),
      M:System.Text.StringBuilder.Append(System.Int32),
      M:System.Text.StringBuilder.Append(System.Int64),
      M:System.Text.StringBuilder.Append(System.Single),
      M:System.Text.StringBuilder.Append(System.Double),
      M:System.Text.StringBuilder.Append(System.Decimal),
      M:System.Text.StringBuilder.Append(System.UInt16),
      M:System.Text.StringBuilder.Append(System.UInt32),
      M:System.Text.StringBuilder.Append(System.UInt64),
      M:System.Text.StringBuilder.Append(System.Object),
      M:System.Text.StringBuilder.Append(System.Char[]),
      M:System.Text.StringBuilder.Append(System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.Append(System.ReadOnlyMemory{System.Char}),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.Char*,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.SByte).value,
        Id: M:System.Text.StringBuilder.Append(System.SByte).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.Append(System.SByte),
        Type: {
          Id: T:System.SByte,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Single): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Single),
    Id: M:System.Text.StringBuilder.Append(System.Single),
    IsLocal: false,
    Kind: Method,
    Name: Append,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Append(System.Char,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.String),
      M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Boolean),
      M:System.Text.StringBuilder.Append(System.Char),
      M:System.Text.StringBuilder.Append(System.SByte),
      M:System.Text.StringBuilder.Append(System.Byte),
      M:System.Text.StringBuilder.Append(System.Int16),
      M:System.Text.StringBuilder.Append(System.Int32),
      M:System.Text.StringBuilder.Append(System.Int64),
      M:System.Text.StringBuilder.Append(System.Double),
      M:System.Text.StringBuilder.Append(System.Decimal),
      M:System.Text.StringBuilder.Append(System.UInt16),
      M:System.Text.StringBuilder.Append(System.UInt32),
      M:System.Text.StringBuilder.Append(System.UInt64),
      M:System.Text.StringBuilder.Append(System.Object),
      M:System.Text.StringBuilder.Append(System.Char[]),
      M:System.Text.StringBuilder.Append(System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.Append(System.ReadOnlyMemory{System.Char}),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.Char*,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Single).value,
        Id: M:System.Text.StringBuilder.Append(System.Single).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.Append(System.Single),
        Type: {
          Id: T:System.Single,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32),
    Id: M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32),
    IsLocal: false,
    Kind: Method,
    Name: Append,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Append(System.Char,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.String),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Boolean),
      M:System.Text.StringBuilder.Append(System.Char),
      M:System.Text.StringBuilder.Append(System.SByte),
      M:System.Text.StringBuilder.Append(System.Byte),
      M:System.Text.StringBuilder.Append(System.Int16),
      M:System.Text.StringBuilder.Append(System.Int32),
      M:System.Text.StringBuilder.Append(System.Int64),
      M:System.Text.StringBuilder.Append(System.Single),
      M:System.Text.StringBuilder.Append(System.Double),
      M:System.Text.StringBuilder.Append(System.Decimal),
      M:System.Text.StringBuilder.Append(System.UInt16),
      M:System.Text.StringBuilder.Append(System.UInt32),
      M:System.Text.StringBuilder.Append(System.UInt64),
      M:System.Text.StringBuilder.Append(System.Object),
      M:System.Text.StringBuilder.Append(System.Char[]),
      M:System.Text.StringBuilder.Append(System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.Append(System.ReadOnlyMemory{System.Char}),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.Char*,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32).value,
        Id: M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32),
        Type: {
          Id: T:System.String,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32).startIndex,
        Id: M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32).startIndex,
        Kind: Parameter,
        Name: startIndex,
        ParentId: M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32).count,
        Id: M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32).count,
        Kind: Parameter,
        Name: count,
        ParentId: M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.String): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.String),
    Id: M:System.Text.StringBuilder.Append(System.String),
    IsLocal: false,
    Kind: Method,
    Name: Append,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Append(System.Char,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Boolean),
      M:System.Text.StringBuilder.Append(System.Char),
      M:System.Text.StringBuilder.Append(System.SByte),
      M:System.Text.StringBuilder.Append(System.Byte),
      M:System.Text.StringBuilder.Append(System.Int16),
      M:System.Text.StringBuilder.Append(System.Int32),
      M:System.Text.StringBuilder.Append(System.Int64),
      M:System.Text.StringBuilder.Append(System.Single),
      M:System.Text.StringBuilder.Append(System.Double),
      M:System.Text.StringBuilder.Append(System.Decimal),
      M:System.Text.StringBuilder.Append(System.UInt16),
      M:System.Text.StringBuilder.Append(System.UInt32),
      M:System.Text.StringBuilder.Append(System.UInt64),
      M:System.Text.StringBuilder.Append(System.Object),
      M:System.Text.StringBuilder.Append(System.Char[]),
      M:System.Text.StringBuilder.Append(System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.Append(System.ReadOnlyMemory{System.Char}),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.Char*,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.String).value,
        Id: M:System.Text.StringBuilder.Append(System.String).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.Append(System.String),
        Type: {
          Id: T:System.String,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Text.StringBuilder,System.Int32,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Text.StringBuilder,System.Int32,System.Int32),
    Id: M:System.Text.StringBuilder.Append(System.Text.StringBuilder,System.Int32,System.Int32),
    IsLocal: false,
    Kind: Method,
    Name: Append,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Append(System.Char,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.String),
      M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder),
      M:System.Text.StringBuilder.Append(System.Boolean),
      M:System.Text.StringBuilder.Append(System.Char),
      M:System.Text.StringBuilder.Append(System.SByte),
      M:System.Text.StringBuilder.Append(System.Byte),
      M:System.Text.StringBuilder.Append(System.Int16),
      M:System.Text.StringBuilder.Append(System.Int32),
      M:System.Text.StringBuilder.Append(System.Int64),
      M:System.Text.StringBuilder.Append(System.Single),
      M:System.Text.StringBuilder.Append(System.Double),
      M:System.Text.StringBuilder.Append(System.Decimal),
      M:System.Text.StringBuilder.Append(System.UInt16),
      M:System.Text.StringBuilder.Append(System.UInt32),
      M:System.Text.StringBuilder.Append(System.UInt64),
      M:System.Text.StringBuilder.Append(System.Object),
      M:System.Text.StringBuilder.Append(System.Char[]),
      M:System.Text.StringBuilder.Append(System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.Append(System.ReadOnlyMemory{System.Char}),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.Char*,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Text.StringBuilder,System.Int32,System.Int32).value,
        Id: M:System.Text.StringBuilder.Append(System.Text.StringBuilder,System.Int32,System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.Append(System.Text.StringBuilder,System.Int32,System.Int32),
        Type: {
          Id: T:System.Text.StringBuilder,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Text.StringBuilder,System.Int32,System.Int32).startIndex,
        Id: M:System.Text.StringBuilder.Append(System.Text.StringBuilder,System.Int32,System.Int32).startIndex,
        Kind: Parameter,
        Name: startIndex,
        ParentId: M:System.Text.StringBuilder.Append(System.Text.StringBuilder,System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Text.StringBuilder,System.Int32,System.Int32).count,
        Id: M:System.Text.StringBuilder.Append(System.Text.StringBuilder,System.Int32,System.Int32).count,
        Kind: Parameter,
        Name: count,
        ParentId: M:System.Text.StringBuilder.Append(System.Text.StringBuilder,System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Text.StringBuilder.AppendInterpolatedStringHandler@): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Text.StringBuilder.AppendInterpolatedStringHandler@),
    Id: M:System.Text.StringBuilder.Append(System.Text.StringBuilder.AppendInterpolatedStringHandler@),
    IsLocal: false,
    Kind: Method,
    Name: Append,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Append(System.Char,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.String),
      M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Boolean),
      M:System.Text.StringBuilder.Append(System.Char),
      M:System.Text.StringBuilder.Append(System.SByte),
      M:System.Text.StringBuilder.Append(System.Byte),
      M:System.Text.StringBuilder.Append(System.Int16),
      M:System.Text.StringBuilder.Append(System.Int32),
      M:System.Text.StringBuilder.Append(System.Int64),
      M:System.Text.StringBuilder.Append(System.Single),
      M:System.Text.StringBuilder.Append(System.Double),
      M:System.Text.StringBuilder.Append(System.Decimal),
      M:System.Text.StringBuilder.Append(System.UInt16),
      M:System.Text.StringBuilder.Append(System.UInt32),
      M:System.Text.StringBuilder.Append(System.UInt64),
      M:System.Text.StringBuilder.Append(System.Object),
      M:System.Text.StringBuilder.Append(System.Char[]),
      M:System.Text.StringBuilder.Append(System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.Append(System.ReadOnlyMemory{System.Char}),
      M:System.Text.StringBuilder.Append(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.Char*,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Text.StringBuilder.AppendInterpolatedStringHandler@).handler,
        Id: M:System.Text.StringBuilder.Append(System.Text.StringBuilder.AppendInterpolatedStringHandler@).handler,
        Kind: Parameter,
        Modifiers: [
          Ref
        ],
        Name: handler,
        ParentId: M:System.Text.StringBuilder.Append(System.Text.StringBuilder.AppendInterpolatedStringHandler@),
        Type: {
          Id: T:System.Text.StringBuilder+AppendInterpolatedStringHandler&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Text.StringBuilder): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Text.StringBuilder),
    Id: M:System.Text.StringBuilder.Append(System.Text.StringBuilder),
    IsLocal: false,
    Kind: Method,
    Name: Append,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Append(System.Char,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.String),
      M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Boolean),
      M:System.Text.StringBuilder.Append(System.Char),
      M:System.Text.StringBuilder.Append(System.SByte),
      M:System.Text.StringBuilder.Append(System.Byte),
      M:System.Text.StringBuilder.Append(System.Int16),
      M:System.Text.StringBuilder.Append(System.Int32),
      M:System.Text.StringBuilder.Append(System.Int64),
      M:System.Text.StringBuilder.Append(System.Single),
      M:System.Text.StringBuilder.Append(System.Double),
      M:System.Text.StringBuilder.Append(System.Decimal),
      M:System.Text.StringBuilder.Append(System.UInt16),
      M:System.Text.StringBuilder.Append(System.UInt32),
      M:System.Text.StringBuilder.Append(System.UInt64),
      M:System.Text.StringBuilder.Append(System.Object),
      M:System.Text.StringBuilder.Append(System.Char[]),
      M:System.Text.StringBuilder.Append(System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.Append(System.ReadOnlyMemory{System.Char}),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.Char*,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.Text.StringBuilder).value,
        Id: M:System.Text.StringBuilder.Append(System.Text.StringBuilder).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.Append(System.Text.StringBuilder),
        Type: {
          Id: T:System.Text.StringBuilder,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.UInt16): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.CLSCompliantAttribute,
        Id: T:System.CLSCompliantAttribute,
        Kind: Attribute,
        Name: CLSCompliantAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.UInt16),
    Id: M:System.Text.StringBuilder.Append(System.UInt16),
    IsLocal: false,
    Kind: Method,
    Name: Append,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Append(System.Char,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.String),
      M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Boolean),
      M:System.Text.StringBuilder.Append(System.Char),
      M:System.Text.StringBuilder.Append(System.SByte),
      M:System.Text.StringBuilder.Append(System.Byte),
      M:System.Text.StringBuilder.Append(System.Int16),
      M:System.Text.StringBuilder.Append(System.Int32),
      M:System.Text.StringBuilder.Append(System.Int64),
      M:System.Text.StringBuilder.Append(System.Single),
      M:System.Text.StringBuilder.Append(System.Double),
      M:System.Text.StringBuilder.Append(System.Decimal),
      M:System.Text.StringBuilder.Append(System.UInt32),
      M:System.Text.StringBuilder.Append(System.UInt64),
      M:System.Text.StringBuilder.Append(System.Object),
      M:System.Text.StringBuilder.Append(System.Char[]),
      M:System.Text.StringBuilder.Append(System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.Append(System.ReadOnlyMemory{System.Char}),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.Char*,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.UInt16).value,
        Id: M:System.Text.StringBuilder.Append(System.UInt16).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.Append(System.UInt16),
        Type: {
          Id: T:System.UInt16,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.UInt32): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.CLSCompliantAttribute,
        Id: T:System.CLSCompliantAttribute,
        Kind: Attribute,
        Name: CLSCompliantAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.UInt32),
    Id: M:System.Text.StringBuilder.Append(System.UInt32),
    IsLocal: false,
    Kind: Method,
    Name: Append,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Append(System.Char,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.String),
      M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Boolean),
      M:System.Text.StringBuilder.Append(System.Char),
      M:System.Text.StringBuilder.Append(System.SByte),
      M:System.Text.StringBuilder.Append(System.Byte),
      M:System.Text.StringBuilder.Append(System.Int16),
      M:System.Text.StringBuilder.Append(System.Int32),
      M:System.Text.StringBuilder.Append(System.Int64),
      M:System.Text.StringBuilder.Append(System.Single),
      M:System.Text.StringBuilder.Append(System.Double),
      M:System.Text.StringBuilder.Append(System.Decimal),
      M:System.Text.StringBuilder.Append(System.UInt16),
      M:System.Text.StringBuilder.Append(System.UInt64),
      M:System.Text.StringBuilder.Append(System.Object),
      M:System.Text.StringBuilder.Append(System.Char[]),
      M:System.Text.StringBuilder.Append(System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.Append(System.ReadOnlyMemory{System.Char}),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.Char*,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.UInt32).value,
        Id: M:System.Text.StringBuilder.Append(System.UInt32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.Append(System.UInt32),
        Type: {
          Id: T:System.UInt32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.UInt64): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.CLSCompliantAttribute,
        Id: T:System.CLSCompliantAttribute,
        Kind: Attribute,
        Name: CLSCompliantAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.UInt64),
    Id: M:System.Text.StringBuilder.Append(System.UInt64),
    IsLocal: false,
    Kind: Method,
    Name: Append,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Append(System.Char,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.String),
      M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Append(System.Boolean),
      M:System.Text.StringBuilder.Append(System.Char),
      M:System.Text.StringBuilder.Append(System.SByte),
      M:System.Text.StringBuilder.Append(System.Byte),
      M:System.Text.StringBuilder.Append(System.Int16),
      M:System.Text.StringBuilder.Append(System.Int32),
      M:System.Text.StringBuilder.Append(System.Int64),
      M:System.Text.StringBuilder.Append(System.Single),
      M:System.Text.StringBuilder.Append(System.Double),
      M:System.Text.StringBuilder.Append(System.Decimal),
      M:System.Text.StringBuilder.Append(System.UInt16),
      M:System.Text.StringBuilder.Append(System.UInt32),
      M:System.Text.StringBuilder.Append(System.Object),
      M:System.Text.StringBuilder.Append(System.Char[]),
      M:System.Text.StringBuilder.Append(System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.Append(System.ReadOnlyMemory{System.Char}),
      M:System.Text.StringBuilder.Append(System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.Append(System.Char*,System.Int32),
      M:System.Text.StringBuilder.Append(System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Append(System.UInt64).value,
        Id: M:System.Text.StringBuilder.Append(System.UInt64).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.Append(System.UInt64),
        Type: {
          Id: T:System.UInt64,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendCore(System.Text.StringBuilder,System.Int32,System.Int32): {
    Accessibility: Private,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendCore(System.Text.StringBuilder,System.Int32,System.Int32),
    Id: M:System.Text.StringBuilder.AppendCore(System.Text.StringBuilder,System.Int32,System.Int32),
    IsLocal: false,
    Kind: Method,
    Name: AppendCore,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendCore(System.Text.StringBuilder,System.Int32,System.Int32).value,
        Id: M:System.Text.StringBuilder.AppendCore(System.Text.StringBuilder,System.Int32,System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.AppendCore(System.Text.StringBuilder,System.Int32,System.Int32),
        Type: {
          Id: T:System.Text.StringBuilder,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendCore(System.Text.StringBuilder,System.Int32,System.Int32).startIndex,
        Id: M:System.Text.StringBuilder.AppendCore(System.Text.StringBuilder,System.Int32,System.Int32).startIndex,
        Kind: Parameter,
        Name: startIndex,
        ParentId: M:System.Text.StringBuilder.AppendCore(System.Text.StringBuilder,System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendCore(System.Text.StringBuilder,System.Int32,System.Int32).count,
        Id: M:System.Text.StringBuilder.AppendCore(System.Text.StringBuilder,System.Int32,System.Int32).count,
        Kind: Parameter,
        Name: count,
        ParentId: M:System.Text.StringBuilder.AppendCore(System.Text.StringBuilder,System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object),
    Id: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object),
    IsLocal: false,
    Kind: Method,
    Name: AppendFormat,
    OverloadedMembers: [
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[]),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[]),
      M:System.Text.StringBuilder.AppendFormat``1(System.IFormatProvider,System.Text.CompositeFormat,``0),
      M:System.Text.StringBuilder.AppendFormat``2(System.IFormatProvider,System.Text.CompositeFormat,``0,``1),
      M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.Object[]),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.ReadOnlySpan{System.Object}),
      M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2,System.ReadOnlySpan{System.Object})
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object).provider,
        Id: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object).format,
        Id: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object).format,
        Kind: Parameter,
        Name: format,
        ParentId: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object).arg0,
        Id: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object).arg0,
        Kind: Parameter,
        Name: arg0,
        ParentId: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object),
        Type: {
          Id: T:System.Object,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object).arg1,
        Id: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object).arg1,
        Kind: Parameter,
        Name: arg1,
        ParentId: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object),
        Type: {
          Id: T:System.Object,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object).arg2,
        Id: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object).arg2,
        Kind: Parameter,
        Name: arg2,
        ParentId: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object),
        Type: {
          Id: T:System.Object,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object),
    Id: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object),
    IsLocal: false,
    Kind: Method,
    Name: AppendFormat,
    OverloadedMembers: [
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[]),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[]),
      M:System.Text.StringBuilder.AppendFormat``1(System.IFormatProvider,System.Text.CompositeFormat,``0),
      M:System.Text.StringBuilder.AppendFormat``2(System.IFormatProvider,System.Text.CompositeFormat,``0,``1),
      M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.Object[]),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.ReadOnlySpan{System.Object}),
      M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2,System.ReadOnlySpan{System.Object})
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object).provider,
        Id: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object).format,
        Id: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object).format,
        Kind: Parameter,
        Name: format,
        ParentId: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object).arg0,
        Id: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object).arg0,
        Kind: Parameter,
        Name: arg0,
        ParentId: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object),
        Type: {
          Id: T:System.Object,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object).arg1,
        Id: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object).arg1,
        Kind: Parameter,
        Name: arg1,
        ParentId: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object),
        Type: {
          Id: T:System.Object,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object),
    Id: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object),
    IsLocal: false,
    Kind: Method,
    Name: AppendFormat,
    OverloadedMembers: [
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[]),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[]),
      M:System.Text.StringBuilder.AppendFormat``1(System.IFormatProvider,System.Text.CompositeFormat,``0),
      M:System.Text.StringBuilder.AppendFormat``2(System.IFormatProvider,System.Text.CompositeFormat,``0,``1),
      M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.Object[]),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.ReadOnlySpan{System.Object}),
      M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2,System.ReadOnlySpan{System.Object})
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object).provider,
        Id: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object).format,
        Id: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object).format,
        Kind: Parameter,
        Name: format,
        ParentId: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object).arg0,
        Id: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object).arg0,
        Kind: Parameter,
        Name: arg0,
        ParentId: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object),
        Type: {
          Id: T:System.Object,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[]): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[]),
    Id: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[]),
    IsLocal: false,
    Kind: Method,
    Name: AppendFormat,
    OverloadedMembers: [
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[]),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat``1(System.IFormatProvider,System.Text.CompositeFormat,``0),
      M:System.Text.StringBuilder.AppendFormat``2(System.IFormatProvider,System.Text.CompositeFormat,``0,``1),
      M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.Object[]),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.ReadOnlySpan{System.Object}),
      M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2,System.ReadOnlySpan{System.Object})
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[]).provider,
        Id: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[]).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[]),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[]).format,
        Id: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[]).format,
        Kind: Parameter,
        Name: format,
        ParentId: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[]),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[]).args,
        Id: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[]).args,
        Kind: Parameter,
        Modifiers: [
          Params
        ],
        Name: args,
        ParentId: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[]),
        Type: {
          Id: T:System.Object[],
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.Object[]): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.Object[]),
    Id: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.Object[]),
    IsLocal: false,
    Kind: Method,
    Name: AppendFormat,
    OverloadedMembers: [
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[]),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[]),
      M:System.Text.StringBuilder.AppendFormat``1(System.IFormatProvider,System.Text.CompositeFormat,``0),
      M:System.Text.StringBuilder.AppendFormat``2(System.IFormatProvider,System.Text.CompositeFormat,``0,``1),
      M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.ReadOnlySpan{System.Object}),
      M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2,System.ReadOnlySpan{System.Object})
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.Object[]).provider,
        Id: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.Object[]).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.Object[]),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.Object[]).format,
        Id: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.Object[]).format,
        Kind: Parameter,
        Name: format,
        ParentId: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.Object[]),
        Type: {
          Id: T:System.Text.CompositeFormat,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.Object[]).args,
        Id: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.Object[]).args,
        Kind: Parameter,
        Modifiers: [
          Params
        ],
        Name: args,
        ParentId: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.Object[]),
        Type: {
          Id: T:System.Object[],
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.ReadOnlySpan{System.Object}): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.ReadOnlySpan{System.Object}),
    Id: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.ReadOnlySpan{System.Object}),
    IsLocal: false,
    Kind: Method,
    Name: AppendFormat,
    OverloadedMembers: [
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[]),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[]),
      M:System.Text.StringBuilder.AppendFormat``1(System.IFormatProvider,System.Text.CompositeFormat,``0),
      M:System.Text.StringBuilder.AppendFormat``2(System.IFormatProvider,System.Text.CompositeFormat,``0,``1),
      M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.Object[]),
      M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2,System.ReadOnlySpan{System.Object})
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.ReadOnlySpan{System.Object}).provider,
        Id: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.ReadOnlySpan{System.Object}).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.ReadOnlySpan{System.Object}),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.ReadOnlySpan{System.Object}).format,
        Id: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.ReadOnlySpan{System.Object}).format,
        Kind: Parameter,
        Name: format,
        ParentId: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.ReadOnlySpan{System.Object}),
        Type: {
          Id: T:System.Text.CompositeFormat,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.ReadOnlySpan{System.Object}).args,
        Id: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.ReadOnlySpan{System.Object}).args,
        Kind: Parameter,
        Name: args,
        ParentId: M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.ReadOnlySpan{System.Object}),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Object]],
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object),
    Id: M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object),
    IsLocal: false,
    Kind: Method,
    Name: AppendFormat,
    OverloadedMembers: [
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[]),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[]),
      M:System.Text.StringBuilder.AppendFormat``1(System.IFormatProvider,System.Text.CompositeFormat,``0),
      M:System.Text.StringBuilder.AppendFormat``2(System.IFormatProvider,System.Text.CompositeFormat,``0,``1),
      M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.Object[]),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.ReadOnlySpan{System.Object}),
      M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2,System.ReadOnlySpan{System.Object})
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object).format,
        Id: M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object).format,
        Kind: Parameter,
        Name: format,
        ParentId: M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object).arg0,
        Id: M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object).arg0,
        Kind: Parameter,
        Name: arg0,
        ParentId: M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object),
        Type: {
          Id: T:System.Object,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object).arg1,
        Id: M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object).arg1,
        Kind: Parameter,
        Name: arg1,
        ParentId: M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object),
        Type: {
          Id: T:System.Object,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object).arg2,
        Id: M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object).arg2,
        Kind: Parameter,
        Name: arg2,
        ParentId: M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object),
        Type: {
          Id: T:System.Object,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object),
    Id: M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object),
    IsLocal: false,
    Kind: Method,
    Name: AppendFormat,
    OverloadedMembers: [
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[]),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[]),
      M:System.Text.StringBuilder.AppendFormat``1(System.IFormatProvider,System.Text.CompositeFormat,``0),
      M:System.Text.StringBuilder.AppendFormat``2(System.IFormatProvider,System.Text.CompositeFormat,``0,``1),
      M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.Object[]),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.ReadOnlySpan{System.Object}),
      M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2,System.ReadOnlySpan{System.Object})
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object).format,
        Id: M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object).format,
        Kind: Parameter,
        Name: format,
        ParentId: M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object).arg0,
        Id: M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object).arg0,
        Kind: Parameter,
        Name: arg0,
        ParentId: M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object),
        Type: {
          Id: T:System.Object,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object).arg1,
        Id: M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object).arg1,
        Kind: Parameter,
        Name: arg1,
        ParentId: M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object),
        Type: {
          Id: T:System.Object,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.String,System.Object): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.String,System.Object),
    Id: M:System.Text.StringBuilder.AppendFormat(System.String,System.Object),
    IsLocal: false,
    Kind: Method,
    Name: AppendFormat,
    OverloadedMembers: [
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[]),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[]),
      M:System.Text.StringBuilder.AppendFormat``1(System.IFormatProvider,System.Text.CompositeFormat,``0),
      M:System.Text.StringBuilder.AppendFormat``2(System.IFormatProvider,System.Text.CompositeFormat,``0,``1),
      M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.Object[]),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.ReadOnlySpan{System.Object}),
      M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2,System.ReadOnlySpan{System.Object})
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.String,System.Object).format,
        Id: M:System.Text.StringBuilder.AppendFormat(System.String,System.Object).format,
        Kind: Parameter,
        Name: format,
        ParentId: M:System.Text.StringBuilder.AppendFormat(System.String,System.Object),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.String,System.Object).arg0,
        Id: M:System.Text.StringBuilder.AppendFormat(System.String,System.Object).arg0,
        Kind: Parameter,
        Name: arg0,
        ParentId: M:System.Text.StringBuilder.AppendFormat(System.String,System.Object),
        Type: {
          Id: T:System.Object,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[]): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[]),
    Id: M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[]),
    IsLocal: false,
    Kind: Method,
    Name: AppendFormat,
    OverloadedMembers: [
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[]),
      M:System.Text.StringBuilder.AppendFormat``1(System.IFormatProvider,System.Text.CompositeFormat,``0),
      M:System.Text.StringBuilder.AppendFormat``2(System.IFormatProvider,System.Text.CompositeFormat,``0,``1),
      M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.Object[]),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.ReadOnlySpan{System.Object}),
      M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2,System.ReadOnlySpan{System.Object})
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[]).format,
        Id: M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[]).format,
        Kind: Parameter,
        Name: format,
        ParentId: M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[]),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[]).args,
        Id: M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[]).args,
        Kind: Parameter,
        Modifiers: [
          Params
        ],
        Name: args,
        ParentId: M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[]),
        Type: {
          Id: T:System.Object[],
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat``1(System.IFormatProvider,System.Text.CompositeFormat,``0): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat``1(System.IFormatProvider,System.Text.CompositeFormat,``0),
    Id: M:System.Text.StringBuilder.AppendFormat``1(System.IFormatProvider,System.Text.CompositeFormat,``0),
    IsLocal: false,
    Kind: Method,
    Name: AppendFormat,
    OverloadedMembers: [
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[]),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[]),
      M:System.Text.StringBuilder.AppendFormat``2(System.IFormatProvider,System.Text.CompositeFormat,``0,``1),
      M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.Object[]),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.ReadOnlySpan{System.Object}),
      M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2,System.ReadOnlySpan{System.Object})
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat``1(System.IFormatProvider,System.Text.CompositeFormat,``0).provider,
        Id: M:System.Text.StringBuilder.AppendFormat``1(System.IFormatProvider,System.Text.CompositeFormat,``0).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Text.StringBuilder.AppendFormat``1(System.IFormatProvider,System.Text.CompositeFormat,``0),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat``1(System.IFormatProvider,System.Text.CompositeFormat,``0).format,
        Id: M:System.Text.StringBuilder.AppendFormat``1(System.IFormatProvider,System.Text.CompositeFormat,``0).format,
        Kind: Parameter,
        Name: format,
        ParentId: M:System.Text.StringBuilder.AppendFormat``1(System.IFormatProvider,System.Text.CompositeFormat,``0),
        Type: {
          Id: T:System.Text.CompositeFormat,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat``1(System.IFormatProvider,System.Text.CompositeFormat,``0).arg0,
        Id: M:System.Text.StringBuilder.AppendFormat``1(System.IFormatProvider,System.Text.CompositeFormat,``0).arg0,
        Kind: Parameter,
        Name: arg0,
        ParentId: M:System.Text.StringBuilder.AppendFormat``1(System.IFormatProvider,System.Text.CompositeFormat,``0),
        Type: {
          Id: T:System.Text.StringBuilder.AppendFormat.TArg0,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat``1(System.IFormatProvider,System.Text.CompositeFormat,``0).TArg0,
        Id: G:System.Text.StringBuilder.AppendFormat``1(System.IFormatProvider,System.Text.CompositeFormat,``0).TArg0,
        Kind: TypeParameter,
        Name: TArg0,
        ParentId: M:System.Text.StringBuilder.AppendFormat``1(System.IFormatProvider,System.Text.CompositeFormat,``0)
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat``2(System.IFormatProvider,System.Text.CompositeFormat,``0,``1): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat``2(System.IFormatProvider,System.Text.CompositeFormat,``0,``1),
    Id: M:System.Text.StringBuilder.AppendFormat``2(System.IFormatProvider,System.Text.CompositeFormat,``0,``1),
    IsLocal: false,
    Kind: Method,
    Name: AppendFormat,
    OverloadedMembers: [
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[]),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[]),
      M:System.Text.StringBuilder.AppendFormat``1(System.IFormatProvider,System.Text.CompositeFormat,``0),
      M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.Object[]),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.ReadOnlySpan{System.Object}),
      M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2,System.ReadOnlySpan{System.Object})
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat``2(System.IFormatProvider,System.Text.CompositeFormat,``0,``1).provider,
        Id: M:System.Text.StringBuilder.AppendFormat``2(System.IFormatProvider,System.Text.CompositeFormat,``0,``1).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Text.StringBuilder.AppendFormat``2(System.IFormatProvider,System.Text.CompositeFormat,``0,``1),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat``2(System.IFormatProvider,System.Text.CompositeFormat,``0,``1).format,
        Id: M:System.Text.StringBuilder.AppendFormat``2(System.IFormatProvider,System.Text.CompositeFormat,``0,``1).format,
        Kind: Parameter,
        Name: format,
        ParentId: M:System.Text.StringBuilder.AppendFormat``2(System.IFormatProvider,System.Text.CompositeFormat,``0,``1),
        Type: {
          Id: T:System.Text.CompositeFormat,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat``2(System.IFormatProvider,System.Text.CompositeFormat,``0,``1).arg0,
        Id: M:System.Text.StringBuilder.AppendFormat``2(System.IFormatProvider,System.Text.CompositeFormat,``0,``1).arg0,
        Kind: Parameter,
        Name: arg0,
        ParentId: M:System.Text.StringBuilder.AppendFormat``2(System.IFormatProvider,System.Text.CompositeFormat,``0,``1),
        Type: {
          Id: T:System.Text.StringBuilder.AppendFormat.TArg0,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat``2(System.IFormatProvider,System.Text.CompositeFormat,``0,``1).arg1,
        Id: M:System.Text.StringBuilder.AppendFormat``2(System.IFormatProvider,System.Text.CompositeFormat,``0,``1).arg1,
        Kind: Parameter,
        Name: arg1,
        ParentId: M:System.Text.StringBuilder.AppendFormat``2(System.IFormatProvider,System.Text.CompositeFormat,``0,``1),
        Type: {
          Id: T:System.Text.StringBuilder.AppendFormat.TArg1,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat``2(System.IFormatProvider,System.Text.CompositeFormat,``0,``1).TArg0,
        Id: G:System.Text.StringBuilder.AppendFormat``2(System.IFormatProvider,System.Text.CompositeFormat,``0,``1).TArg0,
        Kind: TypeParameter,
        Name: TArg0,
        ParentId: M:System.Text.StringBuilder.AppendFormat``2(System.IFormatProvider,System.Text.CompositeFormat,``0,``1)
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat``2(System.IFormatProvider,System.Text.CompositeFormat,``0,``1).TArg1,
        Id: G:System.Text.StringBuilder.AppendFormat``2(System.IFormatProvider,System.Text.CompositeFormat,``0,``1).TArg1,
        Kind: TypeParameter,
        Name: TArg1,
        ParentId: M:System.Text.StringBuilder.AppendFormat``2(System.IFormatProvider,System.Text.CompositeFormat,``0,``1)
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2,System.ReadOnlySpan{System.Object}): {
    Accessibility: Private,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2,System.ReadOnlySpan{System.Object}),
    Id: M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2,System.ReadOnlySpan{System.Object}),
    IsLocal: false,
    Kind: Method,
    Name: AppendFormat,
    OverloadedMembers: [
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[]),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[]),
      M:System.Text.StringBuilder.AppendFormat``1(System.IFormatProvider,System.Text.CompositeFormat,``0),
      M:System.Text.StringBuilder.AppendFormat``2(System.IFormatProvider,System.Text.CompositeFormat,``0,``1),
      M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.Object[]),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.ReadOnlySpan{System.Object})
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2,System.ReadOnlySpan{System.Object}).provider,
        Id: M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2,System.ReadOnlySpan{System.Object}).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2,System.ReadOnlySpan{System.Object}),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2,System.ReadOnlySpan{System.Object}).format,
        Id: M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2,System.ReadOnlySpan{System.Object}).format,
        Kind: Parameter,
        Name: format,
        ParentId: M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2,System.ReadOnlySpan{System.Object}),
        Type: {
          Id: T:System.Text.CompositeFormat,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2,System.ReadOnlySpan{System.Object}).arg0,
        Id: M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2,System.ReadOnlySpan{System.Object}).arg0,
        Kind: Parameter,
        Name: arg0,
        ParentId: M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2,System.ReadOnlySpan{System.Object}),
        Type: {
          Id: T:System.Text.StringBuilder.AppendFormat.TArg0,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2,System.ReadOnlySpan{System.Object}).arg1,
        Id: M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2,System.ReadOnlySpan{System.Object}).arg1,
        Kind: Parameter,
        Name: arg1,
        ParentId: M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2,System.ReadOnlySpan{System.Object}),
        Type: {
          Id: T:System.Text.StringBuilder.AppendFormat.TArg1,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2,System.ReadOnlySpan{System.Object}).arg2,
        Id: M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2,System.ReadOnlySpan{System.Object}).arg2,
        Kind: Parameter,
        Name: arg2,
        ParentId: M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2,System.ReadOnlySpan{System.Object}),
        Type: {
          Id: T:System.Text.StringBuilder.AppendFormat.TArg2,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2,System.ReadOnlySpan{System.Object}).args,
        Id: M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2,System.ReadOnlySpan{System.Object}).args,
        Kind: Parameter,
        Name: args,
        ParentId: M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2,System.ReadOnlySpan{System.Object}),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Object]],
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2,System.ReadOnlySpan{System.Object}).TArg0,
        Id: G:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2,System.ReadOnlySpan{System.Object}).TArg0,
        Kind: TypeParameter,
        Name: TArg0,
        ParentId: M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2,System.ReadOnlySpan{System.Object})
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2,System.ReadOnlySpan{System.Object}).TArg1,
        Id: G:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2,System.ReadOnlySpan{System.Object}).TArg1,
        Kind: TypeParameter,
        Name: TArg1,
        ParentId: M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2,System.ReadOnlySpan{System.Object})
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2,System.ReadOnlySpan{System.Object}).TArg2,
        Id: G:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2,System.ReadOnlySpan{System.Object}).TArg2,
        Kind: TypeParameter,
        Name: TArg2,
        ParentId: M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2,System.ReadOnlySpan{System.Object})
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2),
    Id: M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2),
    IsLocal: false,
    Kind: Method,
    Name: AppendFormat,
    OverloadedMembers: [
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[]),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[]),
      M:System.Text.StringBuilder.AppendFormat``1(System.IFormatProvider,System.Text.CompositeFormat,``0),
      M:System.Text.StringBuilder.AppendFormat``2(System.IFormatProvider,System.Text.CompositeFormat,``0,``1),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.Object[]),
      M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.Text.CompositeFormat,System.ReadOnlySpan{System.Object}),
      M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2,System.ReadOnlySpan{System.Object})
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2).provider,
        Id: M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2).format,
        Id: M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2).format,
        Kind: Parameter,
        Name: format,
        ParentId: M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2),
        Type: {
          Id: T:System.Text.CompositeFormat,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2).arg0,
        Id: M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2).arg0,
        Kind: Parameter,
        Name: arg0,
        ParentId: M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2),
        Type: {
          Id: T:System.Text.StringBuilder.AppendFormat.TArg0,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2).arg1,
        Id: M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2).arg1,
        Kind: Parameter,
        Name: arg1,
        ParentId: M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2),
        Type: {
          Id: T:System.Text.StringBuilder.AppendFormat.TArg1,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2).arg2,
        Id: M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2).arg2,
        Kind: Parameter,
        Name: arg2,
        ParentId: M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2),
        Type: {
          Id: T:System.Text.StringBuilder.AppendFormat.TArg2,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2).TArg0,
        Id: G:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2).TArg0,
        Kind: TypeParameter,
        Name: TArg0,
        ParentId: M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2)
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2).TArg1,
        Id: G:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2).TArg1,
        Kind: TypeParameter,
        Name: TArg1,
        ParentId: M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2)
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2).TArg2,
        Id: G:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2).TArg2,
        Kind: TypeParameter,
        Name: TArg2,
        ParentId: M:System.Text.StringBuilder.AppendFormat``3(System.IFormatProvider,System.Text.CompositeFormat,``0,``1,``2)
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormatHelper(System.IFormatProvider,System.String,System.ReadOnlySpan{System.Object}): {
    Accessibility: Internal,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormatHelper(System.IFormatProvider,System.String,System.ReadOnlySpan{System.Object}),
    Id: M:System.Text.StringBuilder.AppendFormatHelper(System.IFormatProvider,System.String,System.ReadOnlySpan{System.Object}),
    IsLocal: false,
    Kind: Method,
    Name: AppendFormatHelper,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormatHelper(System.IFormatProvider,System.String,System.ReadOnlySpan{System.Object}).provider,
        Id: M:System.Text.StringBuilder.AppendFormatHelper(System.IFormatProvider,System.String,System.ReadOnlySpan{System.Object}).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Text.StringBuilder.AppendFormatHelper(System.IFormatProvider,System.String,System.ReadOnlySpan{System.Object}),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormatHelper(System.IFormatProvider,System.String,System.ReadOnlySpan{System.Object}).format,
        Id: M:System.Text.StringBuilder.AppendFormatHelper(System.IFormatProvider,System.String,System.ReadOnlySpan{System.Object}).format,
        Kind: Parameter,
        Name: format,
        ParentId: M:System.Text.StringBuilder.AppendFormatHelper(System.IFormatProvider,System.String,System.ReadOnlySpan{System.Object}),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendFormatHelper(System.IFormatProvider,System.String,System.ReadOnlySpan{System.Object}).args,
        Id: M:System.Text.StringBuilder.AppendFormatHelper(System.IFormatProvider,System.String,System.ReadOnlySpan{System.Object}).args,
        Kind: Parameter,
        Name: args,
        ParentId: M:System.Text.StringBuilder.AppendFormatHelper(System.IFormatProvider,System.String,System.ReadOnlySpan{System.Object}),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Object]],
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.#ctor: {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.#ctor,
    Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.#ctor,
    Kind: Constructor,
    Name: .ctor,
    OverloadedMembers: [
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.#ctor(System.Int32,System.Int32,System.Text.StringBuilder),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.#ctor(System.Int32,System.Int32,System.Text.StringBuilder,System.IFormatProvider)
    ],
    ParentId: T:System.Text.StringBuilder.AppendInterpolatedStringHandler
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.#ctor(System.Int32,System.Int32,System.Text.StringBuilder,System.IFormatProvider): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.#ctor(System.Int32,System.Int32,System.Text.StringBuilder,System.IFormatProvider),
    Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.#ctor(System.Int32,System.Int32,System.Text.StringBuilder,System.IFormatProvider),
    Kind: Constructor,
    Name: .ctor,
    OverloadedMembers: [
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.#ctor(System.Int32,System.Int32,System.Text.StringBuilder),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.#ctor
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.#ctor(System.Int32,System.Int32,System.Text.StringBuilder,System.IFormatProvider).literalLength,
        Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.#ctor(System.Int32,System.Int32,System.Text.StringBuilder,System.IFormatProvider).literalLength,
        Kind: Parameter,
        Name: literalLength,
        ParentId: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.#ctor(System.Int32,System.Int32,System.Text.StringBuilder,System.IFormatProvider),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.#ctor(System.Int32,System.Int32,System.Text.StringBuilder,System.IFormatProvider).formattedCount,
        Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.#ctor(System.Int32,System.Int32,System.Text.StringBuilder,System.IFormatProvider).formattedCount,
        Kind: Parameter,
        Name: formattedCount,
        ParentId: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.#ctor(System.Int32,System.Int32,System.Text.StringBuilder,System.IFormatProvider),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.#ctor(System.Int32,System.Int32,System.Text.StringBuilder,System.IFormatProvider).stringBuilder,
        Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.#ctor(System.Int32,System.Int32,System.Text.StringBuilder,System.IFormatProvider).stringBuilder,
        Kind: Parameter,
        Name: stringBuilder,
        ParentId: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.#ctor(System.Int32,System.Int32,System.Text.StringBuilder,System.IFormatProvider),
        Type: {
          Id: T:System.Text.StringBuilder,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.#ctor(System.Int32,System.Int32,System.Text.StringBuilder,System.IFormatProvider).provider,
        Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.#ctor(System.Int32,System.Int32,System.Text.StringBuilder,System.IFormatProvider).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.#ctor(System.Int32,System.Int32,System.Text.StringBuilder,System.IFormatProvider),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder.AppendInterpolatedStringHandler
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.#ctor(System.Int32,System.Int32,System.Text.StringBuilder): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.#ctor(System.Int32,System.Int32,System.Text.StringBuilder),
    Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.#ctor(System.Int32,System.Int32,System.Text.StringBuilder),
    Kind: Constructor,
    Name: .ctor,
    OverloadedMembers: [
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.#ctor(System.Int32,System.Int32,System.Text.StringBuilder,System.IFormatProvider),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.#ctor
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.#ctor(System.Int32,System.Int32,System.Text.StringBuilder).literalLength,
        Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.#ctor(System.Int32,System.Int32,System.Text.StringBuilder).literalLength,
        Kind: Parameter,
        Name: literalLength,
        ParentId: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.#ctor(System.Int32,System.Int32,System.Text.StringBuilder),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.#ctor(System.Int32,System.Int32,System.Text.StringBuilder).formattedCount,
        Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.#ctor(System.Int32,System.Int32,System.Text.StringBuilder).formattedCount,
        Kind: Parameter,
        Name: formattedCount,
        ParentId: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.#ctor(System.Int32,System.Int32,System.Text.StringBuilder),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.#ctor(System.Int32,System.Int32,System.Text.StringBuilder).stringBuilder,
        Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.#ctor(System.Int32,System.Int32,System.Text.StringBuilder).stringBuilder,
        Kind: Parameter,
        Name: stringBuilder,
        ParentId: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.#ctor(System.Int32,System.Int32,System.Text.StringBuilder),
        Type: {
          Id: T:System.Text.StringBuilder,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder.AppendInterpolatedStringHandler
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendCustomFormatter``1(``0,System.String): {
    Accessibility: Private,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.MethodImplAttribute,
        Id: T:System.Runtime.CompilerServices.MethodImplAttribute,
        Kind: Attribute,
        Name: MethodImplAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendCustomFormatter``1(``0,System.String),
    Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendCustomFormatter``1(``0,System.String),
    IsLocal: false,
    Kind: Method,
    Name: AppendCustomFormatter,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendCustomFormatter``1(``0,System.String).value,
        Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendCustomFormatter``1(``0,System.String).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendCustomFormatter``1(``0,System.String),
        Type: {
          Id: T:System.Text.StringBuilder+AppendInterpolatedStringHandler.AppendCustomFormatter.T,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendCustomFormatter``1(``0,System.String).format,
        Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendCustomFormatter``1(``0,System.String).format,
        Kind: Parameter,
        Name: format,
        ParentId: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendCustomFormatter``1(``0,System.String),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder.AppendInterpolatedStringHandler,
    ReturnType: {
      Id: T:System.Void,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendCustomFormatter``1(``0,System.String).T,
        Id: G:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendCustomFormatter``1(``0,System.String).T,
        Kind: TypeParameter,
        Name: T,
        ParentId: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendCustomFormatter``1(``0,System.String)
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.Object,System.Int32,System.String): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.Object,System.Int32,System.String),
    Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.Object,System.Int32,System.String),
    IsLocal: false,
    Kind: Method,
    Name: AppendFormatted,
    OverloadedMembers: [
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.String),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.Int32),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.Int32,System.String),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.ReadOnlySpan{System.Char},System.Int32,System.String),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.String),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.String,System.Int32,System.String)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.Object,System.Int32,System.String).value,
        Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.Object,System.Int32,System.String).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.Object,System.Int32,System.String),
        Type: {
          Id: T:System.Object,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.Object,System.Int32,System.String).alignment,
        Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.Object,System.Int32,System.String).alignment,
        Kind: Parameter,
        Name: alignment,
        OptionalValue: 0,
        ParentId: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.Object,System.Int32,System.String),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.Object,System.Int32,System.String).format,
        Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.Object,System.Int32,System.String).format,
        Kind: Parameter,
        Name: format,
        OptionalValue: <null>,
        ParentId: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.Object,System.Int32,System.String),
        Type: {
          Id: T:System.String,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder.AppendInterpolatedStringHandler,
    ReturnType: {
      Id: T:System.Void,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.ReadOnlySpan{System.Char},System.Int32,System.String): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.ReadOnlySpan{System.Char},System.Int32,System.String),
    Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.ReadOnlySpan{System.Char},System.Int32,System.String),
    IsLocal: false,
    Kind: Method,
    Name: AppendFormatted,
    OverloadedMembers: [
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.String),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.Int32),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.Int32,System.String),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.String),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.String,System.Int32,System.String),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.Object,System.Int32,System.String)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.ReadOnlySpan{System.Char},System.Int32,System.String).value,
        Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.ReadOnlySpan{System.Char},System.Int32,System.String).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.ReadOnlySpan{System.Char},System.Int32,System.String),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Char]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.ReadOnlySpan{System.Char},System.Int32,System.String).alignment,
        Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.ReadOnlySpan{System.Char},System.Int32,System.String).alignment,
        Kind: Parameter,
        Name: alignment,
        OptionalValue: 0,
        ParentId: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.ReadOnlySpan{System.Char},System.Int32,System.String),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.ReadOnlySpan{System.Char},System.Int32,System.String).format,
        Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.ReadOnlySpan{System.Char},System.Int32,System.String).format,
        Kind: Parameter,
        Name: format,
        OptionalValue: <null>,
        ParentId: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.ReadOnlySpan{System.Char},System.Int32,System.String),
        Type: {
          Id: T:System.String,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder.AppendInterpolatedStringHandler,
    ReturnType: {
      Id: T:System.Void,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.ReadOnlySpan{System.Char}): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.ReadOnlySpan{System.Char}),
    Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.ReadOnlySpan{System.Char}),
    IsLocal: false,
    Kind: Method,
    Name: AppendFormatted,
    OverloadedMembers: [
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.String),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.Int32),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.Int32,System.String),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.ReadOnlySpan{System.Char},System.Int32,System.String),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.String),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.String,System.Int32,System.String),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.Object,System.Int32,System.String)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.ReadOnlySpan{System.Char}).value,
        Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.ReadOnlySpan{System.Char}).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.ReadOnlySpan{System.Char}),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Char]],
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder.AppendInterpolatedStringHandler,
    ReturnType: {
      Id: T:System.Void,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.String,System.Int32,System.String): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.String,System.Int32,System.String),
    Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.String,System.Int32,System.String),
    IsLocal: false,
    Kind: Method,
    Name: AppendFormatted,
    OverloadedMembers: [
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.String),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.Int32),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.Int32,System.String),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.ReadOnlySpan{System.Char},System.Int32,System.String),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.String),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.Object,System.Int32,System.String)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.String,System.Int32,System.String).value,
        Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.String,System.Int32,System.String).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.String,System.Int32,System.String),
        Type: {
          Id: T:System.String,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.String,System.Int32,System.String).alignment,
        Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.String,System.Int32,System.String).alignment,
        Kind: Parameter,
        Name: alignment,
        OptionalValue: 0,
        ParentId: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.String,System.Int32,System.String),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.String,System.Int32,System.String).format,
        Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.String,System.Int32,System.String).format,
        Kind: Parameter,
        Name: format,
        OptionalValue: <null>,
        ParentId: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.String,System.Int32,System.String),
        Type: {
          Id: T:System.String,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder.AppendInterpolatedStringHandler,
    ReturnType: {
      Id: T:System.Void,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.String): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.String),
    Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.String),
    IsLocal: false,
    Kind: Method,
    Name: AppendFormatted,
    OverloadedMembers: [
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.String),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.Int32),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.Int32,System.String),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.ReadOnlySpan{System.Char},System.Int32,System.String),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.String,System.Int32,System.String),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.Object,System.Int32,System.String)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.String).value,
        Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.String).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.String),
        Type: {
          Id: T:System.String,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder.AppendInterpolatedStringHandler,
    ReturnType: {
      Id: T:System.Void,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.Int32,System.String): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.Int32,System.String),
    Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.Int32,System.String),
    IsLocal: false,
    Kind: Method,
    Name: AppendFormatted,
    OverloadedMembers: [
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.String),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.Int32),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.ReadOnlySpan{System.Char},System.Int32,System.String),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.String),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.String,System.Int32,System.String),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.Object,System.Int32,System.String)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.Int32,System.String).value,
        Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.Int32,System.String).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.Int32,System.String),
        Type: {
          Id: T:System.Text.StringBuilder+AppendInterpolatedStringHandler.AppendFormatted.T,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.Int32,System.String).alignment,
        Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.Int32,System.String).alignment,
        Kind: Parameter,
        Name: alignment,
        ParentId: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.Int32,System.String),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.Int32,System.String).format,
        Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.Int32,System.String).format,
        Kind: Parameter,
        Name: format,
        ParentId: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.Int32,System.String),
        Type: {
          Id: T:System.String,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder.AppendInterpolatedStringHandler,
    ReturnType: {
      Id: T:System.Void,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.Int32,System.String).T,
        Id: G:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.Int32,System.String).T,
        Kind: TypeParameter,
        Name: T,
        ParentId: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.Int32,System.String)
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.Int32),
    Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.Int32),
    IsLocal: false,
    Kind: Method,
    Name: AppendFormatted,
    OverloadedMembers: [
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.String),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.Int32,System.String),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.ReadOnlySpan{System.Char},System.Int32,System.String),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.String),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.String,System.Int32,System.String),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.Object,System.Int32,System.String)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.Int32).value,
        Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.Int32),
        Type: {
          Id: T:System.Text.StringBuilder+AppendInterpolatedStringHandler.AppendFormatted.T,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.Int32).alignment,
        Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.Int32).alignment,
        Kind: Parameter,
        Name: alignment,
        ParentId: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder.AppendInterpolatedStringHandler,
    ReturnType: {
      Id: T:System.Void,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.Int32).T,
        Id: G:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.Int32).T,
        Kind: TypeParameter,
        Name: T,
        ParentId: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.Int32)
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.String): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.String),
    Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.String),
    IsLocal: false,
    Kind: Method,
    Name: AppendFormatted,
    OverloadedMembers: [
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.Int32),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.Int32,System.String),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.ReadOnlySpan{System.Char},System.Int32,System.String),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.String),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.String,System.Int32,System.String),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.Object,System.Int32,System.String)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.String).value,
        Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.String).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.String),
        Type: {
          Id: T:System.Text.StringBuilder+AppendInterpolatedStringHandler.AppendFormatted.T,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.String).format,
        Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.String).format,
        Kind: Parameter,
        Name: format,
        ParentId: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.String),
        Type: {
          Id: T:System.String,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder.AppendInterpolatedStringHandler,
    ReturnType: {
      Id: T:System.Void,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.String).T,
        Id: G:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.String).T,
        Kind: TypeParameter,
        Name: T,
        ParentId: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.String)
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0),
    Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0),
    IsLocal: false,
    Kind: Method,
    Name: AppendFormatted,
    OverloadedMembers: [
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.String),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.Int32),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0,System.Int32,System.String),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.ReadOnlySpan{System.Char},System.Int32,System.String),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.String),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.String,System.Int32,System.String),
      M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted(System.Object,System.Int32,System.String)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0).value,
        Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0),
        Type: {
          Id: T:System.Text.StringBuilder+AppendInterpolatedStringHandler.AppendFormatted.T,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder.AppendInterpolatedStringHandler,
    ReturnType: {
      Id: T:System.Void,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0).T,
        Id: G:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0).T,
        Kind: TypeParameter,
        Name: T,
        ParentId: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormatted``1(``0)
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormattedWithTempSpace``1(``0,System.Int32,System.String): {
    Accessibility: Private,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormattedWithTempSpace``1(``0,System.Int32,System.String),
    Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormattedWithTempSpace``1(``0,System.Int32,System.String),
    IsLocal: false,
    Kind: Method,
    Name: AppendFormattedWithTempSpace,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormattedWithTempSpace``1(``0,System.Int32,System.String).value,
        Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormattedWithTempSpace``1(``0,System.Int32,System.String).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormattedWithTempSpace``1(``0,System.Int32,System.String),
        Type: {
          Id: T:System.Text.StringBuilder+AppendInterpolatedStringHandler.AppendFormattedWithTempSpace.T,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormattedWithTempSpace``1(``0,System.Int32,System.String).alignment,
        Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormattedWithTempSpace``1(``0,System.Int32,System.String).alignment,
        Kind: Parameter,
        Name: alignment,
        ParentId: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormattedWithTempSpace``1(``0,System.Int32,System.String),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormattedWithTempSpace``1(``0,System.Int32,System.String).format,
        Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormattedWithTempSpace``1(``0,System.Int32,System.String).format,
        Kind: Parameter,
        Name: format,
        ParentId: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormattedWithTempSpace``1(``0,System.Int32,System.String),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder.AppendInterpolatedStringHandler,
    ReturnType: {
      Id: T:System.Void,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormattedWithTempSpace``1(``0,System.Int32,System.String).T,
        Id: G:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormattedWithTempSpace``1(``0,System.Int32,System.String).T,
        Kind: TypeParameter,
        Name: T,
        ParentId: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendFormattedWithTempSpace``1(``0,System.Int32,System.String)
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendLiteral(System.String): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendLiteral(System.String),
    Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendLiteral(System.String),
    IsLocal: false,
    Kind: Method,
    Name: AppendLiteral,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendLiteral(System.String).value,
        Id: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendLiteral(System.String).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.AppendInterpolatedStringHandler.AppendLiteral(System.String),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder.AppendInterpolatedStringHandler,
    ReturnType: {
      Id: T:System.Void,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendJoin(System.Char,System.Object[]): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendJoin(System.Char,System.Object[]),
    Id: M:System.Text.StringBuilder.AppendJoin(System.Char,System.Object[]),
    IsLocal: false,
    Kind: Method,
    Name: AppendJoin,
    OverloadedMembers: [
      M:System.Text.StringBuilder.AppendJoin(System.String,System.Object[]),
      M:System.Text.StringBuilder.AppendJoin``1(System.String,System.Collections.Generic.IEnumerable{``0}),
      M:System.Text.StringBuilder.AppendJoin(System.String,System.String[]),
      M:System.Text.StringBuilder.AppendJoin``1(System.Char,System.Collections.Generic.IEnumerable{``0}),
      M:System.Text.StringBuilder.AppendJoin(System.Char,System.String[])
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendJoin(System.Char,System.Object[]).separator,
        Id: M:System.Text.StringBuilder.AppendJoin(System.Char,System.Object[]).separator,
        Kind: Parameter,
        Name: separator,
        ParentId: M:System.Text.StringBuilder.AppendJoin(System.Char,System.Object[]),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendJoin(System.Char,System.Object[]).values,
        Id: M:System.Text.StringBuilder.AppendJoin(System.Char,System.Object[]).values,
        Kind: Parameter,
        Modifiers: [
          Params
        ],
        Name: values,
        ParentId: M:System.Text.StringBuilder.AppendJoin(System.Char,System.Object[]),
        Type: {
          Id: T:System.Object[],
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendJoin(System.Char,System.String[]): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendJoin(System.Char,System.String[]),
    Id: M:System.Text.StringBuilder.AppendJoin(System.Char,System.String[]),
    IsLocal: false,
    Kind: Method,
    Name: AppendJoin,
    OverloadedMembers: [
      M:System.Text.StringBuilder.AppendJoin(System.String,System.Object[]),
      M:System.Text.StringBuilder.AppendJoin``1(System.String,System.Collections.Generic.IEnumerable{``0}),
      M:System.Text.StringBuilder.AppendJoin(System.String,System.String[]),
      M:System.Text.StringBuilder.AppendJoin(System.Char,System.Object[]),
      M:System.Text.StringBuilder.AppendJoin``1(System.Char,System.Collections.Generic.IEnumerable{``0})
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendJoin(System.Char,System.String[]).separator,
        Id: M:System.Text.StringBuilder.AppendJoin(System.Char,System.String[]).separator,
        Kind: Parameter,
        Name: separator,
        ParentId: M:System.Text.StringBuilder.AppendJoin(System.Char,System.String[]),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendJoin(System.Char,System.String[]).values,
        Id: M:System.Text.StringBuilder.AppendJoin(System.Char,System.String[]).values,
        Kind: Parameter,
        Modifiers: [
          Params
        ],
        Name: values,
        ParentId: M:System.Text.StringBuilder.AppendJoin(System.Char,System.String[]),
        Type: {
          Id: T:System.String[],
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendJoin(System.String,System.Object[]): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendJoin(System.String,System.Object[]),
    Id: M:System.Text.StringBuilder.AppendJoin(System.String,System.Object[]),
    IsLocal: false,
    Kind: Method,
    Name: AppendJoin,
    OverloadedMembers: [
      M:System.Text.StringBuilder.AppendJoin``1(System.String,System.Collections.Generic.IEnumerable{``0}),
      M:System.Text.StringBuilder.AppendJoin(System.String,System.String[]),
      M:System.Text.StringBuilder.AppendJoin(System.Char,System.Object[]),
      M:System.Text.StringBuilder.AppendJoin``1(System.Char,System.Collections.Generic.IEnumerable{``0}),
      M:System.Text.StringBuilder.AppendJoin(System.Char,System.String[])
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendJoin(System.String,System.Object[]).separator,
        Id: M:System.Text.StringBuilder.AppendJoin(System.String,System.Object[]).separator,
        Kind: Parameter,
        Name: separator,
        ParentId: M:System.Text.StringBuilder.AppendJoin(System.String,System.Object[]),
        Type: {
          Id: T:System.String,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendJoin(System.String,System.Object[]).values,
        Id: M:System.Text.StringBuilder.AppendJoin(System.String,System.Object[]).values,
        Kind: Parameter,
        Modifiers: [
          Params
        ],
        Name: values,
        ParentId: M:System.Text.StringBuilder.AppendJoin(System.String,System.Object[]),
        Type: {
          Id: T:System.Object[],
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendJoin(System.String,System.String[]): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendJoin(System.String,System.String[]),
    Id: M:System.Text.StringBuilder.AppendJoin(System.String,System.String[]),
    IsLocal: false,
    Kind: Method,
    Name: AppendJoin,
    OverloadedMembers: [
      M:System.Text.StringBuilder.AppendJoin(System.String,System.Object[]),
      M:System.Text.StringBuilder.AppendJoin``1(System.String,System.Collections.Generic.IEnumerable{``0}),
      M:System.Text.StringBuilder.AppendJoin(System.Char,System.Object[]),
      M:System.Text.StringBuilder.AppendJoin``1(System.Char,System.Collections.Generic.IEnumerable{``0}),
      M:System.Text.StringBuilder.AppendJoin(System.Char,System.String[])
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendJoin(System.String,System.String[]).separator,
        Id: M:System.Text.StringBuilder.AppendJoin(System.String,System.String[]).separator,
        Kind: Parameter,
        Name: separator,
        ParentId: M:System.Text.StringBuilder.AppendJoin(System.String,System.String[]),
        Type: {
          Id: T:System.String,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendJoin(System.String,System.String[]).values,
        Id: M:System.Text.StringBuilder.AppendJoin(System.String,System.String[]).values,
        Kind: Parameter,
        Modifiers: [
          Params
        ],
        Name: values,
        ParentId: M:System.Text.StringBuilder.AppendJoin(System.String,System.String[]),
        Type: {
          Id: T:System.String[],
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendJoin``1(System.Char,System.Collections.Generic.IEnumerable{``0}): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendJoin``1(System.Char,System.Collections.Generic.IEnumerable{``0}),
    Id: M:System.Text.StringBuilder.AppendJoin``1(System.Char,System.Collections.Generic.IEnumerable{``0}),
    IsLocal: false,
    Kind: Method,
    Name: AppendJoin,
    OverloadedMembers: [
      M:System.Text.StringBuilder.AppendJoin(System.String,System.Object[]),
      M:System.Text.StringBuilder.AppendJoin``1(System.String,System.Collections.Generic.IEnumerable{``0}),
      M:System.Text.StringBuilder.AppendJoin(System.String,System.String[]),
      M:System.Text.StringBuilder.AppendJoin(System.Char,System.Object[]),
      M:System.Text.StringBuilder.AppendJoin(System.Char,System.String[])
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendJoin``1(System.Char,System.Collections.Generic.IEnumerable{``0}).separator,
        Id: M:System.Text.StringBuilder.AppendJoin``1(System.Char,System.Collections.Generic.IEnumerable{``0}).separator,
        Kind: Parameter,
        Name: separator,
        ParentId: M:System.Text.StringBuilder.AppendJoin``1(System.Char,System.Collections.Generic.IEnumerable{``0}),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendJoin``1(System.Char,System.Collections.Generic.IEnumerable{``0}).values,
        Id: M:System.Text.StringBuilder.AppendJoin``1(System.Char,System.Collections.Generic.IEnumerable{``0}).values,
        Kind: Parameter,
        Name: values,
        ParentId: M:System.Text.StringBuilder.AppendJoin``1(System.Char,System.Collections.Generic.IEnumerable{``0}),
        Type: {
          Id: T:System.Collections.Generic.IEnumerable`1[[``0]],
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendJoin``1(System.Char,System.Collections.Generic.IEnumerable{``0}).T,
        Id: G:System.Text.StringBuilder.AppendJoin``1(System.Char,System.Collections.Generic.IEnumerable{``0}).T,
        Kind: TypeParameter,
        Name: T,
        ParentId: M:System.Text.StringBuilder.AppendJoin``1(System.Char,System.Collections.Generic.IEnumerable{``0})
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendJoin``1(System.String,System.Collections.Generic.IEnumerable{``0}): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendJoin``1(System.String,System.Collections.Generic.IEnumerable{``0}),
    Id: M:System.Text.StringBuilder.AppendJoin``1(System.String,System.Collections.Generic.IEnumerable{``0}),
    IsLocal: false,
    Kind: Method,
    Name: AppendJoin,
    OverloadedMembers: [
      M:System.Text.StringBuilder.AppendJoin(System.String,System.Object[]),
      M:System.Text.StringBuilder.AppendJoin(System.String,System.String[]),
      M:System.Text.StringBuilder.AppendJoin(System.Char,System.Object[]),
      M:System.Text.StringBuilder.AppendJoin``1(System.Char,System.Collections.Generic.IEnumerable{``0}),
      M:System.Text.StringBuilder.AppendJoin(System.Char,System.String[])
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendJoin``1(System.String,System.Collections.Generic.IEnumerable{``0}).separator,
        Id: M:System.Text.StringBuilder.AppendJoin``1(System.String,System.Collections.Generic.IEnumerable{``0}).separator,
        Kind: Parameter,
        Name: separator,
        ParentId: M:System.Text.StringBuilder.AppendJoin``1(System.String,System.Collections.Generic.IEnumerable{``0}),
        Type: {
          Id: T:System.String,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendJoin``1(System.String,System.Collections.Generic.IEnumerable{``0}).values,
        Id: M:System.Text.StringBuilder.AppendJoin``1(System.String,System.Collections.Generic.IEnumerable{``0}).values,
        Kind: Parameter,
        Name: values,
        ParentId: M:System.Text.StringBuilder.AppendJoin``1(System.String,System.Collections.Generic.IEnumerable{``0}),
        Type: {
          Id: T:System.Collections.Generic.IEnumerable`1[[``0]],
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendJoin``1(System.String,System.Collections.Generic.IEnumerable{``0}).T,
        Id: G:System.Text.StringBuilder.AppendJoin``1(System.String,System.Collections.Generic.IEnumerable{``0}).T,
        Kind: TypeParameter,
        Name: T,
        ParentId: M:System.Text.StringBuilder.AppendJoin``1(System.String,System.Collections.Generic.IEnumerable{``0})
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendJoinCore``1(System.Char@,System.Int32,``0[]): {
    Accessibility: Private,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendJoinCore``1(System.Char@,System.Int32,``0[]),
    Id: M:System.Text.StringBuilder.AppendJoinCore``1(System.Char@,System.Int32,``0[]),
    IsLocal: false,
    Kind: Method,
    Name: AppendJoinCore,
    OverloadedMembers: [
      M:System.Text.StringBuilder.AppendJoinCore``1(System.Char@,System.Int32,System.Collections.Generic.IEnumerable{``0})
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendJoinCore``1(System.Char@,System.Int32,``0[]).separator,
        Id: M:System.Text.StringBuilder.AppendJoinCore``1(System.Char@,System.Int32,``0[]).separator,
        Kind: Parameter,
        Modifiers: [
          Ref
        ],
        Name: separator,
        ParentId: M:System.Text.StringBuilder.AppendJoinCore``1(System.Char@,System.Int32,``0[]),
        Type: {
          Id: T:System.Char&,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendJoinCore``1(System.Char@,System.Int32,``0[]).separatorLength,
        Id: M:System.Text.StringBuilder.AppendJoinCore``1(System.Char@,System.Int32,``0[]).separatorLength,
        Kind: Parameter,
        Name: separatorLength,
        ParentId: M:System.Text.StringBuilder.AppendJoinCore``1(System.Char@,System.Int32,``0[]),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendJoinCore``1(System.Char@,System.Int32,``0[]).values,
        Id: M:System.Text.StringBuilder.AppendJoinCore``1(System.Char@,System.Int32,``0[]).values,
        Kind: Parameter,
        Name: values,
        ParentId: M:System.Text.StringBuilder.AppendJoinCore``1(System.Char@,System.Int32,``0[]),
        Type: {
          Id: T:``0[],
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendJoinCore``1(System.Char@,System.Int32,``0[]).T,
        Id: G:System.Text.StringBuilder.AppendJoinCore``1(System.Char@,System.Int32,``0[]).T,
        Kind: TypeParameter,
        Name: T,
        ParentId: M:System.Text.StringBuilder.AppendJoinCore``1(System.Char@,System.Int32,``0[])
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendJoinCore``1(System.Char@,System.Int32,System.Collections.Generic.IEnumerable{``0}): {
    Accessibility: Private,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendJoinCore``1(System.Char@,System.Int32,System.Collections.Generic.IEnumerable{``0}),
    Id: M:System.Text.StringBuilder.AppendJoinCore``1(System.Char@,System.Int32,System.Collections.Generic.IEnumerable{``0}),
    IsLocal: false,
    Kind: Method,
    Name: AppendJoinCore,
    OverloadedMembers: [
      M:System.Text.StringBuilder.AppendJoinCore``1(System.Char@,System.Int32,``0[])
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendJoinCore``1(System.Char@,System.Int32,System.Collections.Generic.IEnumerable{``0}).separator,
        Id: M:System.Text.StringBuilder.AppendJoinCore``1(System.Char@,System.Int32,System.Collections.Generic.IEnumerable{``0}).separator,
        Kind: Parameter,
        Modifiers: [
          Ref
        ],
        Name: separator,
        ParentId: M:System.Text.StringBuilder.AppendJoinCore``1(System.Char@,System.Int32,System.Collections.Generic.IEnumerable{``0}),
        Type: {
          Id: T:System.Char&,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendJoinCore``1(System.Char@,System.Int32,System.Collections.Generic.IEnumerable{``0}).separatorLength,
        Id: M:System.Text.StringBuilder.AppendJoinCore``1(System.Char@,System.Int32,System.Collections.Generic.IEnumerable{``0}).separatorLength,
        Kind: Parameter,
        Name: separatorLength,
        ParentId: M:System.Text.StringBuilder.AppendJoinCore``1(System.Char@,System.Int32,System.Collections.Generic.IEnumerable{``0}),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendJoinCore``1(System.Char@,System.Int32,System.Collections.Generic.IEnumerable{``0}).values,
        Id: M:System.Text.StringBuilder.AppendJoinCore``1(System.Char@,System.Int32,System.Collections.Generic.IEnumerable{``0}).values,
        Kind: Parameter,
        Name: values,
        ParentId: M:System.Text.StringBuilder.AppendJoinCore``1(System.Char@,System.Int32,System.Collections.Generic.IEnumerable{``0}),
        Type: {
          Id: T:System.Collections.Generic.IEnumerable`1[[``0]],
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendJoinCore``1(System.Char@,System.Int32,System.Collections.Generic.IEnumerable{``0}).T,
        Id: G:System.Text.StringBuilder.AppendJoinCore``1(System.Char@,System.Int32,System.Collections.Generic.IEnumerable{``0}).T,
        Kind: TypeParameter,
        Name: T,
        ParentId: M:System.Text.StringBuilder.AppendJoinCore``1(System.Char@,System.Int32,System.Collections.Generic.IEnumerable{``0})
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendLine: {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendLine,
    Id: M:System.Text.StringBuilder.AppendLine,
    IsLocal: false,
    Kind: Method,
    Name: AppendLine,
    OverloadedMembers: [
      M:System.Text.StringBuilder.AppendLine(System.String),
      M:System.Text.StringBuilder.AppendLine(System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.AppendLine(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@)
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendLine(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendLine(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@),
    Id: M:System.Text.StringBuilder.AppendLine(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@),
    IsLocal: false,
    Kind: Method,
    Name: AppendLine,
    OverloadedMembers: [
      M:System.Text.StringBuilder.AppendLine,
      M:System.Text.StringBuilder.AppendLine(System.String),
      M:System.Text.StringBuilder.AppendLine(System.Text.StringBuilder.AppendInterpolatedStringHandler@)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendLine(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@).provider,
        Id: M:System.Text.StringBuilder.AppendLine(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@).provider,
        Kind: Parameter,
        Name: provider,
        ParentId: M:System.Text.StringBuilder.AppendLine(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@),
        Type: {
          Id: T:System.IFormatProvider,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendLine(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@).handler,
        Id: M:System.Text.StringBuilder.AppendLine(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@).handler,
        Kind: Parameter,
        Modifiers: [
          Ref
        ],
        Name: handler,
        ParentId: M:System.Text.StringBuilder.AppendLine(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@),
        Type: {
          Id: T:System.Text.StringBuilder+AppendInterpolatedStringHandler&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendLine(System.String): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendLine(System.String),
    Id: M:System.Text.StringBuilder.AppendLine(System.String),
    IsLocal: false,
    Kind: Method,
    Name: AppendLine,
    OverloadedMembers: [
      M:System.Text.StringBuilder.AppendLine,
      M:System.Text.StringBuilder.AppendLine(System.Text.StringBuilder.AppendInterpolatedStringHandler@),
      M:System.Text.StringBuilder.AppendLine(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendLine(System.String).value,
        Id: M:System.Text.StringBuilder.AppendLine(System.String).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.AppendLine(System.String),
        Type: {
          Id: T:System.String,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendLine(System.Text.StringBuilder.AppendInterpolatedStringHandler@): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendLine(System.Text.StringBuilder.AppendInterpolatedStringHandler@),
    Id: M:System.Text.StringBuilder.AppendLine(System.Text.StringBuilder.AppendInterpolatedStringHandler@),
    IsLocal: false,
    Kind: Method,
    Name: AppendLine,
    OverloadedMembers: [
      M:System.Text.StringBuilder.AppendLine,
      M:System.Text.StringBuilder.AppendLine(System.String),
      M:System.Text.StringBuilder.AppendLine(System.IFormatProvider,System.Text.StringBuilder.AppendInterpolatedStringHandler@)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendLine(System.Text.StringBuilder.AppendInterpolatedStringHandler@).handler,
        Id: M:System.Text.StringBuilder.AppendLine(System.Text.StringBuilder.AppendInterpolatedStringHandler@).handler,
        Kind: Parameter,
        Modifiers: [
          Ref
        ],
        Name: handler,
        ParentId: M:System.Text.StringBuilder.AppendLine(System.Text.StringBuilder.AppendInterpolatedStringHandler@),
        Type: {
          Id: T:System.Text.StringBuilder+AppendInterpolatedStringHandler&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendSpanFormattable``1(``0): {
    Accessibility: Private,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendSpanFormattable``1(``0),
    Id: M:System.Text.StringBuilder.AppendSpanFormattable``1(``0),
    IsLocal: false,
    Kind: Method,
    Name: AppendSpanFormattable,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendSpanFormattable``1(``0).value,
        Id: M:System.Text.StringBuilder.AppendSpanFormattable``1(``0).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.AppendSpanFormattable``1(``0),
        Type: {
          Id: T:System.Text.StringBuilder.AppendSpanFormattable.T,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendSpanFormattable``1(``0).T,
        Id: G:System.Text.StringBuilder.AppendSpanFormattable``1(``0).T,
        Kind: TypeParameter,
        Name: T,
        ParentId: M:System.Text.StringBuilder.AppendSpanFormattable``1(``0)
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendWithExpansion(System.Char,System.Int32): {
    Accessibility: Private,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendWithExpansion(System.Char,System.Int32),
    Id: M:System.Text.StringBuilder.AppendWithExpansion(System.Char,System.Int32),
    IsLocal: false,
    Kind: Method,
    Name: AppendWithExpansion,
    OverloadedMembers: [
      M:System.Text.StringBuilder.AppendWithExpansion(System.Char),
      M:System.Text.StringBuilder.AppendWithExpansion(System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendWithExpansion(System.Char,System.Int32).value,
        Id: M:System.Text.StringBuilder.AppendWithExpansion(System.Char,System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.AppendWithExpansion(System.Char,System.Int32),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendWithExpansion(System.Char,System.Int32).repeatCount,
        Id: M:System.Text.StringBuilder.AppendWithExpansion(System.Char,System.Int32).repeatCount,
        Kind: Parameter,
        Name: repeatCount,
        ParentId: M:System.Text.StringBuilder.AppendWithExpansion(System.Char,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Void,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendWithExpansion(System.Char): {
    Accessibility: Private,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.MethodImplAttribute,
        Id: T:System.Runtime.CompilerServices.MethodImplAttribute,
        Kind: Attribute,
        Name: MethodImplAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendWithExpansion(System.Char),
    Id: M:System.Text.StringBuilder.AppendWithExpansion(System.Char),
    IsLocal: false,
    Kind: Method,
    Name: AppendWithExpansion,
    OverloadedMembers: [
      M:System.Text.StringBuilder.AppendWithExpansion(System.Char,System.Int32),
      M:System.Text.StringBuilder.AppendWithExpansion(System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendWithExpansion(System.Char).value,
        Id: M:System.Text.StringBuilder.AppendWithExpansion(System.Char).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.AppendWithExpansion(System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Void,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendWithExpansion(System.Char@,System.Int32): {
    Accessibility: Private,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendWithExpansion(System.Char@,System.Int32),
    Id: M:System.Text.StringBuilder.AppendWithExpansion(System.Char@,System.Int32),
    IsLocal: false,
    Kind: Method,
    Name: AppendWithExpansion,
    OverloadedMembers: [
      M:System.Text.StringBuilder.AppendWithExpansion(System.Char,System.Int32),
      M:System.Text.StringBuilder.AppendWithExpansion(System.Char)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendWithExpansion(System.Char@,System.Int32).value,
        Id: M:System.Text.StringBuilder.AppendWithExpansion(System.Char@,System.Int32).value,
        Kind: Parameter,
        Modifiers: [
          Ref
        ],
        Name: value,
        ParentId: M:System.Text.StringBuilder.AppendWithExpansion(System.Char@,System.Int32),
        Type: {
          Id: T:System.Char&,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.AppendWithExpansion(System.Char@,System.Int32).valueCount,
        Id: M:System.Text.StringBuilder.AppendWithExpansion(System.Char@,System.Int32).valueCount,
        Kind: Parameter,
        Name: valueCount,
        ParentId: M:System.Text.StringBuilder.AppendWithExpansion(System.Char@,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Void,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ChunkEnumerator.#ctor: {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ChunkEnumerator.#ctor,
    Id: M:System.Text.StringBuilder.ChunkEnumerator.#ctor,
    Kind: Constructor,
    Name: .ctor,
    OverloadedMembers: [
      M:System.Text.StringBuilder.ChunkEnumerator.#ctor(System.Text.StringBuilder)
    ],
    ParentId: T:System.Text.StringBuilder.ChunkEnumerator
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ChunkEnumerator.#ctor(System.Text.StringBuilder): {
    Accessibility: Internal,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ChunkEnumerator.#ctor(System.Text.StringBuilder),
    Id: M:System.Text.StringBuilder.ChunkEnumerator.#ctor(System.Text.StringBuilder),
    Kind: Constructor,
    Name: .ctor,
    OverloadedMembers: [
      M:System.Text.StringBuilder.ChunkEnumerator.#ctor
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ChunkEnumerator.#ctor(System.Text.StringBuilder).stringBuilder,
        Id: M:System.Text.StringBuilder.ChunkEnumerator.#ctor(System.Text.StringBuilder).stringBuilder,
        Kind: Parameter,
        Name: stringBuilder,
        ParentId: M:System.Text.StringBuilder.ChunkEnumerator.#ctor(System.Text.StringBuilder),
        Type: {
          Id: T:System.Text.StringBuilder,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder.ChunkEnumerator
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ChunkEnumerator.ChunkCount(System.Text.StringBuilder): {
    Accessibility: Private,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ChunkEnumerator.ChunkCount(System.Text.StringBuilder),
    Id: M:System.Text.StringBuilder.ChunkEnumerator.ChunkCount(System.Text.StringBuilder),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Static
    ],
    Name: ChunkCount,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ChunkEnumerator.ChunkCount(System.Text.StringBuilder).stringBuilder,
        Id: M:System.Text.StringBuilder.ChunkEnumerator.ChunkCount(System.Text.StringBuilder).stringBuilder,
        Kind: Parameter,
        Name: stringBuilder,
        ParentId: M:System.Text.StringBuilder.ChunkEnumerator.ChunkCount(System.Text.StringBuilder),
        Type: {
          Id: T:System.Text.StringBuilder,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder.ChunkEnumerator,
    ReturnType: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ChunkEnumerator.GetEnumerator: {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.ComponentModel.EditorBrowsableAttribute,
        Id: T:System.ComponentModel.EditorBrowsableAttribute,
        Kind: Attribute,
        Name: EditorBrowsableAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ChunkEnumerator.GetEnumerator,
    Id: M:System.Text.StringBuilder.ChunkEnumerator.GetEnumerator,
    IsLocal: false,
    Kind: Method,
    Name: GetEnumerator,
    ParentId: T:System.Text.StringBuilder.ChunkEnumerator,
    ReturnType: {
      Id: T:System.Text.StringBuilder+ChunkEnumerator,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ChunkEnumerator.ManyChunkInfo.#ctor(System.Text.StringBuilder,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ChunkEnumerator.ManyChunkInfo.#ctor(System.Text.StringBuilder,System.Int32),
    Id: M:System.Text.StringBuilder.ChunkEnumerator.ManyChunkInfo.#ctor(System.Text.StringBuilder,System.Int32),
    Kind: Constructor,
    Name: .ctor,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ChunkEnumerator.ManyChunkInfo.#ctor(System.Text.StringBuilder,System.Int32).stringBuilder,
        Id: M:System.Text.StringBuilder.ChunkEnumerator.ManyChunkInfo.#ctor(System.Text.StringBuilder,System.Int32).stringBuilder,
        Kind: Parameter,
        Name: stringBuilder,
        ParentId: M:System.Text.StringBuilder.ChunkEnumerator.ManyChunkInfo.#ctor(System.Text.StringBuilder,System.Int32),
        Type: {
          Id: T:System.Text.StringBuilder,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ChunkEnumerator.ManyChunkInfo.#ctor(System.Text.StringBuilder,System.Int32).chunkCount,
        Id: M:System.Text.StringBuilder.ChunkEnumerator.ManyChunkInfo.#ctor(System.Text.StringBuilder,System.Int32).chunkCount,
        Kind: Parameter,
        Name: chunkCount,
        ParentId: M:System.Text.StringBuilder.ChunkEnumerator.ManyChunkInfo.#ctor(System.Text.StringBuilder,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder.ChunkEnumerator.ManyChunkInfo
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ChunkEnumerator.ManyChunkInfo.MoveNext(System.Text.StringBuilder@): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ChunkEnumerator.ManyChunkInfo.MoveNext(System.Text.StringBuilder@),
    Id: M:System.Text.StringBuilder.ChunkEnumerator.ManyChunkInfo.MoveNext(System.Text.StringBuilder@),
    IsLocal: false,
    Kind: Method,
    Name: MoveNext,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ChunkEnumerator.ManyChunkInfo.MoveNext(System.Text.StringBuilder@).current,
        Id: M:System.Text.StringBuilder.ChunkEnumerator.ManyChunkInfo.MoveNext(System.Text.StringBuilder@).current,
        Kind: Parameter,
        Modifiers: [
          Ref
        ],
        Name: current,
        ParentId: M:System.Text.StringBuilder.ChunkEnumerator.ManyChunkInfo.MoveNext(System.Text.StringBuilder@),
        Type: {
          Id: T:System.Text.StringBuilder&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder.ChunkEnumerator.ManyChunkInfo,
    ReturnType: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ChunkEnumerator.MoveNext: {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ChunkEnumerator.MoveNext,
    Id: M:System.Text.StringBuilder.ChunkEnumerator.MoveNext,
    IsLocal: false,
    Kind: Method,
    Name: MoveNext,
    ParentId: T:System.Text.StringBuilder.ChunkEnumerator,
    ReturnType: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Clear: {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Clear,
    Id: M:System.Text.StringBuilder.Clear,
    IsLocal: false,
    Kind: Method,
    Name: Clear,
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32),
    Id: M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32),
    IsLocal: false,
    Kind: Method,
    Name: CopyTo,
    OverloadedMembers: [
      M:System.Text.StringBuilder.CopyTo(System.Int32,System.Span{System.Char},System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32).sourceIndex,
        Id: M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32).sourceIndex,
        Kind: Parameter,
        Name: sourceIndex,
        ParentId: M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32).destination,
        Id: M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32).destination,
        Kind: Parameter,
        Name: destination,
        ParentId: M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32),
        Type: {
          Id: T:System.Char[],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32).destinationIndex,
        Id: M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32).destinationIndex,
        Kind: Parameter,
        Name: destinationIndex,
        ParentId: M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32).count,
        Id: M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32).count,
        Kind: Parameter,
        Name: count,
        ParentId: M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Void,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.CopyTo(System.Int32,System.Span{System.Char},System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.CopyTo(System.Int32,System.Span{System.Char},System.Int32),
    Id: M:System.Text.StringBuilder.CopyTo(System.Int32,System.Span{System.Char},System.Int32),
    IsLocal: false,
    Kind: Method,
    Name: CopyTo,
    OverloadedMembers: [
      M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.CopyTo(System.Int32,System.Span{System.Char},System.Int32).sourceIndex,
        Id: M:System.Text.StringBuilder.CopyTo(System.Int32,System.Span{System.Char},System.Int32).sourceIndex,
        Kind: Parameter,
        Name: sourceIndex,
        ParentId: M:System.Text.StringBuilder.CopyTo(System.Int32,System.Span{System.Char},System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.CopyTo(System.Int32,System.Span{System.Char},System.Int32).destination,
        Id: M:System.Text.StringBuilder.CopyTo(System.Int32,System.Span{System.Char},System.Int32).destination,
        Kind: Parameter,
        Name: destination,
        ParentId: M:System.Text.StringBuilder.CopyTo(System.Int32,System.Span{System.Char},System.Int32),
        Type: {
          Id: T:System.Span`1[[System.Char]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.CopyTo(System.Int32,System.Span{System.Char},System.Int32).count,
        Id: M:System.Text.StringBuilder.CopyTo(System.Int32,System.Span{System.Char},System.Int32).count,
        Kind: Parameter,
        Name: count,
        ParentId: M:System.Text.StringBuilder.CopyTo(System.Int32,System.Span{System.Char},System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Void,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.EnsureCapacity(System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.EnsureCapacity(System.Int32),
    Id: M:System.Text.StringBuilder.EnsureCapacity(System.Int32),
    IsLocal: false,
    Kind: Method,
    Name: EnsureCapacity,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.EnsureCapacity(System.Int32).capacity,
        Id: M:System.Text.StringBuilder.EnsureCapacity(System.Int32).capacity,
        Kind: Parameter,
        Name: capacity,
        ParentId: M:System.Text.StringBuilder.EnsureCapacity(System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Equals(System.ReadOnlySpan{System.Char}): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Equals(System.ReadOnlySpan{System.Char}),
    Id: M:System.Text.StringBuilder.Equals(System.ReadOnlySpan{System.Char}),
    IsLocal: false,
    Kind: Method,
    Name: Equals,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Equals(System.Text.StringBuilder)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Equals(System.ReadOnlySpan{System.Char}).span,
        Id: M:System.Text.StringBuilder.Equals(System.ReadOnlySpan{System.Char}).span,
        Kind: Parameter,
        Name: span,
        ParentId: M:System.Text.StringBuilder.Equals(System.ReadOnlySpan{System.Char}),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Char]],
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Equals(System.Text.StringBuilder): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Equals(System.Text.StringBuilder),
    Id: M:System.Text.StringBuilder.Equals(System.Text.StringBuilder),
    IsLocal: false,
    Kind: Method,
    Name: Equals,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Equals(System.ReadOnlySpan{System.Char})
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Equals(System.Text.StringBuilder).sb,
        Id: M:System.Text.StringBuilder.Equals(System.Text.StringBuilder).sb,
        Kind: Parameter,
        Name: sb,
        ParentId: M:System.Text.StringBuilder.Equals(System.Text.StringBuilder),
        Type: {
          Id: T:System.Text.StringBuilder,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ExpandByABlock(System.Int32): {
    Accessibility: Private,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ExpandByABlock(System.Int32),
    Id: M:System.Text.StringBuilder.ExpandByABlock(System.Int32),
    IsLocal: false,
    Kind: Method,
    Name: ExpandByABlock,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ExpandByABlock(System.Int32).minBlockCharCount,
        Id: M:System.Text.StringBuilder.ExpandByABlock(System.Int32).minBlockCharCount,
        Kind: Parameter,
        Name: minBlockCharCount,
        ParentId: M:System.Text.StringBuilder.ExpandByABlock(System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Void,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.FindChunkForIndex(System.Int32): {
    Accessibility: Private,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.FindChunkForIndex(System.Int32),
    Id: M:System.Text.StringBuilder.FindChunkForIndex(System.Int32),
    IsLocal: false,
    Kind: Method,
    Name: FindChunkForIndex,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.FindChunkForIndex(System.Int32).index,
        Id: M:System.Text.StringBuilder.FindChunkForIndex(System.Int32).index,
        Kind: Parameter,
        Name: index,
        ParentId: M:System.Text.StringBuilder.FindChunkForIndex(System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.GetChunks: {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.GetChunks,
    Id: M:System.Text.StringBuilder.GetChunks,
    IsLocal: false,
    Kind: Method,
    Name: GetChunks,
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder+ChunkEnumerator,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.GetReplaceBufferCapacity(System.Int32): {
    Accessibility: Private,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.GetReplaceBufferCapacity(System.Int32),
    Id: M:System.Text.StringBuilder.GetReplaceBufferCapacity(System.Int32),
    IsLocal: false,
    Kind: Method,
    Name: GetReplaceBufferCapacity,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.GetReplaceBufferCapacity(System.Int32).requiredCapacity,
        Id: M:System.Text.StringBuilder.GetReplaceBufferCapacity(System.Int32).requiredCapacity,
        Kind: Parameter,
        Name: requiredCapacity,
        ParentId: M:System.Text.StringBuilder.GetReplaceBufferCapacity(System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean),
    Id: M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean),
    IsLocal: false,
    Kind: Method,
    Name: Insert,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char},System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.String),
      M:System.Text.StringBuilder.Insert(System.Int32,System.SByte),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Byte),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int16),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char[]),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int64),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Single),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Double),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Object),
      M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean).index,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean).index,
        Kind: Parameter,
        Name: index,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean).value,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean),
        Type: {
          Id: T:System.Boolean,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Byte): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Byte),
    Id: M:System.Text.StringBuilder.Insert(System.Int32,System.Byte),
    IsLocal: false,
    Kind: Method,
    Name: Insert,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char},System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.String),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean),
      M:System.Text.StringBuilder.Insert(System.Int32,System.SByte),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int16),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char[]),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int64),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Single),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Double),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Object),
      M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Byte).index,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.Byte).index,
        Kind: Parameter,
        Name: index,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.Byte),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Byte).value,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.Byte).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.Byte),
        Type: {
          Id: T:System.Byte,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Char): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Char),
    Id: M:System.Text.StringBuilder.Insert(System.Int32,System.Char),
    IsLocal: false,
    Kind: Method,
    Name: Insert,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char},System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.String),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean),
      M:System.Text.StringBuilder.Insert(System.Int32,System.SByte),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Byte),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int16),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char[]),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int64),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Single),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Double),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Object),
      M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Char).index,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.Char).index,
        Kind: Parameter,
        Name: index,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.Char),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Char).value,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.Char).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32),
    Id: M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32),
    IsLocal: false,
    Kind: Method,
    Name: Insert,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char},System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.String),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean),
      M:System.Text.StringBuilder.Insert(System.Int32,System.SByte),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Byte),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int16),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char[]),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int64),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Single),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Double),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Object),
      M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32).index,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32).index,
        Kind: Parameter,
        Name: index,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32).value,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32),
        Type: {
          Id: T:System.Char[],
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32).startIndex,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32).startIndex,
        Kind: Parameter,
        Name: startIndex,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32).charCount,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32).charCount,
        Kind: Parameter,
        Name: charCount,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Char[]): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Char[]),
    Id: M:System.Text.StringBuilder.Insert(System.Int32,System.Char[]),
    IsLocal: false,
    Kind: Method,
    Name: Insert,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char},System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.String),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean),
      M:System.Text.StringBuilder.Insert(System.Int32,System.SByte),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Byte),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int16),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int64),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Single),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Double),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Object),
      M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Char[]).index,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.Char[]).index,
        Kind: Parameter,
        Name: index,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.Char[]),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Char[]).value,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.Char[]).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.Char[]),
        Type: {
          Id: T:System.Char[],
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Char@,System.Int32): {
    Accessibility: Private,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Char@,System.Int32),
    Id: M:System.Text.StringBuilder.Insert(System.Int32,System.Char@,System.Int32),
    IsLocal: false,
    Kind: Method,
    Name: Insert,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char},System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.String),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean),
      M:System.Text.StringBuilder.Insert(System.Int32,System.SByte),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Byte),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int16),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char[]),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int64),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Single),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Double),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Object),
      M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char})
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Char@,System.Int32).index,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.Char@,System.Int32).index,
        Kind: Parameter,
        Name: index,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.Char@,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Char@,System.Int32).value,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.Char@,System.Int32).value,
        Kind: Parameter,
        Modifiers: [
          Ref
        ],
        Name: value,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.Char@,System.Int32),
        Type: {
          Id: T:System.Char&,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Char@,System.Int32).valueCount,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.Char@,System.Int32).valueCount,
        Kind: Parameter,
        Name: valueCount,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.Char@,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Void,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal),
    Id: M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal),
    IsLocal: false,
    Kind: Method,
    Name: Insert,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char},System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.String),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean),
      M:System.Text.StringBuilder.Insert(System.Int32,System.SByte),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Byte),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int16),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char[]),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int64),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Single),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Double),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Object),
      M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal).index,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal).index,
        Kind: Parameter,
        Name: index,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal).value,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal),
        Type: {
          Id: T:System.Decimal,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Double): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Double),
    Id: M:System.Text.StringBuilder.Insert(System.Int32,System.Double),
    IsLocal: false,
    Kind: Method,
    Name: Insert,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char},System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.String),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean),
      M:System.Text.StringBuilder.Insert(System.Int32,System.SByte),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Byte),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int16),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char[]),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int64),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Single),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Object),
      M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Double).index,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.Double).index,
        Kind: Parameter,
        Name: index,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.Double),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Double).value,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.Double).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.Double),
        Type: {
          Id: T:System.Double,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Int16): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Int16),
    Id: M:System.Text.StringBuilder.Insert(System.Int32,System.Int16),
    IsLocal: false,
    Kind: Method,
    Name: Insert,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char},System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.String),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean),
      M:System.Text.StringBuilder.Insert(System.Int32,System.SByte),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Byte),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char[]),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int64),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Single),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Double),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Object),
      M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Int16).index,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.Int16).index,
        Kind: Parameter,
        Name: index,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.Int16),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Int16).value,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.Int16).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.Int16),
        Type: {
          Id: T:System.Int16,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Int32),
    Id: M:System.Text.StringBuilder.Insert(System.Int32,System.Int32),
    IsLocal: false,
    Kind: Method,
    Name: Insert,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char},System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.String),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean),
      M:System.Text.StringBuilder.Insert(System.Int32,System.SByte),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Byte),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int16),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char[]),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int64),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Single),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Double),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Object),
      M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Int32).index,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.Int32).index,
        Kind: Parameter,
        Name: index,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Int32).value,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Int64): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Int64),
    Id: M:System.Text.StringBuilder.Insert(System.Int32,System.Int64),
    IsLocal: false,
    Kind: Method,
    Name: Insert,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char},System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.String),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean),
      M:System.Text.StringBuilder.Insert(System.Int32,System.SByte),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Byte),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int16),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char[]),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Single),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Double),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Object),
      M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Int64).index,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.Int64).index,
        Kind: Parameter,
        Name: index,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.Int64),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Int64).value,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.Int64).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.Int64),
        Type: {
          Id: T:System.Int64,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Object): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Object),
    Id: M:System.Text.StringBuilder.Insert(System.Int32,System.Object),
    IsLocal: false,
    Kind: Method,
    Name: Insert,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char},System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.String),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean),
      M:System.Text.StringBuilder.Insert(System.Int32,System.SByte),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Byte),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int16),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char[]),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int64),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Single),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Double),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64),
      M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Object).index,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.Object).index,
        Kind: Parameter,
        Name: index,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.Object),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Object).value,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.Object).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.Object),
        Type: {
          Id: T:System.Object,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char},System.Int32): {
    Accessibility: Private,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char},System.Int32),
    Id: M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char},System.Int32),
    IsLocal: false,
    Kind: Method,
    Name: Insert,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.String),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean),
      M:System.Text.StringBuilder.Insert(System.Int32,System.SByte),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Byte),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int16),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char[]),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int64),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Single),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Double),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Object),
      M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char},System.Int32).index,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char},System.Int32).index,
        Kind: Parameter,
        Name: index,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char},System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char},System.Int32).value,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char},System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char},System.Int32),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Char]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char},System.Int32).count,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char},System.Int32).count,
        Kind: Parameter,
        Name: count,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char},System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char}): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char}),
    Id: M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char}),
    IsLocal: false,
    Kind: Method,
    Name: Insert,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char},System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.String),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean),
      M:System.Text.StringBuilder.Insert(System.Int32,System.SByte),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Byte),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int16),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char[]),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int64),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Single),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Double),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Object),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char}).index,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char}).index,
        Kind: Parameter,
        Name: index,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char}),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char}).value,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char}).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char}),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Char]],
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.SByte): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.CLSCompliantAttribute,
        Id: T:System.CLSCompliantAttribute,
        Kind: Attribute,
        Name: CLSCompliantAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.SByte),
    Id: M:System.Text.StringBuilder.Insert(System.Int32,System.SByte),
    IsLocal: false,
    Kind: Method,
    Name: Insert,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char},System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.String),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Byte),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int16),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char[]),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int64),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Single),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Double),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Object),
      M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.SByte).index,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.SByte).index,
        Kind: Parameter,
        Name: index,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.SByte),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.SByte).value,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.SByte).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.SByte),
        Type: {
          Id: T:System.SByte,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Single): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Single),
    Id: M:System.Text.StringBuilder.Insert(System.Int32,System.Single),
    IsLocal: false,
    Kind: Method,
    Name: Insert,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char},System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.String),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean),
      M:System.Text.StringBuilder.Insert(System.Int32,System.SByte),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Byte),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int16),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char[]),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int64),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Double),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Object),
      M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Single).index,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.Single).index,
        Kind: Parameter,
        Name: index,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.Single),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.Single).value,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.Single).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.Single),
        Type: {
          Id: T:System.Single,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32),
    Id: M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32),
    IsLocal: false,
    Kind: Method,
    Name: Insert,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char},System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.String),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean),
      M:System.Text.StringBuilder.Insert(System.Int32,System.SByte),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Byte),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int16),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char[]),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int64),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Single),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Double),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Object),
      M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32).index,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32).index,
        Kind: Parameter,
        Name: index,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32).value,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32),
        Type: {
          Id: T:System.String,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32).count,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32).count,
        Kind: Parameter,
        Name: count,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.String): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.String),
    Id: M:System.Text.StringBuilder.Insert(System.Int32,System.String),
    IsLocal: false,
    Kind: Method,
    Name: Insert,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char},System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean),
      M:System.Text.StringBuilder.Insert(System.Int32,System.SByte),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Byte),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int16),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char[]),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int64),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Single),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Double),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Object),
      M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.String).index,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.String).index,
        Kind: Parameter,
        Name: index,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.String),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.String).value,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.String).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.String),
        Type: {
          Id: T:System.String,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.CLSCompliantAttribute,
        Id: T:System.CLSCompliantAttribute,
        Kind: Attribute,
        Name: CLSCompliantAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16),
    Id: M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16),
    IsLocal: false,
    Kind: Method,
    Name: Insert,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char},System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.String),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean),
      M:System.Text.StringBuilder.Insert(System.Int32,System.SByte),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Byte),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int16),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char[]),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int64),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Single),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Double),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Object),
      M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16).index,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16).index,
        Kind: Parameter,
        Name: index,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16).value,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16),
        Type: {
          Id: T:System.UInt16,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.CLSCompliantAttribute,
        Id: T:System.CLSCompliantAttribute,
        Kind: Attribute,
        Name: CLSCompliantAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32),
    Id: M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32),
    IsLocal: false,
    Kind: Method,
    Name: Insert,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char},System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.String),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean),
      M:System.Text.StringBuilder.Insert(System.Int32,System.SByte),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Byte),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int16),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char[]),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int64),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Single),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Double),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Object),
      M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32).index,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32).index,
        Kind: Parameter,
        Name: index,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32).value,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32),
        Type: {
          Id: T:System.UInt32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.CLSCompliantAttribute,
        Id: T:System.CLSCompliantAttribute,
        Kind: Attribute,
        Name: CLSCompliantAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64),
    Id: M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64),
    IsLocal: false,
    Kind: Method,
    Name: Insert,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char},System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.String),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean),
      M:System.Text.StringBuilder.Insert(System.Int32,System.SByte),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Byte),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int16),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char[]),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Int64),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Single),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Double),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16),
      M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Object),
      M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char}),
      M:System.Text.StringBuilder.Insert(System.Int32,System.Char@,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64).index,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64).index,
        Kind: Parameter,
        Name: index,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64).value,
        Id: M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64),
        Type: {
          Id: T:System.UInt64,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.InsertSpanFormattable``1(System.Int32,``0): {
    Accessibility: Private,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.InsertSpanFormattable``1(System.Int32,``0),
    Id: M:System.Text.StringBuilder.InsertSpanFormattable``1(System.Int32,``0),
    IsLocal: false,
    Kind: Method,
    Name: InsertSpanFormattable,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.InsertSpanFormattable``1(System.Int32,``0).index,
        Id: M:System.Text.StringBuilder.InsertSpanFormattable``1(System.Int32,``0).index,
        Kind: Parameter,
        Name: index,
        ParentId: M:System.Text.StringBuilder.InsertSpanFormattable``1(System.Int32,``0),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.InsertSpanFormattable``1(System.Int32,``0).value,
        Id: M:System.Text.StringBuilder.InsertSpanFormattable``1(System.Int32,``0).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.InsertSpanFormattable``1(System.Int32,``0),
        Type: {
          Id: T:System.Text.StringBuilder.InsertSpanFormattable.T,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    },
    TypeParameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.InsertSpanFormattable``1(System.Int32,``0).T,
        Id: G:System.Text.StringBuilder.InsertSpanFormattable``1(System.Int32,``0).T,
        Kind: TypeParameter,
        Name: T,
        ParentId: M:System.Text.StringBuilder.InsertSpanFormattable``1(System.Int32,``0)
      }
    ]
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.InternalCopy(nint,System.Int32): {
    Accessibility: Internal,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.InternalCopy(nint,System.Int32),
    Id: M:System.Text.StringBuilder.InternalCopy(nint,System.Int32),
    IsLocal: false,
    Kind: Method,
    Name: InternalCopy,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.InternalCopy(nint,System.Int32).dest,
        Id: M:System.Text.StringBuilder.InternalCopy(nint,System.Int32).dest,
        Kind: Parameter,
        Name: dest,
        ParentId: M:System.Text.StringBuilder.InternalCopy(nint,System.Int32),
        Type: {
          Id: T:nint,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.InternalCopy(nint,System.Int32).charLen,
        Id: M:System.Text.StringBuilder.InternalCopy(nint,System.Int32).charLen,
        Kind: Parameter,
        Name: charLen,
        ParentId: M:System.Text.StringBuilder.InternalCopy(nint,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Void,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.MakeRoom(System.Int32,System.Int32,System.Text.StringBuilder@,System.Int32@,System.Boolean): {
    Accessibility: Private,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.MakeRoom(System.Int32,System.Int32,System.Text.StringBuilder@,System.Int32@,System.Boolean),
    Id: M:System.Text.StringBuilder.MakeRoom(System.Int32,System.Int32,System.Text.StringBuilder@,System.Int32@,System.Boolean),
    IsLocal: false,
    Kind: Method,
    Name: MakeRoom,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.MakeRoom(System.Int32,System.Int32,System.Text.StringBuilder@,System.Int32@,System.Boolean).index,
        Id: M:System.Text.StringBuilder.MakeRoom(System.Int32,System.Int32,System.Text.StringBuilder@,System.Int32@,System.Boolean).index,
        Kind: Parameter,
        Name: index,
        ParentId: M:System.Text.StringBuilder.MakeRoom(System.Int32,System.Int32,System.Text.StringBuilder@,System.Int32@,System.Boolean),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.MakeRoom(System.Int32,System.Int32,System.Text.StringBuilder@,System.Int32@,System.Boolean).count,
        Id: M:System.Text.StringBuilder.MakeRoom(System.Int32,System.Int32,System.Text.StringBuilder@,System.Int32@,System.Boolean).count,
        Kind: Parameter,
        Name: count,
        ParentId: M:System.Text.StringBuilder.MakeRoom(System.Int32,System.Int32,System.Text.StringBuilder@,System.Int32@,System.Boolean),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.MakeRoom(System.Int32,System.Int32,System.Text.StringBuilder@,System.Int32@,System.Boolean).chunk,
        Id: M:System.Text.StringBuilder.MakeRoom(System.Int32,System.Int32,System.Text.StringBuilder@,System.Int32@,System.Boolean).chunk,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: chunk,
        ParentId: M:System.Text.StringBuilder.MakeRoom(System.Int32,System.Int32,System.Text.StringBuilder@,System.Int32@,System.Boolean),
        Type: {
          Id: T:System.Text.StringBuilder&,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.MakeRoom(System.Int32,System.Int32,System.Text.StringBuilder@,System.Int32@,System.Boolean).indexInChunk,
        Id: M:System.Text.StringBuilder.MakeRoom(System.Int32,System.Int32,System.Text.StringBuilder@,System.Int32@,System.Boolean).indexInChunk,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: indexInChunk,
        ParentId: M:System.Text.StringBuilder.MakeRoom(System.Int32,System.Int32,System.Text.StringBuilder@,System.Int32@,System.Boolean),
        Type: {
          Id: T:System.Int32&,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.MakeRoom(System.Int32,System.Int32,System.Text.StringBuilder@,System.Int32@,System.Boolean).doNotMoveFollowingChars,
        Id: M:System.Text.StringBuilder.MakeRoom(System.Int32,System.Int32,System.Text.StringBuilder@,System.Int32@,System.Boolean).doNotMoveFollowingChars,
        Kind: Parameter,
        Name: doNotMoveFollowingChars,
        ParentId: M:System.Text.StringBuilder.MakeRoom(System.Int32,System.Int32,System.Text.StringBuilder@,System.Int32@,System.Boolean),
        Type: {
          Id: T:System.Boolean,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Void,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Next(System.Text.StringBuilder): {
    Accessibility: Private,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Next(System.Text.StringBuilder),
    Id: M:System.Text.StringBuilder.Next(System.Text.StringBuilder),
    IsLocal: false,
    Kind: Method,
    Name: Next,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Next(System.Text.StringBuilder).chunk,
        Id: M:System.Text.StringBuilder.Next(System.Text.StringBuilder).chunk,
        Kind: Parameter,
        Name: chunk,
        ParentId: M:System.Text.StringBuilder.Next(System.Text.StringBuilder),
        Type: {
          Id: T:System.Text.StringBuilder,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Remove(System.Int32,System.Int32,System.Text.StringBuilder@,System.Int32@): {
    Accessibility: Private,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Remove(System.Int32,System.Int32,System.Text.StringBuilder@,System.Int32@),
    Id: M:System.Text.StringBuilder.Remove(System.Int32,System.Int32,System.Text.StringBuilder@,System.Int32@),
    IsLocal: false,
    Kind: Method,
    Name: Remove,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Remove(System.Int32,System.Int32,System.Text.StringBuilder@,System.Int32@).startIndex,
        Id: M:System.Text.StringBuilder.Remove(System.Int32,System.Int32,System.Text.StringBuilder@,System.Int32@).startIndex,
        Kind: Parameter,
        Name: startIndex,
        ParentId: M:System.Text.StringBuilder.Remove(System.Int32,System.Int32,System.Text.StringBuilder@,System.Int32@),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Remove(System.Int32,System.Int32,System.Text.StringBuilder@,System.Int32@).count,
        Id: M:System.Text.StringBuilder.Remove(System.Int32,System.Int32,System.Text.StringBuilder@,System.Int32@).count,
        Kind: Parameter,
        Name: count,
        ParentId: M:System.Text.StringBuilder.Remove(System.Int32,System.Int32,System.Text.StringBuilder@,System.Int32@),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Remove(System.Int32,System.Int32,System.Text.StringBuilder@,System.Int32@).chunk,
        Id: M:System.Text.StringBuilder.Remove(System.Int32,System.Int32,System.Text.StringBuilder@,System.Int32@).chunk,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: chunk,
        ParentId: M:System.Text.StringBuilder.Remove(System.Int32,System.Int32,System.Text.StringBuilder@,System.Int32@),
        Type: {
          Id: T:System.Text.StringBuilder&,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Remove(System.Int32,System.Int32,System.Text.StringBuilder@,System.Int32@).indexInChunk,
        Id: M:System.Text.StringBuilder.Remove(System.Int32,System.Int32,System.Text.StringBuilder@,System.Int32@).indexInChunk,
        Kind: Parameter,
        Modifiers: [
          Out
        ],
        Name: indexInChunk,
        ParentId: M:System.Text.StringBuilder.Remove(System.Int32,System.Int32,System.Text.StringBuilder@,System.Int32@),
        Type: {
          Id: T:System.Int32&,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Void,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Remove(System.Int32,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Remove(System.Int32,System.Int32),
    Id: M:System.Text.StringBuilder.Remove(System.Int32,System.Int32),
    IsLocal: false,
    Kind: Method,
    Name: Remove,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Remove(System.Int32,System.Int32,System.Text.StringBuilder@,System.Int32@)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Remove(System.Int32,System.Int32).startIndex,
        Id: M:System.Text.StringBuilder.Remove(System.Int32,System.Int32).startIndex,
        Kind: Parameter,
        Name: startIndex,
        ParentId: M:System.Text.StringBuilder.Remove(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Remove(System.Int32,System.Int32).length,
        Id: M:System.Text.StringBuilder.Remove(System.Int32,System.Int32).length,
        Kind: Parameter,
        Name: length,
        ParentId: M:System.Text.StringBuilder.Remove(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32),
    Id: M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32),
    IsLocal: false,
    Kind: Method,
    Name: Replace,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Replace(System.String,System.String),
      M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Replace(System.Char,System.Char)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32).oldChar,
        Id: M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32).oldChar,
        Kind: Parameter,
        Name: oldChar,
        ParentId: M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32).newChar,
        Id: M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32).newChar,
        Kind: Parameter,
        Name: newChar,
        ParentId: M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32).startIndex,
        Id: M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32).startIndex,
        Kind: Parameter,
        Name: startIndex,
        ParentId: M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32).count,
        Id: M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32).count,
        Kind: Parameter,
        Name: count,
        ParentId: M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Replace(System.Char,System.Char): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Replace(System.Char,System.Char),
    Id: M:System.Text.StringBuilder.Replace(System.Char,System.Char),
    IsLocal: false,
    Kind: Method,
    Name: Replace,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Replace(System.String,System.String),
      M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Replace(System.Char,System.Char).oldChar,
        Id: M:System.Text.StringBuilder.Replace(System.Char,System.Char).oldChar,
        Kind: Parameter,
        Name: oldChar,
        ParentId: M:System.Text.StringBuilder.Replace(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Replace(System.Char,System.Char).newChar,
        Id: M:System.Text.StringBuilder.Replace(System.Char,System.Char).newChar,
        Kind: Parameter,
        Name: newChar,
        ParentId: M:System.Text.StringBuilder.Replace(System.Char,System.Char),
        Type: {
          Id: T:System.Char,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32),
    Id: M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32),
    IsLocal: false,
    Kind: Method,
    Name: Replace,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Replace(System.String,System.String),
      M:System.Text.StringBuilder.Replace(System.Char,System.Char),
      M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32).oldValue,
        Id: M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32).oldValue,
        Kind: Parameter,
        Name: oldValue,
        ParentId: M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32).newValue,
        Id: M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32).newValue,
        Kind: Parameter,
        Name: newValue,
        ParentId: M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32),
        Type: {
          Id: T:System.String,
          IsNullable: true
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32).startIndex,
        Id: M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32).startIndex,
        Kind: Parameter,
        Name: startIndex,
        ParentId: M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32).count,
        Id: M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32).count,
        Kind: Parameter,
        Name: count,
        ParentId: M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Replace(System.String,System.String): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Replace(System.String,System.String),
    Id: M:System.Text.StringBuilder.Replace(System.String,System.String),
    IsLocal: false,
    Kind: Method,
    Name: Replace,
    OverloadedMembers: [
      M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32),
      M:System.Text.StringBuilder.Replace(System.Char,System.Char),
      M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Replace(System.String,System.String).oldValue,
        Id: M:System.Text.StringBuilder.Replace(System.String,System.String).oldValue,
        Kind: Parameter,
        Name: oldValue,
        ParentId: M:System.Text.StringBuilder.Replace(System.String,System.String),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.Replace(System.String,System.String).newValue,
        Id: M:System.Text.StringBuilder.Replace(System.String,System.String).newValue,
        Kind: Parameter,
        Name: newValue,
        ParentId: M:System.Text.StringBuilder.Replace(System.String,System.String),
        Type: {
          Id: T:System.String,
          IsNullable: true
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Text.StringBuilder,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ReplaceAllInChunk(System.ReadOnlySpan{System.Int32},System.Text.StringBuilder,System.Int32,System.String): {
    Accessibility: Private,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ReplaceAllInChunk(System.ReadOnlySpan{System.Int32},System.Text.StringBuilder,System.Int32,System.String),
    Id: M:System.Text.StringBuilder.ReplaceAllInChunk(System.ReadOnlySpan{System.Int32},System.Text.StringBuilder,System.Int32,System.String),
    IsLocal: false,
    Kind: Method,
    Name: ReplaceAllInChunk,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ReplaceAllInChunk(System.ReadOnlySpan{System.Int32},System.Text.StringBuilder,System.Int32,System.String).replacements,
        Id: M:System.Text.StringBuilder.ReplaceAllInChunk(System.ReadOnlySpan{System.Int32},System.Text.StringBuilder,System.Int32,System.String).replacements,
        Kind: Parameter,
        Name: replacements,
        ParentId: M:System.Text.StringBuilder.ReplaceAllInChunk(System.ReadOnlySpan{System.Int32},System.Text.StringBuilder,System.Int32,System.String),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Int32]],
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ReplaceAllInChunk(System.ReadOnlySpan{System.Int32},System.Text.StringBuilder,System.Int32,System.String).sourceChunk,
        Id: M:System.Text.StringBuilder.ReplaceAllInChunk(System.ReadOnlySpan{System.Int32},System.Text.StringBuilder,System.Int32,System.String).sourceChunk,
        Kind: Parameter,
        Name: sourceChunk,
        ParentId: M:System.Text.StringBuilder.ReplaceAllInChunk(System.ReadOnlySpan{System.Int32},System.Text.StringBuilder,System.Int32,System.String),
        Type: {
          Id: T:System.Text.StringBuilder,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ReplaceAllInChunk(System.ReadOnlySpan{System.Int32},System.Text.StringBuilder,System.Int32,System.String).removeCount,
        Id: M:System.Text.StringBuilder.ReplaceAllInChunk(System.ReadOnlySpan{System.Int32},System.Text.StringBuilder,System.Int32,System.String).removeCount,
        Kind: Parameter,
        Name: removeCount,
        ParentId: M:System.Text.StringBuilder.ReplaceAllInChunk(System.ReadOnlySpan{System.Int32},System.Text.StringBuilder,System.Int32,System.String),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ReplaceAllInChunk(System.ReadOnlySpan{System.Int32},System.Text.StringBuilder,System.Int32,System.String).value,
        Id: M:System.Text.StringBuilder.ReplaceAllInChunk(System.ReadOnlySpan{System.Int32},System.Text.StringBuilder,System.Int32,System.String).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.ReplaceAllInChunk(System.ReadOnlySpan{System.Int32},System.Text.StringBuilder,System.Int32,System.String),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Void,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ReplaceBufferAnsiInternal(System.SByte*,System.Int32): {
    Accessibility: Internal,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ReplaceBufferAnsiInternal(System.SByte*,System.Int32),
    Id: M:System.Text.StringBuilder.ReplaceBufferAnsiInternal(System.SByte*,System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Unsafe
    ],
    Name: ReplaceBufferAnsiInternal,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ReplaceBufferAnsiInternal(System.SByte*,System.Int32).newBuffer,
        Id: M:System.Text.StringBuilder.ReplaceBufferAnsiInternal(System.SByte*,System.Int32).newBuffer,
        Kind: Parameter,
        Name: newBuffer,
        ParentId: M:System.Text.StringBuilder.ReplaceBufferAnsiInternal(System.SByte*,System.Int32),
        Type: {
          Id: T:System.SByte*,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ReplaceBufferAnsiInternal(System.SByte*,System.Int32).newLength,
        Id: M:System.Text.StringBuilder.ReplaceBufferAnsiInternal(System.SByte*,System.Int32).newLength,
        Kind: Parameter,
        Name: newLength,
        ParentId: M:System.Text.StringBuilder.ReplaceBufferAnsiInternal(System.SByte*,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Void,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ReplaceBufferInternal(System.Char*,System.Int32): {
    Accessibility: Internal,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ReplaceBufferInternal(System.Char*,System.Int32),
    Id: M:System.Text.StringBuilder.ReplaceBufferInternal(System.Char*,System.Int32),
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Unsafe
    ],
    Name: ReplaceBufferInternal,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ReplaceBufferInternal(System.Char*,System.Int32).newBuffer,
        Id: M:System.Text.StringBuilder.ReplaceBufferInternal(System.Char*,System.Int32).newBuffer,
        Kind: Parameter,
        Name: newBuffer,
        ParentId: M:System.Text.StringBuilder.ReplaceBufferInternal(System.Char*,System.Int32),
        Type: {
          Id: T:System.Char*,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ReplaceBufferInternal(System.Char*,System.Int32).newLength,
        Id: M:System.Text.StringBuilder.ReplaceBufferInternal(System.Char*,System.Int32).newLength,
        Kind: Parameter,
        Name: newLength,
        ParentId: M:System.Text.StringBuilder.ReplaceBufferInternal(System.Char*,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Void,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ReplaceBufferUtf8Internal(System.ReadOnlySpan{System.Byte}): {
    Accessibility: Internal,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ReplaceBufferUtf8Internal(System.ReadOnlySpan{System.Byte}),
    Id: M:System.Text.StringBuilder.ReplaceBufferUtf8Internal(System.ReadOnlySpan{System.Byte}),
    IsLocal: false,
    Kind: Method,
    Name: ReplaceBufferUtf8Internal,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ReplaceBufferUtf8Internal(System.ReadOnlySpan{System.Byte}).source,
        Id: M:System.Text.StringBuilder.ReplaceBufferUtf8Internal(System.ReadOnlySpan{System.Byte}).source,
        Kind: Parameter,
        Name: source,
        ParentId: M:System.Text.StringBuilder.ReplaceBufferUtf8Internal(System.ReadOnlySpan{System.Byte}),
        Type: {
          Id: T:System.ReadOnlySpan`1[[System.Byte]],
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Void,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ReplaceInPlaceAtChunk(System.Text.StringBuilder@,System.Int32@,System.Char@,System.Int32): {
    Accessibility: Private,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ReplaceInPlaceAtChunk(System.Text.StringBuilder@,System.Int32@,System.Char@,System.Int32),
    Id: M:System.Text.StringBuilder.ReplaceInPlaceAtChunk(System.Text.StringBuilder@,System.Int32@,System.Char@,System.Int32),
    IsLocal: false,
    Kind: Method,
    Name: ReplaceInPlaceAtChunk,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ReplaceInPlaceAtChunk(System.Text.StringBuilder@,System.Int32@,System.Char@,System.Int32).chunk,
        Id: M:System.Text.StringBuilder.ReplaceInPlaceAtChunk(System.Text.StringBuilder@,System.Int32@,System.Char@,System.Int32).chunk,
        Kind: Parameter,
        Modifiers: [
          Ref
        ],
        Name: chunk,
        ParentId: M:System.Text.StringBuilder.ReplaceInPlaceAtChunk(System.Text.StringBuilder@,System.Int32@,System.Char@,System.Int32),
        Type: {
          Id: T:System.Text.StringBuilder&,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ReplaceInPlaceAtChunk(System.Text.StringBuilder@,System.Int32@,System.Char@,System.Int32).indexInChunk,
        Id: M:System.Text.StringBuilder.ReplaceInPlaceAtChunk(System.Text.StringBuilder@,System.Int32@,System.Char@,System.Int32).indexInChunk,
        Kind: Parameter,
        Modifiers: [
          Ref
        ],
        Name: indexInChunk,
        ParentId: M:System.Text.StringBuilder.ReplaceInPlaceAtChunk(System.Text.StringBuilder@,System.Int32@,System.Char@,System.Int32),
        Type: {
          Id: T:System.Int32&,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ReplaceInPlaceAtChunk(System.Text.StringBuilder@,System.Int32@,System.Char@,System.Int32).value,
        Id: M:System.Text.StringBuilder.ReplaceInPlaceAtChunk(System.Text.StringBuilder@,System.Int32@,System.Char@,System.Int32).value,
        Kind: Parameter,
        Modifiers: [
          Ref
        ],
        Name: value,
        ParentId: M:System.Text.StringBuilder.ReplaceInPlaceAtChunk(System.Text.StringBuilder@,System.Int32@,System.Char@,System.Int32),
        Type: {
          Id: T:System.Char&,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ReplaceInPlaceAtChunk(System.Text.StringBuilder@,System.Int32@,System.Char@,System.Int32).count,
        Id: M:System.Text.StringBuilder.ReplaceInPlaceAtChunk(System.Text.StringBuilder@,System.Int32@,System.Char@,System.Int32).count,
        Kind: Parameter,
        Name: count,
        ParentId: M:System.Text.StringBuilder.ReplaceInPlaceAtChunk(System.Text.StringBuilder@,System.Int32@,System.Char@,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Void,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.StartsWith(System.Text.StringBuilder,System.Int32,System.Int32,System.String): {
    Accessibility: Private,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.StartsWith(System.Text.StringBuilder,System.Int32,System.Int32,System.String),
    Id: M:System.Text.StringBuilder.StartsWith(System.Text.StringBuilder,System.Int32,System.Int32,System.String),
    IsLocal: false,
    Kind: Method,
    Name: StartsWith,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.StartsWith(System.Text.StringBuilder,System.Int32,System.Int32,System.String).chunk,
        Id: M:System.Text.StringBuilder.StartsWith(System.Text.StringBuilder,System.Int32,System.Int32,System.String).chunk,
        Kind: Parameter,
        Name: chunk,
        ParentId: M:System.Text.StringBuilder.StartsWith(System.Text.StringBuilder,System.Int32,System.Int32,System.String),
        Type: {
          Id: T:System.Text.StringBuilder,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.StartsWith(System.Text.StringBuilder,System.Int32,System.Int32,System.String).indexInChunk,
        Id: M:System.Text.StringBuilder.StartsWith(System.Text.StringBuilder,System.Int32,System.Int32,System.String).indexInChunk,
        Kind: Parameter,
        Name: indexInChunk,
        ParentId: M:System.Text.StringBuilder.StartsWith(System.Text.StringBuilder,System.Int32,System.Int32,System.String),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.StartsWith(System.Text.StringBuilder,System.Int32,System.Int32,System.String).count,
        Id: M:System.Text.StringBuilder.StartsWith(System.Text.StringBuilder,System.Int32,System.Int32,System.String).count,
        Kind: Parameter,
        Name: count,
        ParentId: M:System.Text.StringBuilder.StartsWith(System.Text.StringBuilder,System.Int32,System.Int32,System.String),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.StartsWith(System.Text.StringBuilder,System.Int32,System.Int32,System.String).value,
        Id: M:System.Text.StringBuilder.StartsWith(System.Text.StringBuilder,System.Int32,System.Int32,System.String).value,
        Kind: Parameter,
        Name: value,
        ParentId: M:System.Text.StringBuilder.StartsWith(System.Text.StringBuilder,System.Int32,System.Int32,System.String),
        Type: {
          Id: T:System.String,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Boolean,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext): {
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext),
    Id: M:System.Text.StringBuilder.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext),
    IsLocal: false,
    Kind: ExplicitMethod,
    Name: System.Runtime.Serialization.ISerializable.GetObjectData,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext).info,
        Id: M:System.Text.StringBuilder.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext).info,
        Kind: Parameter,
        Name: info,
        ParentId: M:System.Text.StringBuilder.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext),
        Type: {
          Id: T:System.Runtime.Serialization.SerializationInfo,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext).context,
        Id: M:System.Text.StringBuilder.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext).context,
        Kind: Parameter,
        Name: context,
        ParentId: M:System.Text.StringBuilder.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext),
        Type: {
          Id: T:System.Runtime.Serialization.StreamingContext,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Void,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ToString: {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ToString,
    Id: M:System.Text.StringBuilder.ToString,
    IsLocal: false,
    Kind: Method,
    Modifiers: [
      Override
    ],
    Name: ToString,
    OverloadedMembers: [
      M:System.Text.StringBuilder.ToString(System.Int32,System.Int32)
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.String,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ToString(System.Int32,System.Int32): {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ToString(System.Int32,System.Int32),
    Id: M:System.Text.StringBuilder.ToString(System.Int32,System.Int32),
    IsLocal: false,
    Kind: Method,
    Name: ToString,
    OverloadedMembers: [
      M:System.Text.StringBuilder.ToString
    ],
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ToString(System.Int32,System.Int32).startIndex,
        Id: M:System.Text.StringBuilder.ToString(System.Int32,System.Int32).startIndex,
        Kind: Parameter,
        Name: startIndex,
        ParentId: M:System.Text.StringBuilder.ToString(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      },
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ToString(System.Int32,System.Int32).length,
        Id: M:System.Text.StringBuilder.ToString(System.Int32,System.Int32).length,
        Kind: Parameter,
        Name: length,
        ParentId: M:System.Text.StringBuilder.ToString(System.Int32,System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.String,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Text.StringBuilder.Capacity: {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Text.StringBuilder.Capacity,
    Getter: {
      Accessibility: Public,
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.get_Capacity,
      Id: M:System.Text.StringBuilder.get_Capacity,
      IsLocal: false,
      Kind: Method,
      Name: get_Capacity,
      ParentId: T:System.Text.StringBuilder,
      ReturnType: {
        Id: T:System.Int32,
        IsNullable: false
      }
    },
    Id: P:System.Text.StringBuilder.Capacity,
    Kind: Property,
    Name: Capacity,
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Int32,
      IsNullable: false
    },
    Setter: {
      Accessibility: Public,
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.set_Capacity(System.Int32),
      Id: M:System.Text.StringBuilder.set_Capacity(System.Int32),
      IsLocal: false,
      Kind: Method,
      Name: set_Capacity,
      ParentId: T:System.Text.StringBuilder,
      ReturnType: {
        Id: T:System.Void,
        IsNullable: false
      }
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Text.StringBuilder.Chars(System.Int32): {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.Runtime.CompilerServices.IndexerNameAttribute,
        Id: T:System.Runtime.CompilerServices.IndexerNameAttribute,
        Kind: Attribute,
        Name: IndexerNameAttribute
      }
    ],
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Text.StringBuilder.Chars(System.Int32),
    Getter: {
      Accessibility: Public,
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.get_Chars(System.Int32),
      Id: M:System.Text.StringBuilder.get_Chars(System.Int32),
      IsLocal: false,
      Kind: Method,
      Name: get_Chars,
      ParentId: T:System.Text.StringBuilder,
      ReturnType: {
        Id: T:System.Char,
        IsNullable: false
      }
    },
    Id: P:System.Text.StringBuilder.Chars(System.Int32),
    Kind: Indexer,
    Name: Chars,
    Parameters: [
      {
        FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Text.StringBuilder.Chars(System.Int32).index,
        Id: P:System.Text.StringBuilder.Chars(System.Int32).index,
        Kind: Parameter,
        Name: index,
        ParentId: P:System.Text.StringBuilder.Chars(System.Int32),
        Type: {
          Id: T:System.Int32,
          IsNullable: false
        }
      }
    ],
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Char,
      IsNullable: false
    },
    Setter: {
      Accessibility: Public,
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.set_Chars(System.Int32,System.Char),
      Id: M:System.Text.StringBuilder.set_Chars(System.Int32,System.Char),
      IsLocal: false,
      Kind: Method,
      Name: set_Chars,
      ParentId: T:System.Text.StringBuilder,
      ReturnType: {
        Id: T:System.Void,
        IsNullable: false
      }
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Text.StringBuilder.ChunkEnumerator.Current: {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Text.StringBuilder.ChunkEnumerator.Current,
    Getter: {
      Accessibility: Public,
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.ChunkEnumerator.get_Current,
      Id: M:System.Text.StringBuilder.ChunkEnumerator.get_Current,
      IsLocal: false,
      Kind: Method,
      Name: get_Current,
      ParentId: T:System.Text.StringBuilder.ChunkEnumerator,
      ReturnType: {
        Id: T:System.ReadOnlyMemory`1[[System.Char]],
        IsNullable: false
      }
    },
    Id: P:System.Text.StringBuilder.ChunkEnumerator.Current,
    Kind: Property,
    Name: Current,
    ParentId: T:System.Text.StringBuilder.ChunkEnumerator,
    ReturnType: {
      Id: T:System.ReadOnlyMemory`1[[System.Char]],
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Text.StringBuilder.Length: {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Text.StringBuilder.Length,
    Getter: {
      Accessibility: Public,
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.get_Length,
      Id: M:System.Text.StringBuilder.get_Length,
      IsLocal: false,
      Kind: Method,
      Name: get_Length,
      ParentId: T:System.Text.StringBuilder,
      ReturnType: {
        Id: T:System.Int32,
        IsNullable: false
      }
    },
    Id: P:System.Text.StringBuilder.Length,
    Kind: Property,
    Name: Length,
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Int32,
      IsNullable: false
    },
    Setter: {
      Accessibility: Public,
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.set_Length(System.Int32),
      Id: M:System.Text.StringBuilder.set_Length(System.Int32),
      IsLocal: false,
      Kind: Method,
      Name: set_Length,
      ParentId: T:System.Text.StringBuilder,
      ReturnType: {
        Id: T:System.Void,
        IsNullable: false
      }
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Text.StringBuilder.MaxCapacity: {
    Accessibility: Public,
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Text.StringBuilder.MaxCapacity,
    Getter: {
      Accessibility: Public,
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.get_MaxCapacity,
      Id: M:System.Text.StringBuilder.get_MaxCapacity,
      IsLocal: false,
      Kind: Method,
      Name: get_MaxCapacity,
      ParentId: T:System.Text.StringBuilder,
      ReturnType: {
        Id: T:System.Int32,
        IsNullable: false
      }
    },
    Id: P:System.Text.StringBuilder.MaxCapacity,
    Kind: Property,
    Name: MaxCapacity,
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Int32,
      IsNullable: false
    }
  },
  System.Private.CoreLib, Version=x.x.x.x, P:System.Text.StringBuilder.RemainingCurrentChunk: {
    Accessibility: Private,
    FullName: System.Private.CoreLib, Version=x.x.x.x, P:System.Text.StringBuilder.RemainingCurrentChunk,
    Getter: {
      Accessibility: Private,
      FullName: System.Private.CoreLib, Version=x.x.x.x, M:System.Text.StringBuilder.get_RemainingCurrentChunk,
      Id: M:System.Text.StringBuilder.get_RemainingCurrentChunk,
      IsLocal: false,
      Kind: Method,
      Name: get_RemainingCurrentChunk,
      ParentId: T:System.Text.StringBuilder,
      ReturnType: {
        Id: T:System.Span`1[[System.Char]],
        IsNullable: false
      }
    },
    Id: P:System.Text.StringBuilder.RemainingCurrentChunk,
    Kind: Property,
    Name: RemainingCurrentChunk,
    ParentId: T:System.Text.StringBuilder,
    ReturnType: {
      Id: T:System.Span`1[[System.Char]],
      IsNullable: false
    }
  }
}