{
  System.Private.CoreLib, Version=6.0.0.0, T:System.Half: {
    Accessibility: Public,
    Attributes: [
      {
        FullName: System.SerializableAttribute,
        Id: T:System.SerializableAttribute,
        Kind: Attribute,
        Name: SerializableAttribute
      },
      {
        FullName: System.Runtime.CompilerServices.TypeForwardedFromAttribute,
        Id: T:System.Runtime.CompilerServices.TypeForwardedFromAttribute,
        Kind: Attribute,
        Name: TypeForwardedFromAttribute
      },
      {
        FullName: System.SerializableAttribute,
        Id: T:System.SerializableAttribute,
        Kind: Attribute,
        Name: SerializableAttribute
      },
      {
        FullName: System.Runtime.InteropServices.ClassInterfaceAttribute,
        Id: T:System.Runtime.InteropServices.ClassInterfaceAttribute,
        Kind: Attribute,
        Name: ClassInterfaceAttribute
      },
      {
        FullName: System.Runtime.InteropServices.ComVisibleAttribute,
        Id: T:System.Runtime.InteropServices.ComVisibleAttribute,
        Kind: Attribute,
        Name: ComVisibleAttribute
      },
      {
        FullName: System.Runtime.CompilerServices.TypeForwardedFromAttribute,
        Id: T:System.Runtime.CompilerServices.TypeForwardedFromAttribute,
        Kind: Attribute,
        Name: TypeForwardedFromAttribute
      }
    ],
    BaseTypes: [
      T:System.ValueType,
      T:System.Object
    ],
    FullName: System.Private.CoreLib, Version=6.0.0.0, T:System.Half,
    Id: T:System.Half,
    Implementations: [
      T:System.IMinMaxValue`1,
      T:System.IBinaryFloatingPoint`1,
      T:System.IFloatingPoint`1,
      T:System.ISignedNumber`1,
      T:System.IBinaryNumber`1,
      T:System.INumber`1,
      T:System.IUnaryPlusOperators`2,
      T:System.IUnaryNegationOperators`2,
      T:System.ISubtractionOperators`3,
      T:System.ISpanParseable`1,
      T:System.IParseable`1,
      T:System.IMultiplyOperators`3,
      T:System.IMultiplicativeIdentity`2,
      T:System.IModulusOperators`3,
      T:System.IIncrementOperators`1,
      T:System.IDivisionOperators`3,
      T:System.IDecrementOperators`1,
      T:System.IComparisonOperators`2,
      T:System.IEqualityOperators`2,
      T:System.IAdditiveIdentity`2,
      T:System.IAdditionOperators`3,
      T:System.IBitwiseOperators`3,
      T:System.IEquatable`1,
      T:System.IComparable`1,
      T:System.ISpanFormattable,
      T:System.IFormattable,
      T:System.IComparable
    ],
    InheritedMembers: [
      M:System.ValueType.Equals(System.Object),
      M:System.ValueType.CanCompareBits(System.Object),
      M:System.ValueType.FastEqualsCheck(System.Object,System.Object),
      M:System.ValueType.GetHashCode,
      M:System.ValueType.GetHashCodeOfPtr(System.IntPtr),
      M:System.ValueType.ToString,
      M:System.Object.GetType,
      M:System.Object.MemberwiseClone,
      M:System.Object.Finalize,
      M:System.Object.ToString,
      M:System.Object.Equals(System.Object),
      M:System.Object.Equals(System.Object,System.Object),
      M:System.Object.ReferenceEquals(System.Object,System.Object),
      M:System.Object.GetHashCode
    ],
    IsNested: false,
    IsRecord: false,
    Kind: Struct,
    Members: [
      F:System.Half.PositiveZero,
      F:System.Half.NegativeZero,
      F:System.Half._value,
      M:System.Half.#ctor(System.UInt16),
      M:System.Half.#ctor(System.Boolean,System.UInt16,System.UInt16),
      M:System.Half.op_LessThan(System.Half,System.Half),
      M:System.Half.op_GreaterThan(System.Half,System.Half),
      M:System.Half.op_LessThanOrEqual(System.Half,System.Half),
      M:System.Half.op_GreaterThanOrEqual(System.Half,System.Half),
      M:System.Half.op_Equality(System.Half,System.Half),
      M:System.Half.op_Inequality(System.Half,System.Half),
      M:System.Half.IsFinite(System.Half),
      M:System.Half.IsInfinity(System.Half),
      M:System.Half.IsNaN(System.Half),
      M:System.Half.IsNegative(System.Half),
      M:System.Half.IsNegativeInfinity(System.Half),
      M:System.Half.IsNormal(System.Half),
      M:System.Half.IsPositiveInfinity(System.Half),
      M:System.Half.IsSubnormal(System.Half),
      M:System.Half.Parse(System.String),
      M:System.Half.Parse(System.String,System.Globalization.NumberStyles),
      M:System.Half.Parse(System.String,System.IFormatProvider),
      M:System.Half.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Half.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Half.TryParse(System.String,System.Half@),
      M:System.Half.TryParse(System.ReadOnlySpan{System.Char},System.Half@),
      M:System.Half.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Half@),
      M:System.Half.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Half@),
      M:System.Half.AreZero(System.Half,System.Half),
      M:System.Half.IsNaNOrZero(System.Half),
      M:System.Half.StripSign(System.Half),
      M:System.Half.CompareTo(System.Object),
      M:System.Half.CompareTo(System.Half),
      M:System.Half.Equals(System.Object),
      M:System.Half.Equals(System.Half),
      M:System.Half.GetHashCode,
      M:System.Half.ToString,
      M:System.Half.ToString(System.String),
      M:System.Half.ToString(System.IFormatProvider),
      M:System.Half.ToString(System.String,System.IFormatProvider),
      M:System.Half.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider),
      M:System.Half.op_Explicit(System.Single)~System.Half,
      M:System.Half.op_Explicit(System.Double)~System.Half,
      M:System.Half.op_Explicit(System.Half)~System.Single,
      M:System.Half.op_Explicit(System.Half)~System.Double,
      M:System.Half.Negate(System.Half),
      M:System.Half.NormSubnormalF16Sig(System.UInt32),
      M:System.Half.CreateHalfNaN(System.Boolean,System.UInt64),
      M:System.Half.RoundPackToHalf(System.Boolean,System.Int16,System.UInt16),
      M:System.Half.ShiftRightJam(System.UInt32,System.Int32),
      M:System.Half.ShiftRightJam(System.UInt64,System.Int32),
      M:System.Half.CreateSingleNaN(System.Boolean,System.UInt64),
      M:System.Half.CreateDoubleNaN(System.Boolean,System.UInt64),
      M:System.Half.CreateSingle(System.Boolean,System.Byte,System.UInt32),
      M:System.Half.CreateDouble(System.Boolean,System.UInt16,System.UInt64),
      M:System.Half.System#IAdditionOperators{System#Half,System#Half,System#Half}#op_Addition(System.Half,System.Half),
      M:System.Half.System#IBinaryNumber{System#Half}#IsPow2(System.Half),
      M:System.Half.System#IBinaryNumber{System#Half}#Log2(System.Half),
      M:System.Half.System#IBitwiseOperators{System#Half,System#Half,System#Half}#op_BitwiseAnd(System.Half,System.Half),
      M:System.Half.System#IBitwiseOperators{System#Half,System#Half,System#Half}#op_BitwiseOr(System.Half,System.Half),
      M:System.Half.System#IBitwiseOperators{System#Half,System#Half,System#Half}#op_ExclusiveOr(System.Half,System.Half),
      M:System.Half.System#IBitwiseOperators{System#Half,System#Half,System#Half}#op_OnesComplement(System.Half),
      M:System.Half.System#IComparisonOperators{System#Half,System#Half}#op_LessThan(System.Half,System.Half),
      M:System.Half.System#IComparisonOperators{System#Half,System#Half}#op_LessThanOrEqual(System.Half,System.Half),
      M:System.Half.System#IComparisonOperators{System#Half,System#Half}#op_GreaterThan(System.Half,System.Half),
      M:System.Half.System#IComparisonOperators{System#Half,System#Half}#op_GreaterThanOrEqual(System.Half,System.Half),
      M:System.Half.System#IDecrementOperators{System#Half}#op_Decrement(System.Half),
      M:System.Half.System#IEqualityOperators{System#Half,System#Half}#op_Equality(System.Half,System.Half),
      M:System.Half.System#IEqualityOperators{System#Half,System#Half}#op_Inequality(System.Half,System.Half),
      M:System.Half.System#IDivisionOperators{System#Half,System#Half,System#Half}#op_Division(System.Half,System.Half),
      M:System.Half.System#IFloatingPoint{System#Half}#Acos(System.Half),
      M:System.Half.System#IFloatingPoint{System#Half}#Acosh(System.Half),
      M:System.Half.System#IFloatingPoint{System#Half}#Asin(System.Half),
      M:System.Half.System#IFloatingPoint{System#Half}#Asinh(System.Half),
      M:System.Half.System#IFloatingPoint{System#Half}#Atan(System.Half),
      M:System.Half.System#IFloatingPoint{System#Half}#Atan2(System.Half,System.Half),
      M:System.Half.System#IFloatingPoint{System#Half}#Atanh(System.Half),
      M:System.Half.System#IFloatingPoint{System#Half}#BitIncrement(System.Half),
      M:System.Half.System#IFloatingPoint{System#Half}#BitDecrement(System.Half),
      M:System.Half.System#IFloatingPoint{System#Half}#Cbrt(System.Half),
      M:System.Half.System#IFloatingPoint{System#Half}#Ceiling(System.Half),
      M:System.Half.System#IFloatingPoint{System#Half}#CopySign(System.Half,System.Half),
      M:System.Half.System#IFloatingPoint{System#Half}#Cos(System.Half),
      M:System.Half.System#IFloatingPoint{System#Half}#Cosh(System.Half),
      M:System.Half.System#IFloatingPoint{System#Half}#Exp(System.Half),
      M:System.Half.System#IFloatingPoint{System#Half}#Floor(System.Half),
      M:System.Half.System#IFloatingPoint{System#Half}#FusedMultiplyAdd(System.Half,System.Half,System.Half),
      M:System.Half.System#IFloatingPoint{System#Half}#IEEERemainder(System.Half,System.Half),
      M:System.Half.System#IFloatingPoint{System#Half}#ILogB``1(System.Half),
      M:System.Half.System#IFloatingPoint{System#Half}#Log(System.Half),
      M:System.Half.System#IFloatingPoint{System#Half}#Log(System.Half,System.Half),
      M:System.Half.System#IFloatingPoint{System#Half}#Log2(System.Half),
      M:System.Half.System#IFloatingPoint{System#Half}#Log10(System.Half),
      M:System.Half.System#IFloatingPoint{System#Half}#MaxMagnitude(System.Half,System.Half),
      M:System.Half.System#IFloatingPoint{System#Half}#MinMagnitude(System.Half,System.Half),
      M:System.Half.System#IFloatingPoint{System#Half}#Pow(System.Half,System.Half),
      M:System.Half.System#IFloatingPoint{System#Half}#Round(System.Half),
      M:System.Half.System#IFloatingPoint{System#Half}#Round``1(System.Half,``0),
      M:System.Half.System#IFloatingPoint{System#Half}#Round(System.Half,System.MidpointRounding),
      M:System.Half.System#IFloatingPoint{System#Half}#Round``1(System.Half,``0,System.MidpointRounding),
      M:System.Half.System#IFloatingPoint{System#Half}#ScaleB``1(System.Half,``0),
      M:System.Half.System#IFloatingPoint{System#Half}#Sin(System.Half),
      M:System.Half.System#IFloatingPoint{System#Half}#Sinh(System.Half),
      M:System.Half.System#IFloatingPoint{System#Half}#Sqrt(System.Half),
      M:System.Half.System#IFloatingPoint{System#Half}#Tan(System.Half),
      M:System.Half.System#IFloatingPoint{System#Half}#Tanh(System.Half),
      M:System.Half.System#IFloatingPoint{System#Half}#Truncate(System.Half),
      M:System.Half.System#IFloatingPoint{System#Half}#IsFinite(System.Half),
      M:System.Half.System#IFloatingPoint{System#Half}#IsInfinity(System.Half),
      M:System.Half.System#IFloatingPoint{System#Half}#IsNaN(System.Half),
      M:System.Half.System#IFloatingPoint{System#Half}#IsNegative(System.Half),
      M:System.Half.System#IFloatingPoint{System#Half}#IsNegativeInfinity(System.Half),
      M:System.Half.System#IFloatingPoint{System#Half}#IsNormal(System.Half),
      M:System.Half.System#IFloatingPoint{System#Half}#IsPositiveInfinity(System.Half),
      M:System.Half.System#IFloatingPoint{System#Half}#IsSubnormal(System.Half),
      M:System.Half.System#IIncrementOperators{System#Half}#op_Increment(System.Half),
      M:System.Half.System#IModulusOperators{System#Half,System#Half,System#Half}#op_Modulus(System.Half,System.Half),
      M:System.Half.System#IMultiplyOperators{System#Half,System#Half,System#Half}#op_Multiply(System.Half,System.Half),
      M:System.Half.System#INumber{System#Half}#Abs(System.Half),
      M:System.Half.System#INumber{System#Half}#Clamp(System.Half,System.Half,System.Half),
      M:System.Half.System#INumber{System#Half}#Create``1(``0),
      M:System.Half.System#INumber{System#Half}#CreateSaturating``1(``0),
      M:System.Half.System#INumber{System#Half}#CreateTruncating``1(``0),
      M:System.Half.System#INumber{System#Half}#DivRem(System.Half,System.Half),
      M:System.Half.System#INumber{System#Half}#Max(System.Half,System.Half),
      M:System.Half.System#INumber{System#Half}#Min(System.Half,System.Half),
      M:System.Half.System#INumber{System#Half}#Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Half.System#INumber{System#Half}#Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider),
      M:System.Half.System#INumber{System#Half}#Sign(System.Half),
      M:System.Half.System#INumber{System#Half}#TryCreate``1(``0,System.Half@),
      M:System.Half.System#INumber{System#Half}#TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Half@),
      M:System.Half.System#INumber{System#Half}#TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Half@),
      M:System.Half.System#IParseable{System#Half}#Parse(System.String,System.IFormatProvider),
      M:System.Half.System#IParseable{System#Half}#TryParse(System.String,System.IFormatProvider,System.Half@),
      M:System.Half.System#ISpanParseable{System#Half}#Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider),
      M:System.Half.System#ISpanParseable{System#Half}#TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Half@),
      M:System.Half.System#ISubtractionOperators{System#Half,System#Half,System#Half}#op_Subtraction(System.Half,System.Half),
      M:System.Half.System#IUnaryNegationOperators{System#Half,System#Half}#op_UnaryNegation(System.Half),
      M:System.Half.System#IUnaryPlusOperators{System#Half,System#Half}#op_UnaryPlus(System.Half),
      M:System.Half.#cctor,
      M:System.Half.#ctor,
      P:System.Half.Epsilon,
      P:System.Half.PositiveInfinity,
      P:System.Half.NegativeInfinity,
      P:System.Half.NaN,
      P:System.Half.MinValue,
      P:System.Half.MaxValue,
      P:System.Half.Exponent,
      P:System.Half.Significand,
      P:System.Half.System#IAdditiveIdentity{System#Half,System#Half}#AdditiveIdentity,
      P:System.Half.System#IFloatingPoint{System#Half}#E,
      P:System.Half.System#IFloatingPoint{System#Half}#Epsilon,
      P:System.Half.System#IFloatingPoint{System#Half}#NaN,
      P:System.Half.System#IFloatingPoint{System#Half}#NegativeInfinity,
      P:System.Half.System#IFloatingPoint{System#Half}#NegativeZero,
      P:System.Half.System#IFloatingPoint{System#Half}#Pi,
      P:System.Half.System#IFloatingPoint{System#Half}#PositiveInfinity,
      P:System.Half.System#IFloatingPoint{System#Half}#Tau,
      P:System.Half.System#IMinMaxValue{System#Half}#MinValue,
      P:System.Half.System#IMinMaxValue{System#Half}#MaxValue,
      P:System.Half.System#IMultiplicativeIdentity{System#Half,System#Half}#MultiplicativeIdentity,
      P:System.Half.System#INumber{System#Half}#One,
      P:System.Half.System#INumber{System#Half}#Zero,
      P:System.Half.System#ISignedNumber{System#Half}#NegativeOne
    ],
    Modifiers: [
      ReadOnly
    ],
    Name: Half,
    NamespaceId: N:System,
    ParentId: N:System
  }
}